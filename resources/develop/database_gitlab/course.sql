PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE strands
               (mod_code TEXT,
                strand TEXT,
                FOREIGN KEY (mod_code) REFERENCES "modules"(mod_code));
INSERT INTO strands VALUES('CS2900','AI');
INSERT INTO strands VALUES('CS2910','AI');
INSERT INTO strands VALUES('CS3822','AI');
INSERT INTO strands VALUES('CS3920','AI');
INSERT INTO strands VALUES('CS3930','AI');
INSERT INTO strands VALUES('CS3940','AI');
INSERT INTO strands VALUES('CS3945','AI');
INSERT INTO strands VALUES('CS4200','AI');
INSERT INTO strands VALUES('CS4950','AI');
INSERT INTO strands VALUES('CS4100','AI');
INSERT INTO strands VALUES('CS4250','AI');
INSERT INTO strands VALUES('IY3501','IS');
INSERT INTO strands VALUES('IY3606','IS');
INSERT INTO strands VALUES('IY3609','IS');
INSERT INTO strands VALUES('IY3612','IS');
INSERT INTO strands VALUES('IY3660','IS');
INSERT INTO strands VALUES('IY3840','IS');
INSERT INTO strands VALUES('IY3480','IS');
INSERT INTO strands VALUES('IY4501','IS');
INSERT INTO strands VALUES('IY4523','IS');
INSERT INTO strands VALUES('IY4606','IS');
INSERT INTO strands VALUES('IY4609','IS');
INSERT INTO strands VALUES('IY4612','IS');
INSERT INTO strands VALUES('IY4610','IS');
INSERT INTO strands VALUES('CS3003','SE');
INSERT INTO strands VALUES('CS3480','SE');
INSERT INTO strands VALUES('CS3846','SE');
INSERT INTO strands VALUES('CS3510','SE');
INSERT INTO strands VALUES('CS4980','AI');
INSERT INTO strands VALUES('CS4990','AI');
INSERT INTO strands VALUES('CS3910','SE');
INSERT INTO strands VALUES('CS4910','SE');
INSERT INTO strands VALUES('CS3580','DNS');
INSERT INTO strands VALUES('CS3750','DNS');
INSERT INTO strands VALUES('CS3840','DNS');
INSERT INTO strands VALUES('CS4234','DNS');
INSERT INTO strands VALUES('CS4580','DNS');
INSERT INTO strands VALUES('CS4860','DNS');
INSERT INTO strands VALUES('CS4870','DNS');
INSERT INTO strands VALUES('CS4826','DNS');
INSERT INTO strands VALUES('CS4915','SE');
INSERT INTO strands VALUES('CS4563','SE');
CREATE TABLE associated_awards
               (ucas_code1 TEXT,
                ucas_code2 TEXT,
                FOREIGN KEY (ucas_code1) REFERENCES "programmes"(ucas_code),
                FOREIGN KEY (ucas_code2) REFERENCES "programmes"(ucas_code));
INSERT INTO associated_awards VALUES('G400','G402');
INSERT INTO associated_awards VALUES('G4G7','G4G8');
INSERT INTO associated_awards VALUES('G403','G404');
INSERT INTO associated_awards VALUES('GG47','GG74');
INSERT INTO associated_awards VALUES('G500','G502');
INSERT INTO associated_awards VALUES('G406','G407');
INSERT INTO associated_awards VALUES('G461','G463');
INSERT INTO associated_awards VALUES('G462','G464');
CREATE TABLE programmes (
    "ucas_code" TEXT,
    "prog_code" TEXT,
    "hecos_code" TEXT,
    "title" TEXT,
    "level" TEXT,
    "yini" BOOLEAN,
    "accreditation" TEXT,
    "involved_depts" TEXT,
    "options_text" TEXT,
    "progression_text" TEXT,
    "aims" TEXT,
    "outcomes" TEXT,
    "costs" TEXT,
    "fheq_level" TEXT,
    "status" TEXT,
    "duration" INTEGER,
    "start_stage" INTEGER,
    "specialisation" INTEGER);
INSERT INTO programmes VALUES('G400','1067','','BSc Computer Science','BSC',0,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you will take two further non-project CS2xxx or IY2xxx elective courses.\nIn the <b>final year</b> you will take six further non-project CS3xxx or IY3xxx elective courses.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-6','ACTIVE',3,1,0);
INSERT INTO programmes VALUES('G4G7','1059','','BSc Computer Science (Artificial Intelligence)','BSC',0,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you will take two further non-project CS2XXX elective courses from the Artificial Intelligence (AI) strand.\nIn the <b>third year</b> you will take six further non-project CS3XXX or IY3XXX elective courses, of which at least two must be from the Artificial Intelligence (AI) strand.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-6','ACTIVE',3,1,1);
INSERT INTO programmes VALUES('G407','2675','','BSc Computer Science (Information Security)','BSC',0,replace('GCHQ, British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.\nGCHQ provisionally certified programme - certification is only given if the student meets all degree programme conditions (e.g. takes, and where appropriate passes, the mandatory course units) as per the programme specification.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take one further non-project CS2XXX or IY2XXX elective course.\nIn the <b>third year</b> you will take one further non-project IY3XXX elective course and two further CS3XXX or IY3XXX elective courses.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nan appreciation of the fundamental aspects of cyber security (K);\nan ability to identify and apply appropriate security controls (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-6','ACTIVE',3,1,1);
INSERT INTO programmes VALUES('G464','2843','','BSc Computer Science (Software Engineering)','BSC',0,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take one further non-project CS2XXX or IY2XXX elective course.\nIn the <b>third year</b> you will take four further CS3XXX or IY3XXX elective courses, of which at least two must be from the Software Engineering (SE) strand.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.\nto produce graduates who can work effectively within teams;\nto produce graduates who understand how business value can be delivered to their customers through the software they develop.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nan understanding of the principles of Software Engineering and the importance of good design (K);\nan understanding of how to work within a team in developing a significant software system (K);\nan understanding of the principles of information security and its context in Computer Science (K);\nan understanding of how to work within a small software company and deliver software within required user specifications (K);\nan understanding of how to provide appropriately costed software which delivers value to a customer (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*\nmanage small projects (S)','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-6','ACTIVE',3,1,1);
INSERT INTO programmes VALUES('GG41','1069','','BSc Computer Science and Mathematics','BSC',0,'None','Department of Mathematics',replace('<b>Year 2 – Computer Science</b>\nIn addition to the mandatory courses you must choose one further non-project CS2XXX or IY2XXX course\n<b>Year 2 – Mathematics</b>\nYou must choose 30 credits of Mathematics courses (see Mathematics handbook for options)\n<b>Year 3- Computer Science</b>\nYou must choose <b>either</b> CS3821 <b>or</b> CS3810\n<b>Plus</b>\nTwo or three further non-project CS or IY elective courses – to a total of 60 credits of Computer Science, excluding CS3490 and CS3870.\n<b>Year 3 – Mathematics</b>You must choose 60 credits of Mathematics courses (see Mathematics handbook for options).','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b> - A year out in industry (CS3001) may be taken between second and final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-6','ACTIVE',3,1,0);
INSERT INTO programmes VALUES('G4N2','1062','','BSc Computer Science with Management','BSC',0,'None','N/A',replace('<b>Year 1 - Management</b>\nYou must choose two out of MN1205, MN1305, MN1405 and MN1705 (one per term)\n<b>Year 2 – Computer Science</b>\nIn addition to the mandatory courses you must choose one further non-project CS2XXX or IY2XXX course\n<b>Year 2 – Management</b>\nYou must choose two out of MN2205, MN2305, MN2405, MN2705 (one per term)\n<b>Year 3- Computer Science</b>\nYou must choose <b>either</b> CS3821 <b>or</b> CS3810\n<b>Plus</b>\nfour or five further non-project CS3XXX or IY3XXX elective courses-to a total of 90 credits of Computer Science.\n<b>Year 3 – Management</b>\nYou must choose 30 credits of Management courses (see Management handbook for options)','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b> - A year out in industry (CS3001) may be taken between second and final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-6','DEFUNCT',3,1,0);
INSERT INTO programmes VALUES('G403','2686','','MSci Computer Science','MSCI',0,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take two further non-project CS2XXX or IY2XXX elective courses.\nIn the <b>third year</b> you will take eight non-project CS3XXX or IY3XXX elective courses.\nIn the <b>final year</b> you will take four further non-project CS4XXX or IY4XXX elective courses.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop a mastery of computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nin a flexible and progressive structure, to develop students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an advanced understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto develop an advanced understanding of knowledge and current awareness of current problems and/or new insights in the area of computing science research.','\n',char(10)),replace('an advanced knowledge and understanding of the facts, concepts, principles and theories relating to computing and computer applications (K);\nmastery of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\na command of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S*);\nproblem identification, analysis and solution using critical assessment and reasoned argument (S*);\ntaking responsibility for own learning and developing habits of reflection on that learning (S*);\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S*);\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S*);\ninformation handling and retrieval (including the use of libraries and computer technology) (S*);\nability to work autonomously, and to demonstrate time management and organisational skills (S*).','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-7','ACTIVE',4,1,0);
INSERT INTO programmes VALUES('G402','2327','','BSc Computer Science with a Year in Industry','BSC',1,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you will take two further non-project CS2xxx or IY2xxx elective courses.\nIn the <b>final year</b> you will take six further non-project CS3xxx or IY3xxx elective courses.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS3001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-6','ACTIVE',4,1,0);
INSERT INTO programmes VALUES('G404','2687','','MSci Computer Science with a Year in Industry','MSCI',1,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take two further non-project CS2XXX or IY2XXX elective courses.\nIn the <b>third year</b> you will take eight non-project CS3XXX or IY3XXX elective courses.\nIn the <b>final year</b> you will take four further non-project CS4XXX or IY4XXX elective courses.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS4001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop a mastery of computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nin a flexible and progressive structure, to develop students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an advanced understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto develop an advanced understanding of knowledge and current awareness of current problems and/or new insights in the area of computing science research.','\n',char(10)),replace('an advanced knowledge and understanding of the facts, concepts, principles and theories relating to computing and computer applications (K);\nmastery of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\na command of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S*);\nproblem identification, analysis and solution using critical assessment and reasoned argument (S*);\ntaking responsibility for own learning and developing habits of reflection on that learning (S*);\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S*);\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S*);\ninformation handling and retrieval (including the use of libraries and computer technology) (S*);\nability to work autonomously, and to demonstrate time management and organisational skills (S*).\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-7','ACTIVE',5,1,0);
INSERT INTO programmes VALUES('GG47','2673','','MSci Computer Science (Artificial Intelligence)','MSCI',0,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you will take two further non-project CS2XXX elective courses from the Artificial Intelligence (AI) strand.\nIn the <b>third year</b> you will take eight non-project CS3XXX or IY3XXX elective courses, of which at least two must be from the Artificial Intelligence (AI) strand.\nIn the <b>final year</b> you will take four further non-project CS4XXX or IY4XXX elective courses, of which at least two must be from the Artificial Intelligence (AI) strand.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop a mastery of computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nin a flexible and progressive structure, to develop students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an advanced understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto develop an advanced understanding of knowledge and current awareness of current problems and/or new insights in the area of computing science research.','\n',char(10)),replace('an advanced knowledge and understanding of the facts, concepts, principles and theories relating to computing and computer applications (K);\nmastery of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\na command of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S*);\nproblem identification, analysis and solution using critical assessment and reasoned argument (S*);\ntaking responsibility for own learning and developing habits of reflection on that learning (S*);\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S*);\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S*);\ninformation handling and retrieval (including the use of libraries and computer technology) (S*);\nability to work autonomously, and to demonstrate time management and organisational skills (S*).','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-7','ACTIVE',4,1,1);
INSERT INTO programmes VALUES('G4G8','2446','','BSc Computer Science (Artificial Intelligence) with a Year in Industry','BSC',1,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you will take two further non-project CS2XXX elective courses from the Artificial Intelligence (AI) strand.\nIn the <b>third year</b> you will take six further non-project CS3XXX or IY3XXX elective courses, of which at least two must be from the Artificial Intelligence (AI) strand.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS3001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-6','ACTIVE',4,1,1);
INSERT INTO programmes VALUES('G7G4','2446','','BSc Computer Science (Artificial Intelligence) with a Year in Industry','BSC',1,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you will take two further non-project CS2XXX elective courses from the Artificial Intelligence (AI) strand.\nIn the <b>third year</b> you will take six further non-project CS3XXX or IY3XXX elective courses, of which at least two must be from the Artificial Intelligence (AI) strand.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS3001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-6','DEFUNCT',4,1,1);
INSERT INTO programmes VALUES('GG74','2674','','MSci Computer Science (Artificial Intelligence) with a Year in Industry','MSCI',1,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you will take two further non-project CS2XXX elective courses from the Artificial Intelligence (AI) strand.\nIn the <b>third year</b> you will take eight non-project CS3XXX or IY3XXX elective courses, of which at least two must be from the Artificial Intelligence (AI) strand.\nIn the <b>final year</b> you will take four further non-project CS4XXX or IY4XXX elective courses, of which at least two must be from the Artificial Intelligence (AI) strand.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS4001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop a mastery of computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nin a flexible and progressive structure, to develop students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an advanced understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto develop an advanced understanding of knowledge and current awareness of current problems and/or new insights in the area of computing science research.','\n',char(10)),replace('an advanced knowledge and understanding of the facts, concepts, principles and theories relating to computing and computer applications (K);\nmastery of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\na command of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S*);\nproblem identification, analysis and solution using critical assessment and reasoned argument (S*);\ntaking responsibility for own learning and developing habits of reflection on that learning (S*);\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S*);\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S*);\ninformation handling and retrieval (including the use of libraries and computer technology) (S*);\nability to work autonomously, and to demonstrate time management and organisational skills (S*).\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-7','ACTIVE',5,1,1);
INSERT INTO programmes VALUES('G500','2677','','MSci Computer Science (Information Security)','MSCI',0,replace('GCHQ, British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.\nGCHQ provisionally certified programme - certification is only given if the student meets all degree programme conditions (e.g. takes, and where appropriate passes, the mandatory course units) as per the programme specification.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take one further non-project CS2XXX or IY2XXX elective course.\nIn the <b>third year</b> you will take six further non-project CS3XXX or IY3XXX elective courses, with a maximum of two from the Information Security (IS) strand.\nIn the <b>final year</b> you will take one further non-project CS4XXX or IY4XXX elective course.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop a mastery of computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nin a flexible and progressive structure, to develop students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an advanced understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto develop an advanced understanding of knowledge and current awareness of current problems and/or new insights in the area of computing science research.','\n',char(10)),replace('an advanced knowledge and understanding of the facts, concepts, principles and theories relating to computing and computer applications (K);\nmastery of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\na command of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\na command of the fundamental aspects of cyber security (K);\na mastery of the identification and appropriate application of security controls (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S*);\nproblem identification, analysis and solution using critical assessment and reasoned argument (S*);\ntaking responsibility for own learning and developing habits of reflection on that learning (S*);\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S*);\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S*);\ninformation handling and retrieval (including the use of libraries and computer technology) (S*);\nability to work autonomously, and to demonstrate time management and organisational skills (S*).','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-7','ACTIVE',4,1,1);
INSERT INTO programmes VALUES('G406','2676','','BSc Computer Science (Information Security) with a Year in Industry','BSC',1,replace('GCHQ, British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.\nGCHQ provisionally certified programme - certification is only given if the student meets all degree programme conditions (e.g. takes, and where appropriate passes, the mandatory course units) as per the programme specification.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take one further non-project CS2XXX or IY2XXX elective course.\nIn the <b>third year</b> you will take one further non-project IY3XXX elective course and two further CS3XXX or IY3XXX elective courses.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS3001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nan appreciation of the fundamental aspects of cyber security (K);\nan ability to identify and apply appropriate security controls (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-6','ACTIVE',4,1,1);
INSERT INTO programmes VALUES('G502','2678','','MSci Computer Science (Information Security) with a Year in Industry','MSCI',1,replace('GCHQ, British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.\nGCHQ provisionally certified programme - certification is only given if the student meets all degree programme conditions (e.g. takes, and where appropriate passes, the mandatory course units) as per the programme specification.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take one further non-project CS2XXX or IY2XXX elective course.\nIn the <b>third year</b> you will take six further non-project CS3XXX or IY3XXX elective courses, with a maximum of two from the Information Security (IS) strand.\nIn the <b>final year</b> you will take one further non-project CS4XXX or IY4XXX elective course.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS4001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop a mastery of computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nin a flexible and progressive structure, to develop students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an advanced understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto develop an advanced understanding of knowledge and current awareness of current problems and/or new insights in the area of computing science research.','\n',char(10)),replace('an advanced knowledge and understanding of the facts, concepts, principles and theories relating to computing and computer applications (K);\nmastery of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\na command of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\na command of the fundamental aspects of cyber security (K);\na mastery of the identification and appropriate application of security controls (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S*);\nproblem identification, analysis and solution using critical assessment and reasoned argument (S*);\ntaking responsibility for own learning and developing habits of reflection on that learning (S*);\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S*);\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S*);\ninformation handling and retrieval (including the use of libraries and computer technology) (S*);\nability to work autonomously, and to demonstrate time management and organisational skills (S*).\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-7','ACTIVE',5,1,1);
INSERT INTO programmes VALUES('G461','2845','','MSci Computer Science (Software Engineering)','MSCI',0,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take one further non-project CS2XXX or IY2XXX elective course.\nIn the <b>third year</b> you will take four further non-project CS3XXX or IY3XXX elective courses, of which at least two must be from the Software Engineering (SE) strand.\nIn the <b>final year</b> you will take four further non-project CS4XXX or IY4XXX elective courses.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop a mastery of computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nin a flexible and progressive structure, to develop students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an advanced understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto develop an advanced understanding of knowledge and current awareness of current problems and/or new insights in the area of computing science research.\nto produce graduates who can work effectively within teams;\nto produce graduates who understand how business value can be delivered to their customers through the software they develop.\nto produce graduates who can understand and work within a small company;','\n',char(10)),replace('an advanced knowledge and understanding of the facts, concepts, principles and theories relating to computing and computer applications (K);\nmastery of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\na command of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nan advanced understanding of the principles of Software Engineering and the importance of good design (K);\nan advanced understanding of how to work within a team in developing a significant software system (K);\nan understanding of the principles of information security and its context in Computer Science (K);\na mastery of how to work within a small software company and deliver software within required user specifications (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S*);\nproblem identification, analysis and solution using critical assessment and reasoned argument (S*);\ntaking responsibility for own learning and developing habits of reflection on that learning (S*);\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S*);\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S*);\ninformation handling and retrieval (including the use of libraries and computer technology) (S*);\nability to work autonomously, and to demonstrate time management and organisational skills (S*).\nan ability to apply the practical and analytical skills present in the programme as a whole (K);\nshow awareness of wider customer contexts and the identification of problems that such contexts might deliver (K);\nexhibit the ability to work co-operatively to deliver a significant piece of work (K);\nexhibit critical self evaluation of the process (K);\nmanage small projects (S)','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-7','ACTIVE',4,1,1);
INSERT INTO programmes VALUES('G462','2844','','BSc Computer Science (Software Engineering) with a Year in Industry','BSC',1,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take one further non-project CS2XXX or IY2XXX elective course.\nIn the <b>third year</b> you will take four further CS3XXX or IY3XXX elective courses, of which at least two must be from the Software Engineering (SE) strand.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS3001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.\nto produce graduates who can work effectively within teams;\nto produce graduates who understand how business value can be delivered to their customers through the software they develop.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nan understanding of the principles of Software Engineering and the importance of good design (K);\nan understanding of how to work within a team in developing a significant software system (K);\nan understanding of the principles of information security and its context in Computer Science (K);\nan understanding of how to work within a small software company and deliver software within required user specifications (K);\nan understanding of how to provide appropriately costed software which delivers value to a customer (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*\nmanage small projects (S)\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-6','ACTIVE',4,1,1);
INSERT INTO programmes VALUES('G463','2846','','MSci Computer Science (Software Engineering) with a Year in Industry','MSCI',1,replace('British Computer Society (BCS), and European Quality Assurance Network for Informatics Education (EQANIE).\nTo comply with British Computer Society and EQANIE accreditation requirements students must successfully complete the degree programme and pass the final year project.','\n',char(10)),'N/A',replace('In the <b>second year</b> you take one further non-project CS2XXX or IY2XXX elective course.\nIn the <b>third year</b> you will take four further non-project CS3XXX or IY3XXX elective courses, of which at least two must be from the Software Engineering (SE) strand.\nIn the <b>final year</b> you will take four further non-project CS4XXX or IY4XXX elective courses.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\n<b>Year in Industry</b>\nStudents taking an industrial year take additional course CS4001 and thus have 150 credits in their final year.\nStudents on degree programmes with Year in Industry need to fulfil the requirements set out in the departmental Year in Industry Handbook in order to progress to the placement and be eligible for the degree title.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop a mastery of computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nin a flexible and progressive structure, to develop students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an advanced understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto develop an advanced understanding of knowledge and current awareness of current problems and/or new insights in the area of computing science research.\nto produce graduates who can work effectively within teams;\nto produce graduates who understand how business value can be delivered to their customers through the software they develop.\nto produce graduates who can understand and work within a small company;','\n',char(10)),replace('an advanced knowledge and understanding of the facts, concepts, principles and theories relating to computing and computer applications (K);\nmastery of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\na command of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nan advanced understanding of the principles of Software Engineering and the importance of good design (K);\nan advanced understanding of how to work within a team in developing a significant software system (K);\nan understanding of the principles of information security and its context in Computer Science (K);\na mastery of how to work within a small software company and deliver software within required user specifications (K);\nappreciation of the importance of computing and information technology for commerce and industry and an understanding of expected industry changes and the effects they will have (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S*);\nproblem identification, analysis and solution using critical assessment and reasoned argument (S*);\ntaking responsibility for own learning and developing habits of reflection on that learning (S*);\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S*);\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S*);\ninformation handling and retrieval (including the use of libraries and computer technology) (S*);\nability to work autonomously, and to demonstrate time management and organisational skills (S*).\nan ability to apply the practical and analytical skills present in the programme as a whole (K);\nshow awareness of wider customer contexts and the identification of problems that such contexts might deliver (K);\nexhibit the ability to work co-operatively to deliver a significant piece of work (K);\nexhibit critical self evaluation of the process (K);\nmanage small projects (S)\nability to apply knowledge and skills in computing to large-scale practical applications (S);','\n',char(10)),replace('There are no single associated costs greater than £50 per item on this degree programme.\nHowever, costs incurred by students while on a Year in Industry/Business vary depending on the nature and location of the placement. For further information please contact our Student Fees Office.','\n',char(10)),'4-7','ACTIVE',5,1,1);
INSERT INTO programmes VALUES('comptech','3424','','BSc Computing Technologies','BSC',0,'None','N/A',replace('In the <b>second year</b> you will choose one 15 credit elective.  This will normally be from another department.  Approval will be required.\nIn the <b>third year</b> you will choose two 15 credit electives which will normally include CS3003 IT Project Management and/or IY3501 Security Management.  A full list will be confirmed with the department during the course choices process.','\n',char(10)),replace('For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.\nCS3824 Project in Computing Technologies must be passed in order to qualify for the award.','\n',char(10)),replace('to produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment;\nto develop computing-related cognitive abilities and skills as described in the QAA Computing benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, cost, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates who can work effectively within teams;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education,  including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills;\nto produce graduates who understand how business value can be delivered.','\n',char(10)),replace('knowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications;(K)\nan understanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context;(K)\nknowledge of how computers are programmed and used; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers;(K)\nan understanding of the principles of Software Engineering and the importance of good design;(K)\nan understanding of how to work within a team in developing a significant software system;(K)\nan understanding of the principles of information security and its context in Computing Technologies;(K)\nan understanding of how to provide value to a customer;(K)\nability to deploy appropriate practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, distributed systems and web-based systems) to meet given requirements under practical constraints;(S)\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams;(S)*\nproblem identification, analysis and solution using critical assessment and reasoned argument;(S)*\ntaking responsibility for own learning and developing habits of reflection on that learning;(S)*\nskills in written communication, project documentation, verbal presentation; numeracy and computation(S)*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW);(S)*\ninformation handling and retrieval (including the use of libraries and computer technology);(S)*\nability to work autonomously, and to demonstrate time management and organisational skills;(S)*\nmanage small projects;(S)','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','4-6','ACTIVE',3,1,0);
INSERT INTO programmes VALUES('G4T6','3014','','BSc Computer Science (Distributed and Networked Systems)','BSC',0,'None','N/A',NULL,NULL,NULL,NULL,NULL,NULL,'DEFUNCT',3,1,1);
INSERT INTO programmes VALUES('G40F','3449',NULL,'BSc Computer Science with Integrated Foundation Year','BSC',0,'None','N/A',replace('In the <b>second year</b> you will take two further non-project CS2xxx or IY2xxx elective courses.\nIn the <b>final year</b> you will take six further non-project CS3xxx or IY3xxx elective courses.','\n',char(10)),'For further information on the progression and award requirements for your degree, please refer to Royal Holloway’s Academic Regulations. As part of your degree programme you may also be required to complete a course to develop your academic writing skills. This course does not carry credit but passing it is a requirement to progress to the next year of study.',replace('For the Foundation Year:\nto develop the required skills in mathematical concepts and techniques and for you to apply these concepts to problems in Eng ineering, Computer Science, Maths and\nPhysics, in preparation for level 4 study;\nto equip you with the basic experimental, programming or practical techniques required for scientific degrees;\nto start the process of independent project work in science with support of expert academics;\nto put in context scientific knowledge and developments into a wider context of history, society and globalisation.\nFollowing on to aims for the BSc:\nto produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a\n\nFollowing on to aims for the BSc:\nto produce graduates with the ability to engage in the lifelong learning and with the skills required for a professional career in a computer-based environment or for a research career in Computer Science and related areas;\nto develop computing-related cognitive abilities and skills as described in the QAA Computer Science benchmark statement;\nto develop, in a flexible and progressive structure, students’ knowledge and understanding of essential facts and theory, with the ability to use this knowledge to devise, specify, design, implement, test, document and critically evaluate computer-based systems;\nto develop an understanding of professional and ethical issues involved in the deployment of computer technology;\nto produce graduates with a range of personal attributes relevant to the world beyond higher education, including information retrieval and use, numeracy, the ability to devise and present logical arguments to inform and support actions, and organisational skills.','\n',char(10)),replace('Foundation Year\n\nKnowledge of and ability to apply mathematics to scientific and computational problems (K, S);\nWorking knowledge of at least one high level programming language (K);\nUnderstanding of applying fundamental computer science technologies to simple problems (S);\nStart to take responsibility and to develop the individual learning, communication and research skills (S)\n\nBSc\n\nknowledge and understanding of the essential facts, concepts, principles and theories relating to computing and computer applications (K);\nunderstanding of the implications of recent research in Computer Science, artificial intelligence and related fields, and how such research results can be incorporated into computer-based systems (K);\nunderstanding of the professional, moral and ethical aspects of the use of computer-based systems, and ability to recognise any risks or safety aspects in a given context (K);\nknowledge of how computers are programmed and used; advanced programming; software engineering and team work for developing a significant software system; the fundamental technologies used for artificial intelligence; the functioning of the Internet and the World Wide Web; the main concepts of database technology and design; background theory necessary for a deeper understanding of computing and computers (K);\ndepending on their programme of studies, students may also gain a knowledge of the following key practical application technologies: operating systems; graphics; robotics, bioinformatics, information security, applied artificial intelligence and human-computer interfaces; theoretical foundations of algorithms and programming (K);\nability to deploy appropriate theory, practices and tools for the modelling, specification, design, implementation and evaluation of computer-based systems (including stand-alone computer systems, information systems, embedded systems, distributed systems and web-based systems) to meet given requirements under practical constraints (S);\nemploy the research skills needed to investigate a defined topic under supervision, through an extended individual project (S);\ninterpersonal skills, including the ability to work as a member of a development team, recognising/respecting the viewpoints of others, recognising the different roles within a team and the different ways of organising teams (S);*\nproblem identification, analysis and solution using critical assessment and reasoned argument (S);*\ntaking responsibility for own learning and developing habits of reflection on that learning (S);*\nskills in written communication, project documentation, verbal presentation; numeracy and computation (S);*\nuse of information technology (including spreadsheets, databases, word processing, email and WWW) (S); *\ninformation handling and retrieval (including the use of libraries and computer technology) (S);*\nability to work autonomously, and to demonstrate time management and organisational skills (S);*','\n',char(10)),'There are no single associated costs greater than £50 per item on this degree programme.','3-6','ACTIVE',4,0,0);
INSERT INTO programmes VALUES('GN41','1257','','BSc Computing and Business','BSC',0,'None',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'DEFUNCT',3,1,NULL);
INSERT INTO programmes VALUES('G4T7','3015',NULL,'BSc Computer Science (Distributed and Networked Systems) with a Year in Industry','BSC',1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'DEFUNCT',4,1,NULL);
INSERT INTO programmes VALUES('G4G5','3016',NULL,'MSci Computer Science (Distributed and Networked Sysytems)','MSCI',0,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'DEFUNCT',4,1,NULL);
INSERT INTO programmes VALUES('G4G9','3017',NULL,'MSci Computer Science (Distributed and Networked Systems) with a Year in Industry','MSCI',1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'DEFUNCT',5,1,NULL);
CREATE TABLE IF NOT EXISTS "people" (
	"id"	TEXT,
	"name"	TEXT,
	"email"	TEXT,
	PRIMARY KEY("id")
);
INSERT INTO people VALUES('AJ','Adrian Johnstone','a.johnstone@rhul.ac.uk');
INSERT INTO people VALUES('NB','Nuno Barreiro','nuno.barreiro@rhul.ac.uk');
INSERT INTO people VALUES('JK','Johannes Kinder','johannes.kinder@rhul.ac.uk');
INSERT INTO people VALUES('DC','Dave Cohen','d.cohen.work@googlemail.com');
INSERT INTO people VALUES('JF','José Fiadeiro','Jose.Fiadeiro@rhul.ac.uk');
INSERT INTO people VALUES('CM','Carlos Matos','carlos.matos@rhul.ac.uk');
INSERT INTO people VALUES('HS','Hugh Shanahan','hugh.shanahan@rhul.ac.uk');
INSERT INTO people VALUES('IT','Iddo Tzameret','Iddo.Tzameret@rhul.ac.uk');
INSERT INTO people VALUES('EQ','Elizabeth Quaglia','Elizabeth.Quaglia@rhul.ac.uk');
INSERT INTO people VALUES('PK','Peter Komisarczuk','Peter.Komisarczuk@rhul.ac.uk');
INSERT INTO people VALUES('GK','Giorgios Koutsoukos','Giorgios.Koutsoukos@rhul.ac.uk');
INSERT INTO people VALUES('ES','Elizabeth Scott','e.scott@rhul.ac.uk');
INSERT INTO people VALUES('ZYL','Zhiyuan Luo','zhiyuan.luo@rhul.ac.uk');
INSERT INTO people VALUES('GG','Gregory Gutin','gregory.gutin@rhul.ac.uk');
INSERT INTO people VALUES('VV','Volodya Vovk','V.Vovk@rhul.ac.uk');
INSERT INTO people VALUES('KS','Kostas Stathis','kostas.stathis@rhul.ac.uk');
INSERT INTO people VALUES('KP','Kenny Paterson','Kenny.Paterson@rhul.ac.uk');
INSERT INTO people VALUES('DK','Daniel O''Keeffe','Daniel.OKeeffe@rhul.ac.uk');
INSERT INTO people VALUES('MH','Matthew Hague','matthew.hague@rhul.ac.uk');
INSERT INTO people VALUES('ZHL','Zhaohui Luo','zhaohui.luo@rhul.ac.uk');
INSERT INTO people VALUES('BP','Bertram Poettering','bertram.poettering@rhul.ac.uk');
INSERT INTO people VALUES('AP','Alberto Paccanaro','alberto.paccanaro@rhul.ac.uk');
INSERT INTO people VALUES('MW','Magnus Wahlstrom','Magnus.Wahlstrom@rhul.ac.uk');
INSERT INTO people VALUES('YK','Yuri Kalnishkan','yuri.kalnishkan@rhul.ac.uk');
INSERT INTO people VALUES('GC','Gregory Chockler','gregory.chockler@rhul.ac.uk');
INSERT INTO people VALUES('CW','Chris Watkins','chris.watkins@rhul.ac.uk');
INSERT INTO people VALUES('NP','Nicola Paoletti','nicola.paoletti@rhul.ac.uk');
INSERT INTO people VALUES('NC','Nicolo Colombo','nicolo.colombo@rhul.ac.uk');
INSERT INTO people VALUES('AG','Alex Gao','yang.gao@rhul.ac.uk');
INSERT INTO people VALUES('EE','Eduard Eiben','eduard.eiben@rhul.ac.uk');
INSERT INTO people VALUES('SB','Sara Bernardini','sara.bernardini@rhul.ac.uk');
INSERT INTO people VALUES('CC','Carlos Cid','carlos.cid@rhul.ac.uk');
INSERT INTO people VALUES('JBA','Jorge Blasco-Alis','Jorge.BlascoAlis@rhul.ac.uk');
INSERT INTO people VALUES('DS','Daniele Sgandurra','daniele.sgandurra@rhul.ac.uk');
INSERT INTO people VALUES('SED','Salah Eddin Darwish','salaheddin.darwish@rhul.ac.uk');
INSERT INTO people VALUES('SW','Stephen Wolthusen','stephen.wolthusen@rhul.ac.uk');
INSERT INTO people VALUES('KM','Kostas Markantonakis','K.Markantonakis@rhul.ac.uk');
INSERT INTO people VALUES('CMi','Chris Mitchell','C.Mitchell@rhul.ac.uk');
INSERT INTO people VALUES('GP','Geraint Price','Geraint.Price@rhul.ac.uk');
INSERT INTO people VALUES('DHS','Darren Hurley-Smith','Darren.Hurley-Smith@rhul.ac.uk');
INSERT INTO people VALUES('JH','Jassim Happa','Jassim.Happa@rhul.ac.uk');
INSERT INTO people VALUES('RR','Reuben Rowe','Reuben.Rowe@rhul.ac.uk');
INSERT INTO people VALUES('MS','Matteo Sammartino','Matteo.Sammartino@rhul.ac.uk');
INSERT INTO people VALUES('AD','Argyrios Deligkas','Argyrios.Deligkas@rhul.ac.uk');
INSERT INTO people VALUES('JL','Julien Lange','Julien.Lange@rhul.ac.uk');
INSERT INTO people VALUES('RP','Rachel Player','Rachel.Player@rhul.ac.uk');
CREATE TABLE assessment_components (
  "mod_code" text,
  "set_order" integer,
  "name" text,
  "description" text,
  "weight" integer,
  "length" text,
  "units_of_length" text,
  "must_pass" text,
  "marked_out_of" text,
  "kis_category" text,
  "final_assessment" text,
  foreign key (mod_code) references modules(mod_code)
);
INSERT INTO assessment_components VALUES('CS1803',99,'EX','practical examination',40,'','','','100','','');
INSERT INTO assessment_components VALUES('CS1803',1,'CW1','coursework',30,'','','','100','','');
INSERT INTO assessment_components VALUES('CS1803',2,'CW2','coursework',30,'','','','100','','');
INSERT INTO assessment_components VALUES('CS1820',1,'CW','individual report',25,'','','','100','','');
INSERT INTO assessment_components VALUES('CS1820',2,'PROJECT','coursework',75,'','','','100','','');
INSERT INTO assessment_components VALUES('CS2800',99,'EX','examination',60,'','','No','100','','');
INSERT INTO assessment_components VALUES('CS2800',1,'CW','coursework',40,'','','No','100','','');
INSERT INTO assessment_components VALUES('CS3001',1,'CW','coursework',100,'','','Yes','100','','');
INSERT INTO assessment_components VALUES('CS3110',99,'EX','examination',90,'','','No','100','','');
INSERT INTO assessment_components VALUES('CS3110',1,'CW','coursework',10,'','','No','100','','');
INSERT INTO assessment_components VALUES('CS3250',99,'EX','examination',80,'','','','100','','');
INSERT INTO assessment_components VALUES('CS3250',1,'CW','assignments',20,'','','','100','','');
INSERT INTO assessment_components VALUES('CS3810',1,'CW','Plan',10,'','','No','100','','');
INSERT INTO assessment_components VALUES('CS3821',1,'CW1','Plan',5,'','','No','100','','');
INSERT INTO assessment_components VALUES('IY3821',1,'CW1','Plan',5,'','','No','100','','');
INSERT INTO assessment_components VALUES('CS3846',99,'EX','examination',40,'','','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3846',1,'CW','coursework',60,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3930',99,'EX','examination',80,'','','','100','','');
INSERT INTO assessment_components VALUES('CS3930',1,'CW','coursework',20,'','','','100','','');
INSERT INTO assessment_components VALUES('CS4001',1,'CW','coursework',100,'','','Yes','100','','');
INSERT INTO assessment_components VALUES('IY4500',1,'PROJECT','project',100,'','','','100','','');
INSERT INTO assessment_components VALUES('CS1870',1,'CW','Written Assignment',10,'5','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS1870',99,'EX','Written exam',90,'90','Minutes','No','100','','');
INSERT INTO assessment_components VALUES('CS2890',2,'PROJECT','Project',65,'60','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS2890',1,'CW','Quizzes',35,'12','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS3470',1,'CW','Written Assignment',30,'30','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS3470',99,'EX','Written Exam',70,'2','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS3480',1,'PROJECT','Project',50,'60','Hours','Yes','100','','');
INSERT INTO assessment_components VALUES('CS3480',99,'EX','Written exam',50,'2','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS3510',1,'CW1','Written Assignment',15,'15','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS3510',2,'CW2','Written Assignment',25,'25','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS3510',99,'EX','Written exam',60,'2','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS4250',1,'CW1','Written Assignment',30,'30','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS4250',2,'CW2','Quiz and labs',10,'15','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS4250',99,'EX','Written exam',60,'2','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS4940',1,'CW','Quizzes',20,'10','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS4940',2,'PROJECT','Project',20,'35','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS4940',99,'EX','Written exam',60,'2','Hours','No','100','','');
INSERT INTO assessment_components VALUES('CS3810',2,'PRESENTATION','Presentation',10,NULL,'','No','100','','');
INSERT INTO assessment_components VALUES('CS3810',99,'PROJECT','Project',80,NULL,'','No','100','','');
INSERT INTO assessment_components VALUES('CS3821',2,'CW2','Interim Review',25,NULL,'','No','100','','');
INSERT INTO assessment_components VALUES('CS3821',99,'PROJECT','Project',70,NULL,'','No','100','','');
INSERT INTO assessment_components VALUES('IY3821',2,'CW2','Interim Review',25,NULL,'','No','100','','');
INSERT INTO assessment_components VALUES('IY3821',99,'PROJECT','Project',70,NULL,'','No','100','','');
INSERT INTO assessment_components VALUES('CS1811',2,'CW2','Programming Assignments',30,'30','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1811',1,'CW1','Quizzes',10,'100','Minutes','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1811',99,'EX','Written exam',60,'90','Minutes','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS4234',99,'EX','examination',60,'','','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS4234',1,'PROJECT','project',40,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1813',99,'EX','examination',60,'','','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS1813',1,'PROJECT','project',40,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3824',0,'','Project',100,'interim report guideline 5000 words, final report guideline 15000 words, other variable length items according to each project','words','Y','100','C','Yes');
INSERT INTO assessment_components VALUES('CS3000',0,'','Coursework',14,'Individual assignments, questions are published two weeks before the submission deadline.','','N','100','C','');
INSERT INTO assessment_components VALUES('CS3000',99,'EX','Written exam (closed books)',86,'2','hours','Y','100','W','Exam is the final assessment.');
INSERT INTO assessment_components VALUES('CS1822',1,'CW1','Checkpoints',0,'','','Yes','100','C','N');
INSERT INTO assessment_components VALUES('CS1822',2,'CW2','Coursework',60,'','','No','100','C','Y');
INSERT INTO assessment_components VALUES('CS1822',3,'GROUP','Group Projects',40,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3823',0,'','Project',100,'interim report guideline approx 5000 words, final report guideline approx 15000 words, other variable length items according to each project','words','Y','100','C','Yes');
INSERT INTO assessment_components VALUES('CS4920',99,'EX','Examination',80,'2','hours','N','100','W - Written Exam','Y');
INSERT INTO assessment_components VALUES('CS4920',1,'','Set Exercises (normally 3 plus lab sessions exercises)',20,'40','hours','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('CS2841',1,'CW','Written Assignment',30,' ','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2841',99,'EX','Written exam',70,'90','Minutes','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3220',99,'EX','examination',60,'','','','100','W','Y');
INSERT INTO assessment_components VALUES('CS3220',1,'PROJECT','project',40,'','','','100','C','N');
INSERT INTO assessment_components VALUES('IY3501',99,'EX','Examination',100,'2','hours','Y','100','W - Written Exam','Yes');
INSERT INTO assessment_components VALUES('CS2865',0,'','Worksheets (normally between 2 and 4)',10,'10','hours','N','100','C','N');
INSERT INTO assessment_components VALUES('CS2865',99,'EX','Examination',90,'90','minutes','N','100','W','Y');
INSERT INTO assessment_components VALUES('CS4825',1,'PROJECT','project',100,'','','Yes','100','C','Y');
INSERT INTO assessment_components VALUES('CS4915',99,'EX','Examination',70,'2','hours','N','100','W - Written Exam','Y');
INSERT INTO assessment_components VALUES('CS4915',1,'','Report (normally between 1 and 3)',20,'4,000 (guideline total)','words','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('CS4915',2,'','Presentation',20,'Up to 1','hours','N','100','P - Practical Exam','N');
INSERT INTO assessment_components VALUES('CS4504',99,'EX','examination',60,'','','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS4504',1,'PROJECT','project',40,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2815',1,'PROJECT','project',100,'','','Yes','100','C','Y');
INSERT INTO assessment_components VALUES('CS4910',99,'EX','Examination',80,'2','hours','N','100','W - Written Exam','Y');
INSERT INTO assessment_components VALUES('CS4910',1,'','Report (normally between 1 and 3)',20,'4,000 (guideline total)','words','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('CS3915',99,'EX','Examination',70,'2','hours','N','100','W - Written Exam','Y');
INSERT INTO assessment_components VALUES('CS3915',1,'','Report (normally between 1 and 3)',20,'4,000 (guideline total)','words','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('CS3915',2,'','Presentation',20,'Up to 1','hours','N','100','P - Practical Exam','N');
INSERT INTO assessment_components VALUES('CS3915',0,'','Report (normally between 1 and 3)',20,'4,000 (guideline total)','words','N','100','C','');
INSERT INTO assessment_components VALUES('CS3915',99,'EX','Examination',70,'2','hours','N','100','W','Yes');
INSERT INTO assessment_components VALUES('CS3915',2,'','Presentation',10,'up to 1','hour','N','100','P','');
INSERT INTO assessment_components VALUES('CS4220',0,'','Project',40,'30','N/A','N','100','C','');
INSERT INTO assessment_components VALUES('CS4220',99,'EX','Examination',60,'2','hours','N','100','W','Yes');
INSERT INTO assessment_components VALUES('CS1830',1,'GROUP','group project',40,'','','','100','C','Y');
INSERT INTO assessment_components VALUES('CS1830',2,'CW','individual assignments',60,'','','','100','C','N');
INSERT INTO assessment_components VALUES('CS4945',0,'','Set exercises (normally between 1 and 3)',20,'20','N/A','N','100','C','');
INSERT INTO assessment_components VALUES('CS4945',99,'EX','Examination',80,'2','hours','N','100','W','Yes');
INSERT INTO assessment_components VALUES('CS4990',99,'EX','examination',70,'','','Yes','100','W','Y');
INSERT INTO assessment_components VALUES('CS4990',1,'CW','coursework',30,'','','Yes','100','C','N');
INSERT INTO assessment_components VALUES('DC3760',0,'','Set exercises (normally between 2 and 5)',20,'40','hours','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('DC3760',99,'EX','Examination',80,'2','hours','N','100','W - Written Exam','Y');
INSERT INTO assessment_components VALUES('CS4821',1,'CW1','Plan',5,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4821',2,'CW2','Interim Review',25,NULL,'','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4821',3,'PROJECT','Project',70,NULL,'','No','100','C','Y');
INSERT INTO assessment_components VALUES('IY3606',99,'EX','Examination',100,'2','hours','Y','100','W','Yes');
INSERT INTO assessment_components VALUES('CS2910',1,'CW','Quizzes',20,'10','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2910',2,'PROJECT','Project',20,'28','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2910',99,'EX','Written exam',60,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('IY4612',99,'EX','Examination',100,'2','hours','Y','100','W','Yes');
INSERT INTO assessment_components VALUES('CS4563',0,'','Project',50,'40','hours','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('CS4563',1,'','Presentation (normally between 1 and 3)',50,'Up to 2','hours','N','100','P - Practical Exam','Y');
INSERT INTO assessment_components VALUES('CS4980',1,'CW','Coursework',30,'','','Yes','100','C','N');
INSERT INTO assessment_components VALUES('CS4980',99,'EX','examination',70,'','','Yes','100','W','Y');
INSERT INTO assessment_components VALUES('CS2850',1,'CW','Quizzes',20,'20','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2850',2,'PROJECT','Project',20,'20','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2850',99,'EX','Exam',60,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS1821',1,'CW1','Checkpoints',0,'','','Yes','100','C','N');
INSERT INTO assessment_components VALUES('CS1821',2,'CW2','Coursework',60,'','','No','100','C','Y');
INSERT INTO assessment_components VALUES('CS1821',3,'GROUP','Group Projects',40,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('IY2760',99,'EX','examination',60,'','','Yes','100','W','Y');
INSERT INTO assessment_components VALUES('IY2760',1,'CW1','coursework',20,'20','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('IY2760',2,'CW2','coursework',20,'20','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('IY2840',99,'EX','examination',60,'','','Yes','100','W','Y');
INSERT INTO assessment_components VALUES('IY2840',1,'CW1','set exercises',20,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('IY2840',2,'CW2','set exercises',20,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2900',1,'TEST1','Quiz',10,'1','Hours','No','100','W','N');
INSERT INTO assessment_components VALUES('CS2900',2,'TEST2','Quiz',10,'1','Hours','No','100','W','N');
INSERT INTO assessment_components VALUES('CS2900',3,'TEST3','Quiz',10,'1','Hours','No','100','W','N');
INSERT INTO assessment_components VALUES('CS2900',4,'TEST4','Quiz',10,'1','Hours','No','100','W','N');
INSERT INTO assessment_components VALUES('CS2900',99,'EX','Exam',60,'2','Hours','Yes','100','W','Y');
INSERT INTO assessment_components VALUES('IY3612',99,'EX','Examination',100,'2','hours','Y','100','W','Yes');
INSERT INTO assessment_components VALUES('CS2847',99,'EX','examination',40,'','','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS2847',1,'PROJECT','project',60,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3490',99,'EX','examination',90,'','','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3490',1,'CW','worksheets',10,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1812',2,'CW2','Programming Assignments',30,'30','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1812',1,'CW1','Quizzes',10,'100','Minutes','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1812',99,'EX','Written exam',60,'90','Minutes','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3003',99,'EX','examination',50,'','','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3003',1,'CW1','set exercises',10,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3003',2,'CW2','reports',40,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3760',0,'','Set exercises (normally between 2 and 5)',20,'40','hours','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('CS3760',99,'EX','Examination',80,'2','hours','N','100','W - Written Exam','Y');
INSERT INTO assessment_components VALUES('CS3563',0,'','Project',50,'40','hours','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('CS3563',1,'','Presentation (normally between 1 and 3)',50,'Up to 2','hours','N','100','P - Practical Exam','Y');
INSERT INTO assessment_components VALUES('CS3563',0,'','Project',50,'40','hours','N','100','C','');
INSERT INTO assessment_components VALUES('CS3563',99,'EX','Examination',50,'1.5','hours','N','100','W','Yes');
INSERT INTO assessment_components VALUES('CS4823',0,'','Project',100,'interim report guideline approx 5000 words, final report guideline approx 15000 words, other variable length items according to each project','words','Y','100','C','Yes');
INSERT INTO assessment_components VALUES('DC3811',0,'','Project',100,'80','hours','Y','100','C','Yes');
INSERT INTO assessment_components VALUES('CS1860',1,'CW','Written Assignment',20,'10','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1860',99,'EX','Written exam',80,'90','Minutes','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS1831',1,'GROUP','group project',40,'','','','100','C','Y');
INSERT INTO assessment_components VALUES('CS1831',2,'CW','individual assignments',60,'','','','100','C','N');
INSERT INTO assessment_components VALUES('CS3920',1,'CW1','Written Assignment',27,'27','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3920',2,'CW2','Quiz and labs',13,'9','Hours','No','100','W','N');
INSERT INTO assessment_components VALUES('CS3920',99,'EX','Written exam',60,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('IY4606',99,'EX','Examination',100,'2','hours','Y','100','W','Yes');
INSERT INTO assessment_components VALUES('CS1801',0,'','Programming exercises (between 4 and 6)',10,'50','hours','N','100','C','');
INSERT INTO assessment_components VALUES('CS1801',99,'EX','Examination',90,'3','hours','N','100','W','Y');
INSERT INTO assessment_components VALUES('CS1801',2,'','Laboratory exercises',0,'66','hours','Y','Pass/fail','C','');
INSERT INTO assessment_components VALUES('CS2821',0,'','Set exercises (between 3 and 5)',20,'40','hours','N','100','C','');
INSERT INTO assessment_components VALUES('CS2821',99,'EX','Examination',80,'2','hours','N','100','W','Y');
INSERT INTO assessment_components VALUES('CS3840',0,'','Project',60,'','','N','100','C','');
INSERT INTO assessment_components VALUES('CS3840',99,'EX','Examination',40,'2','hours','N','100','W','Yes');
INSERT INTO assessment_components VALUES('IY4523',99,'EX','Examination',100,'2','hours','Y','100','W','Yes');
INSERT INTO assessment_components VALUES('CS4860',2,'PROJECT','Project',30,'25','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4860',1,'CW','Quiz and labs',10,'5','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4860',99,'EX','Written exam',60,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3940',1,'CW','Quizzes',20,'10','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3940',2,'PROJECT','Project',20,'35','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3940',99,'EX','Written exam',60,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('DC1821',1,'CW1','Checkpoints',0,'','','Yes','100','C','N');
INSERT INTO assessment_components VALUES('DC1821',2,'CW2','Coursework',60,'','','No','100','C','Y');
INSERT INTO assessment_components VALUES('DC1821',3,'GROUP','Group Projects',40,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('IY4501',99,'EX','Examination',100,'2','hours','Y','100','W - Written Exam','Yes');
INSERT INTO assessment_components VALUES('CS4490',0,'','Worksheets (normally between 1 and 3)',10,'10','hours','N','100','C - Coursework','No');
INSERT INTO assessment_components VALUES('CS4490',99,'EX','Examination',90,'2','hours','N','100','W - Written Exam','Yes');
INSERT INTO assessment_components VALUES('CS2855',1,'CW1','Written Assignment',8,'10','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2855',2,'CW2','Written Assignment',8,'10','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2855',3,'PROJECT','mini-project/program',10,'13','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2855',99,'EX','Written exam',74,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3750',0,'','Coursework',20,'','','','','C','N');
INSERT INTO assessment_components VALUES('CS3750',99,'EX','Written exam',80,'','','','','W','Y');
INSERT INTO assessment_components VALUES('CS2810',1,'PROJECT','project',100,'','','Yes','100','C','Y');
INSERT INTO assessment_components VALUES('CS1890',2,'PROJECT','Project',65,'60','Hours','No','100','C','Y');
INSERT INTO assessment_components VALUES('CS1890',1,'CW','Quizzes',35,'12','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('IY3609',99,'EX','Examination',100,'2','hours','Y','100','W','Yes');
INSERT INTO assessment_components VALUES('CS1802',0,'','Programming exercises (between 1 and 3)',4,'20','hours','N','100','C','');
INSERT INTO assessment_components VALUES('CS1802',1,'','Project',36,'45','hours','N','100','C','');
INSERT INTO assessment_components VALUES('CS1802',99,'EX','Examination',60,'3','hours','N','100','W','Y');
INSERT INTO assessment_components VALUES('CS1802',3,'','Laboratory exercises',0,'33','hours','Y','Pass/fail','C','');
INSERT INTO assessment_components VALUES('CS4200',1,'CW1','Set exercises 1',15,'5','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4200',2,'CW2','Set exercises 2',15,'5','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4200',3,'CW3','Quizzes throughout the term (one each week)',15,'5','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4200',99,'EX','Examination',55,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS4822',0,'','Project',100,'interim report guideline 5000 words, final report guideline 15000 words, other variable length items according to each project','words','Y','100','C','Yes');
INSERT INTO assessment_components VALUES('CS3945',99,'EX','examination',80,'','','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3945',1,'CW','set exercises',20,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1823',1,'CW1','Checkpoints',0,'','','Yes','100','C','N');
INSERT INTO assessment_components VALUES('CS1823',2,'CW2','Coursework',60,'','','No','100','C','Y');
INSERT INTO assessment_components VALUES('CS1823',3,'CW3','Group Projects',40,'','','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1840',1,'CW','Written Assignment',30,'30','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS1840',99,'EX','Written exam',70,'90','Minutes','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS4870',0,'','Project',50,'','','','100','C','No');
INSERT INTO assessment_components VALUES('CS4870',99,'EX','Examination',50,'2','hours','','100','W','Yes');
INSERT INTO assessment_components VALUES('CS3870',1,'CW','Written Assignment',10,'5','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3870',2,'TEST','Quiz',10,'2','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS3870',99,'EX','Written exam',80,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS4100',1,'CW1','Written Assignment',24,'24','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4100',2,'CW2','Quiz and labs',16,'18','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4100',99,'EX','Written exam',60,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS3910',99,'EX','Examination',80,'2','hours','N','100','W - Written Exam','Y');
INSERT INTO assessment_components VALUES('CS3910',1,'','Report (normally between 1 and 3)',20,'4,000 (guideline total)','words','N','100','C - Coursework','N');
INSERT INTO assessment_components VALUES('CS2860',1,'CW1','Quizzes',10,'150','Minutes','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2860',2,'CW2','Written Assignment',10,'5','Hours','No','100','C','Y');
INSERT INTO assessment_components VALUES('CS2860',3,'CW3','Written Assignment',10,'5','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS2860',99,'EX','Written exam',70,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('IY4609',99,'EX','Examination',100,'2','hours','Y','100','W','Yes');
INSERT INTO assessment_components VALUES('CS4950',1,'CW1','Question sheet 1',10,'5','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4950',2,'PROJECT','Mini-project',10,'10','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4950',3,'CW2','Question sheet 2',10,'5','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4950',4,'CW3','Moodle quizzes',10,'10','Hours','No','100','C','N');
INSERT INTO assessment_components VALUES('CS4950',99,'EX','Final exam',60,'2','Hours','No','100','W','Y');
INSERT INTO assessment_components VALUES('CS2846',99,'EX','examination',40,NULL,NULL,'No','100','W','Y');
INSERT INTO assessment_components VALUES('CS2846',1,'CW','coursework',60,NULL,NULL,'No','100','C','N');
INSERT INTO assessment_components VALUES('CS2847',99,'EX','examination',40,NULL,NULL,'No','100','W','Y');
INSERT INTO assessment_components VALUES('CS2847',1,'CW','coursework',60,NULL,NULL,'No','100','C','N');
CREATE TABLE IF NOT EXISTS "module_variants" (
	"major_code"	TEXT,
	"minor_code"	TEXT,
	FOREIGN KEY("minor_code") REFERENCES "modules"("mod_code"),
	FOREIGN KEY("major_code") REFERENCES "modules"("mod_code")
);
INSERT INTO module_variants VALUES('CS1860','CS2865');
INSERT INTO module_variants VALUES('CS1890','CS2890');
INSERT INTO module_variants VALUES('IY2760','DC3760');
INSERT INTO module_variants VALUES('CS3821','CS3822');
INSERT INTO module_variants VALUES('CS3821','IY3821');
INSERT INTO module_variants VALUES('CS4821','CS4822');
INSERT INTO module_variants VALUES('CS4821','IY4500');
INSERT INTO module_variants VALUES('CS3821','CS3822');
INSERT INTO module_variants VALUES('CS3821','IY3821');
INSERT INTO module_variants VALUES('CS4821','CS4822');
INSERT INTO module_variants VALUES('CS3846','CS2846');
INSERT INTO module_variants VALUES('CS3846','CS2847');
INSERT INTO module_variants VALUES('CS1830','CS1831');
INSERT INTO module_variants VALUES('CS2810','CS2815');
INSERT INTO module_variants VALUES('CS1840','CS2841');
INSERT INTO module_variants VALUES('CS2810','DC3811');
INSERT INTO module_variants VALUES('CS1822','CS1821');
INSERT INTO module_variants VALUES('CS1822','DC1821');
INSERT INTO module_variants VALUES('CS3001','CS4001');
INSERT INTO module_variants VALUES('CS3220','CS4220');
INSERT INTO module_variants VALUES('CS3490','CS4490');
INSERT INTO module_variants VALUES('IY3501','IY4501');
INSERT INTO module_variants VALUES('CS3920','CS4920');
INSERT INTO module_variants VALUES('CS3945','CS4945');
INSERT INTO module_variants VALUES('IY3606','IY4606');
INSERT INTO module_variants VALUES('IY3609','IY4609');
INSERT INTO module_variants VALUES('IY3612','IY4612');
INSERT INTO module_variants VALUES('CS3250','CS4250');
INSERT INTO module_variants VALUES('CS3580','CS4580');
CREATE TABLE IF NOT EXISTS "coursework" (
	"mod_code"	TEXT,
	"title"	TEXT,
	"term"	TEXT,
	"percent"	TEXT,
	"deadline"	TEXT,
	"feedback_deadline"	TEXT,
	"comment"	TEXT,
	"anonymous"	BOOLEAN,
	"mark_type"	TEXT,
	"college_extension_permitted"	BOOLEAN,
	"substantial"	BOOLEAN,
	"set_order"	INTEGER,
	"component"	TEXT,
	"submission_time"	TEXT
);
INSERT INTO coursework VALUES('CS1811','Coursework 1','1','10%','2020-11-09','2020-11-30','Moodle Submission',1,'G',1,0,1,'CW2','16:00');
INSERT INTO coursework VALUES('CS1811','Coursework 2','1','20%','2021-01-15','2021-02-05','Moodle Submission',1,'G',1,1,2,'CW2','16:00');
INSERT INTO coursework VALUES('CS1811','Weekly Quizzes','1','10%','-','','Moodle Submission',0,'N',0,0,0,'CW1','');
INSERT INTO coursework VALUES('CS1813','Final application','2','22%','2021-03-02','2021-03-23','Moodle submission',0,'G',0,1,2,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS1813','Presentation','2','-','2021-03-03','-','Presentation',0,'G',0,0,3,'PROJECT','Lab Session');
INSERT INTO coursework VALUES('CS1813','Prototype demonstration','2','MFA','2021-02-10','-','Demonstration during lab session',0,'-',1,0,1,'PROJECT','Lab Session');
INSERT INTO coursework VALUES('CS1813','Test report','2','18%','2021-03-24','2021-04-27','Moodle submission',0,'G',1,0,4,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS1821','All checkpoints','2','MFA','2021-03-19','-','Via Moodle and assessed in person',0,'G',0,0,4,'CW1','');
INSERT INTO coursework VALUES('CS1821','Reflective Essay','2','MFA','2021-03-26','2021-04-29','Submission via Moodle',0,'G',1,0,12,'CW3','16:00');
INSERT INTO coursework VALUES('CS1821','Individual Project Report','2','40','2021-03-26','2021-04-29','Submission via Moodle',0,'G',1,1,10,'CW2','16:00');
INSERT INTO coursework VALUES('CS1821','Project Demo and Presentation','2','40','Last week of term','-','Assessed in person',0,'G',0,1,11,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1821','Quiz 1','1','5%','2020-10-19','','Moodle Submission',0,'N',1,0,0,'CW2','16:00');
INSERT INTO coursework VALUES('CS1821','Quiz 2','1','5%','2020-11-02','','Moodle Submission',0,'N',1,0,1,'CW2','16:00');
INSERT INTO coursework VALUES('CS1821','Quiz 3','1','5%','2020-11-16','','Moodle Submission',0,'N',1,0,2,'CW2','16:00');
INSERT INTO coursework VALUES('CS1821','Quiz 4','1','5%','2020-11-30','','Moodle Submission',0,'N',1,0,3,'CW2','16:00');
INSERT INTO coursework VALUES('CS1822','All checkpoints','2','MFA','2020-12-11','-','Via Moodle and assessed in person',0,'G',0,0,1,'CW1','');
INSERT INTO coursework VALUES('CS1822','Individual Project Report','2','40','2021-03-26','2021-04-29','Submission via Moodle',0,'G',1,1,11,'CW2','16:00');
INSERT INTO coursework VALUES('CS1822','Project Demo and Presentation','2','40','Last week of term','-','Assessed in person',0,'G',0,1,10,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1822','Milestone Sheet 1','2','MFA','2021-01-19','-','Assessed in person',0,'G',0,0,5,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1822','Quiz 1','1','5%','2020-10-19','','Moodle Submission',0,'N',1,0,0,'CW2','16:00');
INSERT INTO coursework VALUES('CS1822','Quiz 2','1','5%','2020-11-02','','Moodle Submission',0,'N',1,0,1,'CW2','16:00');
INSERT INTO coursework VALUES('CS1822','Quiz 3','1','5%','2020-11-16','','Moodle Submission',0,'N',1,0,2,'CW2','16:00');
INSERT INTO coursework VALUES('CS1822','Quiz 4','1','5%','2020-11-30','','Moodle Submission',0,'N',1,0,3,'CW2','16:00');
INSERT INTO coursework VALUES('CS1860','Biweekly Quizzes','1','10% (2% each)','-','','Moodle Submission',0,'N',0,0,0,'CW','');
INSERT INTO coursework VALUES('CS1860','Test','1','10%','2020-12-07','2021-01-13','Moodle submission',1,'G',0,0,1,'CW','');
INSERT INTO coursework VALUES('CS1890','Coursework 1','1','10%','2020-10-29','2020-11-19','Moodle Submission',1,'G',0,0,8,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS1890','Coursework 2','1','25%','2020-11-11','2020-12-02','Moodle Submission',0,'G',0,1,9,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS1890','Coursework 3','1','30%','2020-12-02','2021-01-08','Moodle Submission',0,'G',0,1,10,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS1890','Quiz Planning','1','7%','2020-12-14','','Moodle Submission',0,'N',0,0,7,'CW','16:00');
INSERT INTO coursework VALUES('CS1890','Quiz T1','1','4%','2020-10-01','','Moodle Submission',0,'N',0,0,0,'CW','16:00');
INSERT INTO coursework VALUES('CS1890','Quiz T2','1','4%','2020-10-08','','Moodle Submission',0,'N',0,0,1,'CW','16:00');
INSERT INTO coursework VALUES('CS1890','Quiz T3.1/T3.2','1','4%','2020-10-15','','Moodle Submission',0,'N',0,0,2,'CW','16:00');
INSERT INTO coursework VALUES('CS1890','Quiz T3.3/T3.4','1','4%','2020-10-22','','Moodle Submission',0,'N',0,0,3,'CW','16:00');
INSERT INTO coursework VALUES('CS1890','Quiz T4.1/T4.2','1','4%','2020-11-05','','Moodle Submission',0,'N',0,0,4,'CW','16:00');
INSERT INTO coursework VALUES('CS1890','Quiz T4.3/T4.4','1','4%','2020-11-12','','Moodle Submission',0,'N',0,0,5,'CW','16:00');
INSERT INTO coursework VALUES('CS1890','Quiz T5','1','4%','2020-11-19','','Moodle Submission',0,'N',0,0,6,'CW','16:00');
INSERT INTO coursework VALUES('CS2800','Coursework 1: TDD','1','10%','2020-10-19','2020-11-09','Moodle Submission',1,'G',1,0,0,'CW','16:00');
INSERT INTO coursework VALUES('CS2800','Coursework 2: Report + SVN','1','30%','2020-12-11','2021-01-19','Moodle Submission',0,'G',1,1,1,'CW','10:00');
INSERT INTO coursework VALUES('CS2810','Sprint 1','2','8%','2021-01-29','2021-02-19','Git repository + task management + contribution in meetings',0,'G',0,1,1,'PROJECT','');
INSERT INTO coursework VALUES('CS2810','Sprint 2','2','8%','2021-02-12','2021-03-05','Git repository + task management + contribution in meetings',0,'G',0,1,2,'PROJECT','');
INSERT INTO coursework VALUES('CS2810','Sprint 3','2','8%','2021-02-26','2021-03-19','Git repository + task management + contribution in meetings',0,'G',0,1,3,'PROJECT','');
INSERT INTO coursework VALUES('CS2810','Sprint 4','2','8%','2021-03-12','2021-04-15','Git repository + task management + contribution in meetings',0,'G',0,1,4,'PROJECT','');
INSERT INTO coursework VALUES('CS2810','Sprint 5','2','8%','2021-03-26','2021-04-29','Git repository + task management + contribution in meetings',0,'G',0,1,5,'PROJECT','');
INSERT INTO coursework VALUES('CS2850','Assignment 1','1','5%','2020-10-30','2020-11-20','Moodle Submission',1,'G',0,0,1,'CW','10:00');
INSERT INTO coursework VALUES('CS2850','Assignment 2','1','5%','2020-12-04','2021-01-12','Moodle Submission',1,'G',0,0,2,'CW','10:00');
INSERT INTO coursework VALUES('CS2850','Project','1','20%','2020-12-21','2021-01-27','Moodle Submission',1,'G',1,1,3,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS2850','Weekly Quizzes','1','10% (1% each)','-','','Moodle Submission',0,'G',0,0,0,'CW','');
INSERT INTO coursework VALUES('CS2855','Assignment 1','1','8%','2020-11-02','2020-11-23','Submission with submitCoursework',1,'G',0,0,0,'CW1','10:00');
INSERT INTO coursework VALUES('CS2855','Assignment 2','1','8%','2020-12-01','2021-01-07','Submission with submitCoursework',1,'G',0,0,1,'CW2','10:00');
INSERT INTO coursework VALUES('CS2855','Mini Project','1','14%','2021-01-12','2021-02-02','Submission with submitCoursework',1,'G',1,1,2,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS2860','Quizzes','2','10%','','','Online submission',0,'G',0,0,1,'CW1','');
INSERT INTO coursework VALUES('CS2860','Written Assignment','2','10%','2021-02-17','','Moodle Submission',1,'G',1,0,2,'CW2','16:00');
INSERT INTO coursework VALUES('CS2860','Written Assignment','2','10%','2021-03-16','','Moodle Submission',1,'G',1,1,3,'CW3','16:00');
INSERT INTO coursework VALUES('CS3003','Assignment 1 (Report 1)','1','10%','2020-10-26','2020-11-16','Moodle Submission',1,'G',1,0,0,'CW1','16:00');
INSERT INTO coursework VALUES('CS3003','Assignment 2 (Report 2)','1','20%','2020-11-09','2020-11-30','Moodle Submission',1,'G',1,0,1,'CW2','16:00');
INSERT INTO coursework VALUES('CS3003','Assignment 3 (Report 3)','1','20%','2020-11-23','2020-12-21','Moodle Submission',1,'G',1,1,2,'CW2','16:00');
INSERT INTO coursework VALUES('CS3250','Assignment 1','2','10%','2021-02-09','2021-02-23','Online submission',1,'G',1,0,1,'CW','UNKNOWN');
INSERT INTO coursework VALUES('CS3250','Assignment 2','2','10%','2021-03-17','2021-04-20','Online submission',1,'G',1,1,2,'CW','UNKNOWN');
INSERT INTO coursework VALUES('CS3470','5 Quizzes','1','5% total','-','','Moodle Submission',0,'N',0,0,0,'CW','');
INSERT INTO coursework VALUES('CS3470','Assignment 1','1','5%','2020-11-20','2020-12-11','Moodle Submission',0,'N',0,0,1,'CW','10:00');
INSERT INTO coursework VALUES('CS3470','Assignment 2','1','20%','2020-12-11','2021-01-19','Moodle Submission',1,'G',1,1,2,'CW','10:00');
INSERT INTO coursework VALUES('CS3490','Assignment 1','2','5%','2021-02-17','2021-03-10','Moodle submission of scanned work in PDF format',0,'N',0,0,1,'CW','16:00');
INSERT INTO coursework VALUES('CS3490','Assignment 2','2','5%','2021-03-16','2021-04-19','Moodle submission of scanned work in PDF format',0,'N',0,0,2,'CW','16:00');
INSERT INTO coursework VALUES('CS3810','Final Project submission (Term 1 Students)','1','80%','2021-01-11','','See details on projects booklet',0,'-',1,1,2,'PROJECT','');
INSERT INTO coursework VALUES('CS3810','Presentation (Term 1 Students)','1','10%','Last week of term 1','','Submission details on projects booklet',0,'G',0,0,1,'PRESENTATION','');
INSERT INTO coursework VALUES('CS3810','Final Project submission (Term 2 Students)','2','80%','2021-04-27','2021-05-26','Submission details on projects booklet',0,'-',1,1,4,'PROJECT','');
INSERT INTO coursework VALUES('CS3810','Presentation (Term 2 Students)','2','10%','Last week of term 2','','Submission details on projects booklet',0,'G',0,0,3,'PRESENTATION','');
INSERT INTO coursework VALUES('CS3821','Final Project submission','2','70%','2021-03-26','2021-04-29','See details on projects booklet, including demo days',0,'-',1,1,3,'PROJECT','');
INSERT INTO coursework VALUES('CS3846','Group Assignment I','2','20%','2021-02-15','2021-03-08','Moodle submission',0,'G',0,1,1,'CW','10:00');
INSERT INTO coursework VALUES('CS3846','Group Assignment II','2','20%','2021-03-19','2021-04-27','Moodle submission',0,'G',0,1,3,'CW','10:00');
INSERT INTO coursework VALUES('CS3846','Individual Assignment I','2','10%','2021-02-19','2021-03-12','Moodle submission',0,'G',0,0,2,'CW','10:00');
INSERT INTO coursework VALUES('CS3846','Individual Assignment II','2','10%','2021-03-26','2021-05-04','Moodle submission',0,'G',1,0,4,'CW','10:00');
INSERT INTO coursework VALUES('CS3870','Coursework 1','1','5%','2020-10-28','2020-11-18','Moodle Submission',1,'G',1,0,1,'CW','16:00');
INSERT INTO coursework VALUES('CS3870','Coursework 2','1','5%','2020-11-25','2020-12-23','Moodle Submission',1,'G',1,0,2,'CW','16:00');
INSERT INTO coursework VALUES('CS3870','Quizzes','1','10% (1% each)','-','','Moodle Submission',0,'N',0,0,0,'TEST','');
INSERT INTO coursework VALUES('CS3920','Coursework 1','1','9%','2020-11-02','2020-11-23','Moodle Submission',1,'G',1,0,1,'CW1','10:00');
INSERT INTO coursework VALUES('CS3920','Coursework 2','1','9%','2020-11-18','2020-12-09','Moodle Submission',1,'G',1,0,2,'CW1','16:00');
INSERT INTO coursework VALUES('CS3920','Coursework 3','1','9%','2020-12-07','2021-01-13','Moodle Submission',1,'G',1,1,3,'CW1','16:00');
INSERT INTO coursework VALUES('CS3920','Weekly Quizzes','1','13%','-','','Moodle Submission',0,'N',0,0,0,'CW2','');
INSERT INTO coursework VALUES('CS3930','Project','2','20%','2021-03-11','2021-03-25','Online submission',1,'N',1,1,1,'CW','UNKNOWN');
INSERT INTO coursework VALUES('CS3940','Coursework','1','20%','2020-11-16','2020-12-07','Submission with submitCoursework',1,'G',1,1,1,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS3940','Quiz 1','1','10%','2020-10-16','','Moodle Submission',0,'G',0,0,0,'CW','10:00');
INSERT INTO coursework VALUES('CS3940','Quiz 2','1','10%','2020-12-04','','Moodle Submission',0,'G',0,0,2,'CW','10:00');
INSERT INTO coursework VALUES('CS3945','Assignment 1','1','10%','2020-11-03','2020-11-24','Submission throught submitCoursework',1,'G',0,0,0,'CW','14:00');
INSERT INTO coursework VALUES('CS3945','Assignment 2','1','10%','2020-12-02','2021-01-08','Submission with submitCoursework',1,'G',1,1,1,'CW','14:00');
INSERT INTO coursework VALUES('CS4100','Coursework 1','1','8%','2020-11-12','2020-11-26','Moodle submission',1,'G',1,0,1,'CW1','17:00');
INSERT INTO coursework VALUES('CS4100','Coursework 2','1','8%','2020-11-27','2020-12-11','Moodle submission',1,'G',1,0,2,'CW1','17:00');
INSERT INTO coursework VALUES('CS4100','Coursework 3','1','8%','2020-12-14','2021-01-20','Moodle submission',1,'G',1,0,3,'CW1','17:00');
INSERT INTO coursework VALUES('CS4100','Weekly Quizzes and Labs','1','16% total','-','','Moodle Submission',0,'G',0,0,0,'CW2','');
INSERT INTO coursework VALUES('CS4504','Project','2','40%','2021-03-01','2021-03-15','Moodle submission',1,'G',1,1,1,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS4860','Programming Assignment','1','30% total','2020-12-09','2021-01-15','Moodle Submission',1,'N',1,1,1,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS4860','Weekly quizzes','1','10% (1% each)','-','','Moodle Submission',0,'N',0,0,0,'CW','');
INSERT INTO coursework VALUES('CS4950','Mini-project','2','10%','2021-03-15','2021-04-16','Moodle Submission',1,'G',1,0,2,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS4950','Moodle quizzes','2','10%','-','-','Moodle Submission',0,'G',0,0,0,'CW3','');
INSERT INTO coursework VALUES('CS4950','Coursework 1','2','10%','2021-02-16','2021-03-02','Online submission',1,'G',1,0,1,'CW1','10:00');
INSERT INTO coursework VALUES('CS4950','Coursework 2','2','10%','2021-03-22','2021-04-23','Moodle Submission',1,'G',1,1,3,'CW2','10:00');
INSERT INTO coursework VALUES('CS4980','Coursework','2','30%','2021-03-25','2021-04-28','Submission via Moode',1,'N',0,1,1,'CW','');
INSERT INTO coursework VALUES('CS4990','Assignment 1','2','10%','2021-02-19','2021-03-05','Online submission',1,'G',1,0,1,'CW','10:00');
INSERT INTO coursework VALUES('CS4990','Assignment 2','2','10%','2021-03-12','2021-03-26','Online submission',1,'G',1,1,2,'CW','10:00');
INSERT INTO coursework VALUES('IY2760','Coursework 1','1','20%','2020-10-28','2020-11-18','Moodle Submission',1,'N',1,0,0,'CW1','14:00');
INSERT INTO coursework VALUES('IY2760','Coursework 2','1','20%','2020-12-09','2021-01-15','Moodle Submission',1,'N',1,1,1,'CW2','14:00');
INSERT INTO coursework VALUES('IY3660','Coursework 1','1','20%','2020-10-30','-','-',NULL,NULL,NULL,NULL,0,NULL,NULL);
INSERT INTO coursework VALUES('IY3660','Coursework 2','1','20%','2020-12-09','-','-',NULL,NULL,NULL,NULL,1,NULL,NULL);
INSERT INTO coursework VALUES('IY3840','Coursework','1','40%','TBC','-','-',NULL,NULL,NULL,NULL,0,NULL,NULL);
INSERT INTO coursework VALUES('IY4501','Coursework S1','1','20%','2020-11-08','-','-',NULL,NULL,NULL,NULL,0,NULL,NULL);
INSERT INTO coursework VALUES('IY4501','Coursework S2','1','20%','2020-12-13','-','-',NULL,NULL,NULL,NULL,1,NULL,NULL);
INSERT INTO coursework VALUES('IY4523','Coursework','1','40%','2020-12-07','-','-',NULL,NULL,NULL,NULL,0,NULL,NULL);
INSERT INTO coursework VALUES('CS3821','Project Plan','1','5%','2020-10-02','','See details on projects booklet',0,'G',1,0,0,'CW1','10:00');
INSERT INTO coursework VALUES('CS3821','Interim Review','1','25%','2020-12-07','2021-01-19','See details on projects booklet, including presentation date',0,'G',0,1,1,'CW2','10:00');
INSERT INTO coursework VALUES('CS3810','Project Plan','1','5%','2020-10-02',NULL,'See details on projects booklet',0,'G',1,0,0,'CW','10:00');
INSERT INTO coursework VALUES('CS4821','Project Plan','1','5%','2020-10-02','','See details on projects booklet',0,'G',1,0,0,'CW1','10:00');
INSERT INTO coursework VALUES('CS4821','Interim Review','1','25%','2020-12-07','','See details on projects booklet, including presentation date',0,'G',0,1,1,'CW2','10:00');
INSERT INTO coursework VALUES('CS1812','Assignment 1','2','10%','2021-02-08','2021-03-01','Moodle Submission',1,'G',0,1,1,'CW2','');
INSERT INTO coursework VALUES('CS1812','Assignment 2','2','10%','2021-03-01','2021-03-22','Moodle Submission',1,'G',0,1,2,'CW2','');
INSERT INTO coursework VALUES('CS1812','Assignment 3','2','10%','2021-03-25','2021-04-28','Moodle Submission',1,'G',0,1,3,'CW3','');
INSERT INTO coursework VALUES('CS1812','Weekly quizzes','2','1% each','','','10% total',0,'G',0,0,0,'CW1','');
INSERT INTO coursework VALUES('CS1840','Assignment 1','2','10%','2021-02-16','2021-03-09','Moodle Submission',1,'G',0,1,0,'CW','');
INSERT INTO coursework VALUES('CS1840','Assignment 2','2','20%','2021-03-18','2021-04-21','Moodle Submission',1,'G',0,1,1,'CW','');
INSERT INTO coursework VALUES('CS1870','7 Moodle Quizzes','2','10% total','','','Weeks 3, 4, 5, 6, 8, 9, 11',0,'G',0,0,0,'CW','');
INSERT INTO coursework VALUES('CS1870','Mandatory Non-assessed Assignment','2','MFA','2021-03-15','2021-04-16','Moodle pdf submission',0,'N',0,0,1,'','');
INSERT INTO coursework VALUES('CS2910','CW1 - Quiz','2','10%','2021-02-05','2021-02-26','Moodle Submission',0,'G',0,0,0,'CW','10:00');
INSERT INTO coursework VALUES('CS2910','CW2 - Programming','2','20%','2021-03-05','2021-03-26','Moodle Submission',1,'G',1,1,1,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS2910','CW3 - Quiz','2','10%','2021-03-24','2021-04-27','Moodle Submission',0,'G',0,0,2,'CW','10:00');
INSERT INTO coursework VALUES('IY2840','Coursework 1','2','20%','2021-02-26','2021-03-19','Moodle Submission',1,'G',1,1,0,'CW1','10:00');
INSERT INTO coursework VALUES('IY2840','Coursework 2','2','20%','2021-03-26','2021-04-29','Moodle Submission',1,'G',1,1,1,'CW2','10:00');
INSERT INTO coursework VALUES('CS2900','Test 1','2','10%','2021-02-04','2021-02-25','Run on Moodle',1,'G',1,1,0,'TEST1','16:00');
INSERT INTO coursework VALUES('CS2900','Test 2','2','10%','2021-02-18','2021-03-11','Run on Moodle',1,'G',1,1,1,'TEST2','16:00');
INSERT INTO coursework VALUES('CS2900','Test 3','2','10%','2021-03-04','2021-03-25','Run on Moodle',1,'G',1,1,2,'TEST3','16:00');
INSERT INTO coursework VALUES('CS2900','Test 4','2','10%','2021-03-22','2021-04-23','Run on Moodle',1,'G',1,1,3,'TEST4','16:00');
INSERT INTO coursework VALUES('CS2810','Group Project (software)','2','45%','2021-03-26','2021-04-29','Git repository + Moodle',0,'G',0,1,5,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS2810','Individual Report','2','10%','2021-03-26','2021-04-29','Moodle',0,'G',1,0,7,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS3480','Project','2','50%','2021-03-26','2021-04-29','Departmental Anonymous Submission System',1,'N',1,1,0,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS3510','CW1','2','15%','2021-02-12','2021-03-05','Moodle Submission',1,'G',1,1,0,'CW1','10:00');
INSERT INTO coursework VALUES('CS3510','CW2','2','25%','2021-03-04','2021-03-25','Moodle Submission',1,'G',1,1,1,'CW2','10:00');
INSERT INTO coursework VALUES('IY3501','Summative Assessment 1','2','20%','2021-02-24','2021-03-17','Moodle submission',1,'N',1,1,0,'','10:00');
INSERT INTO coursework VALUES('IY3501','Summative Assessment 2','2','20%','2021-03-24','2021-04-27','Moodle submission',1,'N',1,1,1,'','10:00');
INSERT INTO coursework VALUES('CS4250','Assignment 1','2','10%','2021-02-09','2021-02-23','Moodle submission',1,'G',1,0,1,'CW1','10:00');
INSERT INTO coursework VALUES('CS4250','Assignment 2','2','10%','2021-03-17','2021-04-20','Moodle submission',1,'G',1,0,2,'CW1','10:00');
INSERT INTO coursework VALUES('CS4250','Project','2','10%','2021-03-26','2021-04-29','Moodle submission',1,'G',1,0,3,'CW1','10:00');
INSERT INTO coursework VALUES('CS4990','Weekly quizzes','2','1% each','','','10% total',0,'G',0,0,0,'CW','');
INSERT INTO coursework VALUES('CS4250','Weekly quizzes and labs','2','10% total','','','-',0,'G',0,0,0,'CW2','');
INSERT INTO coursework VALUES('CS4200','Assignment 1','2','15%','2021-02-15','2021-03-01','Moodle Submission',1,'N',1,1,1,'CW1','10:00');
INSERT INTO coursework VALUES('CS4200','Assignment 2','2','15%','2021-03-10','2021-03-24','Moodle Submission',1,'N',1,0,2,'CW2','10:00');
INSERT INTO coursework VALUES('CS4200','Weekly Quizzes','2','15% in total','','','-',0,'G',0,0,0,'CW3','');
INSERT INTO coursework VALUES('CS4234','Programming Assignment','2','4%','2021-02-08','2021-02-22','Moodle Submission (10am)',1,'N',0,0,1,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS4234','Programming Assignment','2','4%','2021-02-22','2021-03-08','Moodle Submission (10am)',1,'N',0,0,2,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS4234','Programming Assignment','2','4%','2021-03-08','2021-03-22','Moodle Submission (10am)',1,'N',0,0,3,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS4234','Project','2','18%','2021-04-26','2021-05-25','Moodle Submission (10am)',1,'N',1,1,4,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS4234','Project Report','2','10%','2021-04-26','2021-05-25','Moodle Submission (10am)',1,'N',1,1,5,'PROJECT','10:00');
INSERT INTO coursework VALUES('CS2810','Group Project (report)','2','5%','2021-03-26','2021-04-29','Moodle',0,'G',0,1,6,'PROJECT','16:00');
INSERT INTO coursework VALUES('CS1822','Milestone Sheet 2','2','MFA','2021-01-26','-','Assessed in person',0,'G',0,0,6,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1822','Milestone Sheet 3','2','MFA','2021-02-02','-','Assessed in person',0,'G',0,0,7,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1822','Milestone Sheet 4','2','MFA','2021-02-09','-','Assessed in person',0,'G',0,0,8,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1822','Milestone Sheet 5','2','MFA','2021-02-16','-','Assessed in person',0,'G',0,0,9,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1821','Milestone Sheet 1','2','MFA','2021-01-19','-','Assessed in person',0,'G',0,0,5,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1821','Milestone Sheet 2','2','MFA','2021-01-26','-','Assessed in person',0,'G',0,0,6,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1821','Milestone Sheet 3','2','MFA','2021-02-02','-','Assessed in person',0,'G',0,0,7,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1821','Milestone Sheet 4','2','MFA','2021-02-09','-','Assessed in person',0,'G',0,0,8,'GROUP','16:00');
INSERT INTO coursework VALUES('CS1821','Milestone Sheet 5','2','MFA','2021-02-16','-','Assessed in person',0,'G',0,0,9,'GROUP','16:00');
CREATE TABLE IF NOT EXISTS "leaders" (
	"mod_code"	TEXT,
	"initials"	TEXT,
	"leader"	BOOLEAN,
	"term"	TEXT
);
INSERT INTO leaders VALUES('CS3810','DC',1,'Both');
INSERT INTO leaders VALUES('CS3810','AD',0,'Both');
INSERT INTO leaders VALUES('CS1811','JL',0,'1');
INSERT INTO leaders VALUES('CS1811','MH',1,'1');
INSERT INTO leaders VALUES('CS1860','GG',1,'1');
INSERT INTO leaders VALUES('CS1860','EE',0,'1');
INSERT INTO leaders VALUES('CS1890','CM',1,'1');
INSERT INTO leaders VALUES('CS1890','GK',0,'1');
INSERT INTO leaders VALUES('CS2800','DC',1,'1');
INSERT INTO leaders VALUES('CS2850','NC',1,'1');
INSERT INTO leaders VALUES('CS2850','MS',0,'1');
INSERT INTO leaders VALUES('CS2855','IT',1,'1');
INSERT INTO leaders VALUES('CS2855','AD',0,'1');
INSERT INTO leaders VALUES('CS3003','GK',1,'1');
INSERT INTO leaders VALUES('CS3490','GG',1,'2');
INSERT INTO leaders VALUES('CS3821','DC',1,'Both');
INSERT INTO leaders VALUES('CS3821','AD',0,'Both');
INSERT INTO leaders VALUES('CS3920','VV',1,'1');
INSERT INTO leaders VALUES('CS3940','KS',1,'1');
INSERT INTO leaders VALUES('CS4100','ZYL',1,'1');
INSERT INTO leaders VALUES('CS4100','NC',0,'1');
INSERT INTO leaders VALUES('CS4100','NL2',0,'1');
INSERT INTO leaders VALUES('CS4825','CM',1,'Both');
INSERT INTO leaders VALUES('CS4821','DC',1,'Both');
INSERT INTO leaders VALUES('CS4821','AD',0,'Both');
INSERT INTO leaders VALUES('CS4860','DK',1,'1');
INSERT INTO leaders VALUES('CS1840','ZHL',1,'2');
INSERT INTO leaders VALUES('CS1840','RR',0,'2');
INSERT INTO leaders VALUES('CS1870','ES',1,'2');
INSERT INTO leaders VALUES('CS2810','CM',1,'2');
INSERT INTO leaders VALUES('CS2810','NP',0,'2');
INSERT INTO leaders VALUES('CS2810','AD',0,'2');
INSERT INTO leaders VALUES('CS2860','CW',1,'2');
INSERT INTO leaders VALUES('CS2860','EE',0,'2');
INSERT INTO leaders VALUES('CS2900','HS',1,'2');
INSERT INTO leaders VALUES('CS2910','KS',1,'2');
INSERT INTO leaders VALUES('CS3480','AJ',1,'2');
INSERT INTO leaders VALUES('CS3510','ZHL',1,'2');
INSERT INTO leaders VALUES('CS3846','CM',1,'2');
INSERT INTO leaders VALUES('CS3870','MW',1,'1');
INSERT INTO leaders VALUES('CS4200','YK',1,'2');
INSERT INTO leaders VALUES('CS4234','DK',1,'2');
INSERT INTO leaders VALUES('CS4504','GK',1,'2');
INSERT INTO leaders VALUES('CS4950','CW',1,'2');
INSERT INTO leaders VALUES('CS1822','MH',1,'Both');
INSERT INTO leaders VALUES('CS1822','RR',0,'1');
INSERT INTO leaders VALUES('CS1822','DC',0,'2');
INSERT INTO leaders VALUES('CS3945','IT',1,'1');
INSERT INTO leaders VALUES('CS4250','ZYL',1,'2');
INSERT INTO leaders VALUES('CS4990','AG',1,'2');
INSERT INTO leaders VALUES('CS4980','SB',1,'2');
INSERT INTO leaders VALUES('CS1812','RR',1,'2');
INSERT INTO leaders VALUES('CS1812','MS',0,'2');
INSERT INTO leaders VALUES('CS1813','RR',0,'2');
INSERT INTO leaders VALUES('CS1813','MS',0,'2');
INSERT INTO leaders VALUES('IY2760','PK',0,'1');
INSERT INTO leaders VALUES('IY2840','SED',1,'2');
INSERT INTO leaders VALUES('IY2840','JH',0,'2');
INSERT INTO leaders VALUES('IY3660','CC',1,'1');
INSERT INTO leaders VALUES('IY3501','RP',1,'2');
INSERT INTO leaders VALUES('IY3840','DS',1,'1');
INSERT INTO leaders VALUES('IY3609','SW',1,'2');
INSERT INTO leaders VALUES('IY3612','SW',1,'2');
INSERT INTO leaders VALUES('IY3606','KM',1,'2');
INSERT INTO leaders VALUES('IY4501','CMi',1,'1');
INSERT INTO leaders VALUES('IY4523','GP',1,'1');
INSERT INTO leaders VALUES('IY4610','DHS',1,'2');
INSERT INTO leaders VALUES('CS3470','ES',1,'1');
INSERT INTO leaders VALUES('IY2760','EQ',1,'1');
INSERT INTO leaders VALUES('IY2760','SED',0,'1');
INSERT INTO leaders VALUES('CS1813','CM',1,'2');
INSERT INTO leaders VALUES('IY3821','DC',1,'Both');
INSERT INTO leaders VALUES('IY3821','AD',0,'Both');
CREATE TABLE IF NOT EXISTS "validation_year" (
	"mod_code"	TEXT,
	"year"	TEXT
);
INSERT INTO validation_year VALUES('IY3501','2018/19');
INSERT INTO validation_year VALUES('CS1811','2017/18');
INSERT INTO validation_year VALUES('CS1812','2017/18');
INSERT INTO validation_year VALUES('CS4950','2017/18');
INSERT INTO validation_year VALUES('CS3824','2017/18');
INSERT INTO validation_year VALUES('CS1813','2017/18');
INSERT INTO validation_year VALUES('CS2847','2017/18');
INSERT INTO validation_year VALUES('CS3563','2017/18');
INSERT INTO validation_year VALUES('CS4504','2017/18');
INSERT INTO validation_year VALUES('CS2910','2017/18');
INSERT INTO validation_year VALUES('CS2900','2017/18');
INSERT INTO validation_year VALUES('CS3915','2017/18');
INSERT INTO validation_year VALUES('CS3910','2018/19');
INSERT INTO validation_year VALUES('CS4980','2019/20');
INSERT INTO validation_year VALUES('CS4990','2019/20');
INSERT INTO validation_year VALUES('IY4523','2016/17');
INSERT INTO validation_year VALUES('IY3609','2016/17');
INSERT INTO validation_year VALUES('CS4860','2016/17');
INSERT INTO validation_year VALUES('CS1831','2016/17');
INSERT INTO validation_year VALUES('IY3606','2016/17');
INSERT INTO validation_year VALUES('IY3612','2016/17');
INSERT INTO validation_year VALUES('IY4501','2016/17');
CREATE TABLE IF NOT EXISTS "option_rules" (
	"rule_id"	INTEGER,
	"prog_code"	TEXT,
	"entry_year"	TEXT,
	"stage"	INTEGER,
	"constraint_type"	TEXT,
	"min_quantity"	INTEGER,
	"max_quantity"	INTEGER,
	"mod_code_pattern"	TEXT,
	"condonable"	INTEGER,
    "allow_project" INTEGER,
	FOREIGN KEY("prog_code") REFERENCES "programmes"("prog_code")
);
INSERT INTO option_rules VALUES(0,'1067','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(1,'1067','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(2,'1067','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(3,'1067','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(4,'1067','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(5,'1067','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(6,'1067','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(7,'1067','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(8,'1067','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(9,'1067','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(10,'1067','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(11,'1067','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(12,'1067','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(13,'1067','2015',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(14,'1067','2015',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(15,'1067','2015',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(16,'2327','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(17,'2327','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(18,'2327','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(19,'2327','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(20,'2327','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(21,'2327','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(22,'2327','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(23,'2327','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(24,'2327','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(25,'2327','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(26,'2327','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(27,'2327','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(28,'2327','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(29,'2327','2015',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(30,'2327','2015',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(31,'2327','2015',4,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(32,'2327','2015',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(33,'1059','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(34,'1059','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(35,'1059','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(36,'1059','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(37,'1059','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(38,'1059','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(39,'1059','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(40,'1059','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(41,'1059','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(42,'1059','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(43,'1059','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(44,'1059','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(45,'1059','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(46,'1059','2015',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(47,'1059','2015',3,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(48,'1059','2015',3,'CORE',1,1,'CS3920',1,0);
INSERT INTO option_rules VALUES(49,'1059','2015',3,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(50,'2446','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(51,'2446','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(52,'2446','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(53,'2446','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(54,'2446','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(55,'2446','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(56,'2446','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(57,'2446','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(58,'2446','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(59,'2446','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(60,'2446','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(61,'2446','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(62,'2446','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(63,'2446','2015',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(64,'2446','2015',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(65,'2446','2015',4,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(66,'2446','2015',4,'CORE',1,1,'CS3920',1,0);
INSERT INTO option_rules VALUES(67,'2446','2015',4,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(68,'2675','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(69,'2675','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(70,'2675','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(71,'2675','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(72,'2675','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(73,'2675','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(74,'2675','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(75,'2675','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(76,'2675','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(77,'2675','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(78,'2675','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(79,'2675','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(80,'2675','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(81,'2675','2015',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(82,'2675','2015',2,'CORE',1,1,'CS2821',1,0);
INSERT INTO option_rules VALUES(83,'2675','2015',3,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(84,'2675','2015',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(85,'2675','2015',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(86,'2675','2015',3,'OPTS',4,4,'CS3',1,0);
INSERT INTO option_rules VALUES(87,'2676','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(88,'2676','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(89,'2676','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(90,'2676','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(91,'2676','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(92,'2676','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(93,'2676','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(94,'2676','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(95,'2676','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(96,'2676','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(97,'2676','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(98,'2676','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(99,'2676','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(100,'2676','2015',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(101,'2676','2015',2,'CORE',1,1,'CS2821',1,0);
INSERT INTO option_rules VALUES(102,'2676','2015',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(103,'2676','2015',4,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(104,'2676','2015',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(105,'2676','2015',4,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(106,'2676','2015',4,'OPTS',4,4,'CS3',1,0);
INSERT INTO option_rules VALUES(107,'1062','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(108,'1062','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(109,'1062','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(110,'1062','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(111,'1062','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(112,'1062','2015',1,'OPTS',2,2,'MN1205,MN1305,MN1405,MN1705',1,0);
INSERT INTO option_rules VALUES(113,'1062','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(114,'1062','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(115,'1062','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(116,'1062','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(117,'1062','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(118,'1062','2015',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(119,'1062','2015',2,'OPTS',2,2,'MN2205,MN2305,MN2405,MN2705',1,0);
INSERT INTO option_rules VALUES(120,'1062','2015',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(121,'1062','2015',3,'OPTS',4,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(122,'1062','2015',3,'CREDITS',90,90,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(123,'1062','2015',3,'CREDITS',30,30,'MN3',1,1);
INSERT INTO option_rules VALUES(124,'1069','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(125,'1069','2015',1,'OPTS',1,1,'CS1840,CS1890',1,0);
INSERT INTO option_rules VALUES(126,'1069','2015',1,'OPTS',1,1,'CS1860,CS1870',1,0);
INSERT INTO option_rules VALUES(127,'1069','2015',1,'CORE',1,1,'MT1710',1,0);
INSERT INTO option_rules VALUES(128,'1069','2015',1,'CORE',1,1,'MT1720',1,0);
INSERT INTO option_rules VALUES(129,'1069','2015',1,'CORE',1,1,'MT1810',1,0);
INSERT INTO option_rules VALUES(130,'1069','2015',1,'CORE',1,1,'MT1820',1,0);
INSERT INTO option_rules VALUES(131,'1069','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(132,'1069','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(133,'1069','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(134,'1069','2015',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(135,'1069','2015',2,'CORE',1,1,'MT2630',1,0);
INSERT INTO option_rules VALUES(136,'1069','2015',2,'CORE',1,1,'MT2800',1,0);
INSERT INTO option_rules VALUES(137,'1069','2015',2,'CREDITS',60,60,'MT2',1,0);
INSERT INTO option_rules VALUES(138,'1069','2015',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(139,'1069','2015',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(140,'1069','2015',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(141,'1069','2015',3,'DISALLOWED',1,1,'CS3490',1,0);
INSERT INTO option_rules VALUES(142,'1069','2015',3,'DISALLOWED',1,1,'CS3870',1,0);
INSERT INTO option_rules VALUES(143,'1069','2015',3,'CREDITS',60,60,'MT3',1,1);
INSERT INTO option_rules VALUES(144,'1257','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(145,'1257','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(146,'1257','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(147,'1257','2015',1,'CORE',1,1,'MN1205',1,0);
INSERT INTO option_rules VALUES(148,'1257','2015',1,'CORE',1,1,'MN1305',1,0);
INSERT INTO option_rules VALUES(149,'1257','2015',1,'CORE',1,1,'MN1405',1,0);
INSERT INTO option_rules VALUES(150,'1257','2015',1,'CORE',1,1,'MN1705',1,0);
INSERT INTO option_rules VALUES(151,'1257','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(152,'1257','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(153,'1257','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(154,'1257','2015',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(155,'1257','2015',2,'CORE',1,1,'MN2205',1,0);
INSERT INTO option_rules VALUES(156,'1257','2015',2,'CORE',1,1,'MN2305',1,0);
INSERT INTO option_rules VALUES(157,'1257','2015',2,'CORE',1,1,'MN2405',1,0);
INSERT INTO option_rules VALUES(158,'1257','2015',2,'CORE',1,1,'MN2705',1,0);
INSERT INTO option_rules VALUES(159,'1257','2015',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(160,'1257','2015',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(161,'1257','2015',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(162,'1257','2015',3,'CREDITS',60,60,'MN3',1,1);
INSERT INTO option_rules VALUES(163,'1067','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(164,'1067','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(165,'1067','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(166,'1067','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(167,'1067','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(168,'1067','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(169,'1067','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(170,'1067','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(171,'1067','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(172,'1067','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(173,'1067','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(174,'1067','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(175,'1067','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(176,'1067','2016',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(177,'1067','2016',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(178,'1067','2016',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(179,'2327','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(180,'2327','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(181,'2327','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(182,'2327','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(183,'2327','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(184,'2327','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(185,'2327','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(186,'2327','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(187,'2327','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(188,'2327','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(189,'2327','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(190,'2327','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(191,'2327','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(192,'2327','2016',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(193,'2327','2016',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(194,'2327','2016',4,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(195,'2327','2016',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(196,'1059','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(197,'1059','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(198,'1059','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(199,'1059','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(200,'1059','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(201,'1059','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(202,'1059','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(203,'1059','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(204,'1059','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(205,'1059','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(206,'1059','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(207,'1059','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(208,'1059','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(209,'1059','2016',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(210,'1059','2016',3,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(211,'1059','2016',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(212,'1059','2016',3,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(213,'2446','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(214,'2446','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(215,'2446','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(216,'2446','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(217,'2446','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(218,'2446','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(219,'2446','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(220,'2446','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(221,'2446','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(222,'2446','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(223,'2446','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(224,'2446','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(225,'2446','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(226,'2446','2016',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(227,'2446','2016',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(228,'2446','2016',4,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(229,'2446','2016',4,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(230,'2446','2016',4,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(231,'2675','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(232,'2675','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(233,'2675','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(234,'2675','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(235,'2675','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(236,'2675','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(237,'2675','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(238,'2675','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(239,'2675','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(240,'2675','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(241,'2675','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(242,'2675','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(243,'2675','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(244,'2675','2016',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(245,'2675','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(246,'2675','2016',3,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(247,'2675','2016',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(248,'2675','2016',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(249,'2675','2016',3,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(250,'2676','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(251,'2676','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(252,'2676','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(253,'2676','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(254,'2676','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(255,'2676','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(256,'2676','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(257,'2676','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(258,'2676','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(259,'2676','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(260,'2676','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(261,'2676','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(262,'2676','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(263,'2676','2016',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(264,'2676','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(265,'2676','2016',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(266,'2676','2016',4,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(267,'2676','2016',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(268,'2676','2016',4,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(269,'2676','2016',4,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(270,'1062','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(271,'1062','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(272,'1062','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(273,'1062','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(274,'1062','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(275,'1062','2016',1,'OPTS',2,2,'MN1205,MN1305,MN1405,MN1705',1,0);
INSERT INTO option_rules VALUES(276,'1062','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(277,'1062','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(278,'1062','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(279,'1062','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(280,'1062','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(281,'1062','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(282,'1062','2016',2,'OPTS',2,2,'MN2205,MN2305,MN2405,MN2705',1,0);
INSERT INTO option_rules VALUES(283,'1062','2016',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(284,'1062','2016',3,'OPTS',4,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(285,'1062','2016',3,'CREDITS',90,90,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(286,'1062','2016',3,'CREDITS',30,30,'MN3',1,1);
INSERT INTO option_rules VALUES(287,'1069','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(288,'1069','2016',1,'OPTS',1,1,'CS1840,CS1890',1,0);
INSERT INTO option_rules VALUES(289,'1069','2016',1,'OPTS',1,1,'CS1860,CS1870',1,0);
INSERT INTO option_rules VALUES(290,'1069','2016',1,'CORE',1,1,'MT1710',1,0);
INSERT INTO option_rules VALUES(291,'1069','2016',1,'CORE',1,1,'MT1720',1,0);
INSERT INTO option_rules VALUES(292,'1069','2016',1,'CORE',1,1,'MT1810',1,0);
INSERT INTO option_rules VALUES(293,'1069','2016',1,'CORE',1,1,'MT1820',1,0);
INSERT INTO option_rules VALUES(294,'1069','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(295,'1069','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(296,'1069','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(297,'1069','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(298,'1069','2016',2,'CORE',1,1,'MT2630',1,0);
INSERT INTO option_rules VALUES(299,'1069','2016',2,'CORE',1,1,'MT2800',1,0);
INSERT INTO option_rules VALUES(300,'1069','2016',2,'CREDITS',60,60,'MT2',1,1);
INSERT INTO option_rules VALUES(301,'1069','2016',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(302,'1069','2016',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(303,'1069','2016',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(304,'1069','2016',3,'DISALLOWED',1,1,'CS3490',1,0);
INSERT INTO option_rules VALUES(305,'1069','2016',3,'DISALLOWED',1,1,'CS3870',1,0);
INSERT INTO option_rules VALUES(306,'1069','2016',3,'CREDITS',60,60,'MT3',1,1);
INSERT INTO option_rules VALUES(307,'1257','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(308,'1257','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(309,'1257','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(310,'1257','2016',1,'CORE',1,1,'MN1205',1,0);
INSERT INTO option_rules VALUES(311,'1257','2016',1,'CORE',1,1,'MN1305',1,0);
INSERT INTO option_rules VALUES(312,'1257','2016',1,'CORE',1,1,'MN1405',1,0);
INSERT INTO option_rules VALUES(313,'1257','2016',1,'CORE',1,1,'MN1705',1,0);
INSERT INTO option_rules VALUES(314,'1257','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(315,'1257','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(316,'1257','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(317,'1257','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(318,'1257','2016',2,'CORE',1,1,'MN2205',1,0);
INSERT INTO option_rules VALUES(319,'1257','2016',2,'CORE',1,1,'MN2305',1,0);
INSERT INTO option_rules VALUES(320,'1257','2016',2,'CORE',1,1,'MN2405',1,0);
INSERT INTO option_rules VALUES(321,'1257','2016',2,'CORE',1,1,'MN2705',1,0);
INSERT INTO option_rules VALUES(322,'1257','2016',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(323,'1257','2016',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(324,'1257','2016',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(325,'1257','2016',3,'CREDITS',60,60,'MN3',1,1);
INSERT INTO option_rules VALUES(326,'1067','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(327,'1067','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(328,'1067','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(329,'1067','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(330,'1067','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(331,'1067','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(332,'1067','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(333,'1067','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(334,'1067','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(335,'1067','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(336,'1067','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(337,'1067','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(338,'1067','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(339,'1067','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(340,'1067','2017',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(341,'1067','2017',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(342,'1067','2017',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(343,'2327','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(344,'2327','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(345,'2327','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(346,'2327','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(347,'2327','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(348,'2327','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(349,'2327','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(350,'2327','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(351,'2327','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(352,'2327','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(353,'2327','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(354,'2327','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(355,'2327','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(356,'2327','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(357,'2327','2017',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(358,'2327','2017',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(359,'2327','2017',4,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(360,'2327','2017',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(361,'1059','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(362,'1059','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(363,'1059','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(364,'1059','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(365,'1059','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(366,'1059','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(367,'1059','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(368,'1059','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(369,'1059','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(370,'1059','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(371,'1059','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(372,'1059','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(373,'1059','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(374,'1059','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(375,'1059','2017',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(376,'1059','2017',3,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(377,'1059','2017',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(378,'1059','2017',3,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(379,'2446','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(380,'2446','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(381,'2446','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(382,'2446','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(383,'2446','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(384,'2446','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(385,'2446','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(386,'2446','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(387,'2446','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(388,'2446','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(389,'2446','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(390,'2446','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(391,'2446','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(392,'2446','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(393,'2446','2017',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(394,'2446','2017',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(395,'2446','2017',4,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(396,'2446','2017',4,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(397,'2446','2017',4,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(398,'3014','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(399,'3014','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(400,'3014','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(401,'3014','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(402,'3014','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(403,'3014','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(404,'3014','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(405,'3014','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(406,'3014','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(407,'3014','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(408,'3014','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(409,'3014','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(410,'3014','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(411,'3014','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(412,'3014','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(413,'3014','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(414,'3014','2017',3,'CORE',1,1,'CS3826',1,0);
INSERT INTO option_rules VALUES(415,'3014','2017',3,'STRAND',1,1,'DNS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(416,'3014','2017',3,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(417,'3015','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(418,'3015','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(419,'3015','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(420,'3015','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(421,'3015','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(422,'3015','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(423,'3015','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(424,'3015','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(425,'3015','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(426,'3015','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(427,'3015','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(428,'3015','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(429,'3015','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(430,'3015','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(431,'3015','2017',2,'CORE',1,1,'IY2*40',1,0);
INSERT INTO option_rules VALUES(432,'3015','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(433,'3015','2017',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(434,'3015','2017',4,'CORE',1,1,'CS3826',1,0);
INSERT INTO option_rules VALUES(435,'3015','2017',4,'STRAND',1,1,'DNS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(436,'3015','2017',4,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(437,'2675','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(438,'2675','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(439,'2675','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(440,'2675','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(441,'2675','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(442,'2675','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(443,'2675','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(444,'2675','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(445,'2675','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(446,'2675','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(447,'2675','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(448,'2675','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(449,'2675','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(450,'2675','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(451,'2675','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(452,'2675','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(453,'2675','2017',3,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(454,'2675','2017',3,'CORE',1,1,'IY3501',1,0);
INSERT INTO option_rules VALUES(455,'2675','2017',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(456,'2675','2017',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(457,'2675','2017',3,'OPTS',1,1,'IY3',1,0);
INSERT INTO option_rules VALUES(458,'2675','2017',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(459,'2676','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(460,'2676','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(461,'2676','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(462,'2676','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(463,'2676','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(464,'2676','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(465,'2676','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(466,'2676','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(467,'2676','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(468,'2676','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(469,'2676','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(470,'2676','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(471,'2676','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(472,'2676','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(473,'2676','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(474,'2676','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(475,'2676','2017',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(476,'2676','2017',4,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(477,'2676','2017',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(478,'2676','2017',4,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(479,'2676','2017',4,'CORE',1,1,'IY3501',1,0);
INSERT INTO option_rules VALUES(480,'2676','2017',4,'OPTS',1,1,'IY3',1,0);
INSERT INTO option_rules VALUES(481,'2676','2017',4,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(482,'1062','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(483,'1062','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(484,'1062','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(485,'1062','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(486,'1062','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(487,'1062','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(488,'1062','2017',1,'OPTS',2,2,'MN1205,MN1305,MN1405,MN1705',1,0);
INSERT INTO option_rules VALUES(489,'1062','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(490,'1062','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(491,'1062','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(492,'1062','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(493,'1062','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(494,'1062','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(495,'1062','2017',2,'OPTS',2,2,'MN2205,MN2305,MN2405,MN2705',1,0);
INSERT INTO option_rules VALUES(496,'1062','2017',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(497,'1062','2017',3,'OPTS',4,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(498,'1062','2017',3,'CREDITS',90,90,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(499,'1062','2017',3,'CREDITS',30,30,'MN3',1,1);
INSERT INTO option_rules VALUES(500,'1069','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(501,'1069','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(502,'1069','2017',1,'OPTS',1,1,'CS1840,CS1890',1,0);
INSERT INTO option_rules VALUES(503,'1069','2017',1,'OPTS',1,1,'CS1860,CS1870',1,0);
INSERT INTO option_rules VALUES(504,'1069','2017',1,'CORE',1,1,'MT1710',1,0);
INSERT INTO option_rules VALUES(505,'1069','2017',1,'CORE',1,1,'MT1720',1,0);
INSERT INTO option_rules VALUES(506,'1069','2017',1,'CORE',1,1,'MT1810',1,0);
INSERT INTO option_rules VALUES(507,'1069','2017',1,'CORE',1,1,'MT1820',1,0);
INSERT INTO option_rules VALUES(508,'1069','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(509,'1069','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(510,'1069','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(511,'1069','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(512,'1069','2017',2,'CORE',1,1,'MT2630',1,0);
INSERT INTO option_rules VALUES(513,'1069','2017',2,'CORE',1,1,'MT2800',1,0);
INSERT INTO option_rules VALUES(514,'1069','2017',2,'CREDITS',60,60,'MT2',1,0);
INSERT INTO option_rules VALUES(515,'1069','2017',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(516,'1069','2017',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(517,'1069','2017',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(518,'1069','2017',3,'DISALLOWED',1,1,'CS3490',1,0);
INSERT INTO option_rules VALUES(519,'1069','2017',3,'DISALLOWED',1,1,'CS3870',1,0);
INSERT INTO option_rules VALUES(520,'1069','2017',3,'CREDITS',60,60,'MT3',1,1);
INSERT INTO option_rules VALUES(521,'1257','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(522,'1257','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(523,'1257','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(524,'1257','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(525,'1257','2017',1,'CORE',1,1,'MN1205',1,0);
INSERT INTO option_rules VALUES(526,'1257','2017',1,'CORE',1,1,'MN1305',1,0);
INSERT INTO option_rules VALUES(527,'1257','2017',1,'CORE',1,1,'MN1405',1,0);
INSERT INTO option_rules VALUES(528,'1257','2017',1,'CORE',1,1,'MN1705',1,0);
INSERT INTO option_rules VALUES(529,'1257','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(530,'1257','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(531,'1257','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(532,'1257','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(533,'1257','2017',2,'CORE',1,1,'MN2205',1,0);
INSERT INTO option_rules VALUES(534,'1257','2017',2,'CORE',1,1,'MN2305',1,0);
INSERT INTO option_rules VALUES(535,'1257','2017',2,'CORE',1,1,'MN2405',1,0);
INSERT INTO option_rules VALUES(536,'1257','2017',2,'CORE',1,1,'MN2705',1,0);
INSERT INTO option_rules VALUES(537,'1257','2017',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(538,'1257','2017',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(539,'1257','2017',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(540,'1257','2017',3,'CREDITS',60,60,'MN3',1,1);
INSERT INTO option_rules VALUES(541,'1067','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(542,'1067','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(543,'1067','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(544,'1067','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(545,'1067','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(546,'1067','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(547,'1067','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(548,'1067','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(549,'1067','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(550,'1067','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(551,'1067','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(552,'1067','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(553,'1067','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(554,'1067','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(555,'1067','2018',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(556,'1067','2018',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(557,'1067','2018',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(558,'2327','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(559,'2327','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(560,'2327','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(561,'2327','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(562,'2327','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(563,'2327','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(564,'2327','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(565,'2327','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(566,'2327','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(567,'2327','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(568,'2327','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(569,'2327','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(570,'2327','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(571,'2327','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(572,'2327','2018',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(573,'2327','2018',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(574,'2327','2018',4,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(575,'2327','2018',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(576,'1059','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(577,'1059','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(578,'1059','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(579,'1059','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(580,'1059','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(581,'1059','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(582,'1059','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(583,'1059','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(584,'1059','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(585,'1059','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(586,'1059','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(587,'1059','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(588,'1059','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(589,'1059','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(590,'1059','2018',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(591,'1059','2018',3,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(592,'1059','2018',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(593,'1059','2018',3,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(594,'2446','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(595,'2446','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(596,'2446','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(597,'2446','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(598,'2446','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(599,'2446','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(600,'2446','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(601,'2446','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(602,'2446','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(603,'2446','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(604,'2446','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(605,'2446','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(606,'2446','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(607,'2446','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(608,'2446','2018',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(609,'2446','2018',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(610,'2446','2018',4,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(611,'2446','2018',4,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(612,'2446','2018',4,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(613,'3014','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(614,'3014','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(615,'3014','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(616,'3014','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(617,'3014','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(618,'3014','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(619,'3014','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(620,'3014','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(621,'3014','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(622,'3014','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(623,'3014','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(624,'3014','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(625,'3014','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(626,'3014','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(627,'3014','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(628,'3014','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(629,'3014','2018',3,'CORE',1,1,'CS3826',1,0);
INSERT INTO option_rules VALUES(630,'3014','2018',3,'STRAND',1,1,'DNS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(631,'3014','2018',3,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(632,'3015','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(633,'3015','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(634,'3015','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(635,'3015','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(636,'3015','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(637,'3015','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(638,'3015','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(639,'3015','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(640,'3015','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(641,'3015','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(642,'3015','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(643,'3015','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(644,'3015','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(645,'3015','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(646,'3015','2018',2,'CORE',1,1,'IY2*40',1,0);
INSERT INTO option_rules VALUES(647,'3015','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(648,'3015','2018',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(649,'3015','2018',4,'CORE',1,1,'CS3826',1,0);
INSERT INTO option_rules VALUES(650,'3015','2018',4,'STRAND',1,1,'DNS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(651,'3015','2018',4,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(652,'2675','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(653,'2675','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(654,'2675','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(655,'2675','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(656,'2675','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(657,'2675','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(658,'2675','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(659,'2675','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(660,'2675','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(661,'2675','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(662,'2675','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(663,'2675','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(664,'2675','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(665,'2675','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(666,'2675','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(667,'2675','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(668,'2675','2018',3,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(669,'2675','2018',3,'CORE',1,1,'IY3501',1,0);
INSERT INTO option_rules VALUES(670,'2675','2018',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(671,'2675','2018',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(672,'2675','2018',3,'OPTS',1,1,'IY3',1,0);
INSERT INTO option_rules VALUES(673,'2675','2018',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(674,'2676','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(675,'2676','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(676,'2676','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(677,'2676','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(678,'2676','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(679,'2676','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(680,'2676','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(681,'2676','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(682,'2676','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(683,'2676','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(684,'2676','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(685,'2676','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(686,'2676','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(687,'2676','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(688,'2676','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(689,'2676','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(690,'2676','2018',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(691,'2676','2018',4,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(692,'2676','2018',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(693,'2676','2018',4,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(694,'2676','2018',4,'CORE',1,1,'IY3501',1,0);
INSERT INTO option_rules VALUES(695,'2676','2018',4,'OPTS',1,1,'IY3',1,0);
INSERT INTO option_rules VALUES(696,'2676','2018',4,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(697,'1062','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(698,'1062','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(699,'1062','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(700,'1062','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(701,'1062','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(702,'1062','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(703,'1062','2018',1,'OPTS',2,2,'MN1205,MN1305,MN1405,MN1705',1,0);
INSERT INTO option_rules VALUES(704,'1062','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(705,'1062','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(706,'1062','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(707,'1062','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(708,'1062','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(709,'1062','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(710,'1062','2018',2,'OPTS',2,2,'MN2205,MN2305,MN2405,MN2705',1,0);
INSERT INTO option_rules VALUES(711,'1062','2018',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(712,'1062','2018',3,'OPTS',4,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(713,'1062','2018',3,'CREDITS',90,90,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(714,'1062','2018',3,'CREDITS',30,30,'MN3',1,1);
INSERT INTO option_rules VALUES(715,'1069','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(716,'1069','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(717,'1069','2018',1,'OPTS',1,1,'CS1840,CS1890',1,0);
INSERT INTO option_rules VALUES(718,'1069','2018',1,'OPTS',1,1,'CS1860,CS1870',1,0);
INSERT INTO option_rules VALUES(719,'1069','2018',1,'CORE',1,1,'MT1710',1,0);
INSERT INTO option_rules VALUES(720,'1069','2018',1,'CORE',1,1,'MT1720',1,0);
INSERT INTO option_rules VALUES(721,'1069','2018',1,'CORE',1,1,'MT1810',1,0);
INSERT INTO option_rules VALUES(722,'1069','2018',1,'CORE',1,1,'MT1820',1,0);
INSERT INTO option_rules VALUES(723,'1069','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(724,'1069','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(725,'1069','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(726,'1069','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(727,'1069','2018',2,'CORE',1,1,'MT2630',1,0);
INSERT INTO option_rules VALUES(728,'1069','2018',2,'CORE',1,1,'MT2800',1,0);
INSERT INTO option_rules VALUES(729,'1069','2018',2,'CREDITS',60,60,'MT2',1,1);
INSERT INTO option_rules VALUES(730,'1069','2018',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(731,'1069','2018',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(732,'1069','2018',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(733,'1069','2018',3,'DISALLOWED',1,1,'CS3490',1,0);
INSERT INTO option_rules VALUES(734,'1069','2018',3,'DISALLOWED',1,1,'CS3870',1,0);
INSERT INTO option_rules VALUES(735,'1069','2018',3,'CREDITS',60,60,'MT3',1,1);
INSERT INTO option_rules VALUES(736,'1257','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(737,'1257','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(738,'1257','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(739,'1257','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(740,'1257','2018',1,'CORE',1,1,'MN1205',1,0);
INSERT INTO option_rules VALUES(741,'1257','2018',1,'CORE',1,1,'MN1305',1,0);
INSERT INTO option_rules VALUES(742,'1257','2018',1,'CORE',1,1,'MN1405',1,0);
INSERT INTO option_rules VALUES(743,'1257','2018',1,'CORE',1,1,'MN1705',1,0);
INSERT INTO option_rules VALUES(744,'1257','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(745,'1257','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(746,'1257','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(747,'1257','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(748,'1257','2018',2,'CORE',1,1,'MN2205',1,0);
INSERT INTO option_rules VALUES(749,'1257','2018',2,'CORE',1,1,'MN2305',1,0);
INSERT INTO option_rules VALUES(750,'1257','2018',2,'CORE',1,1,'MN2405',1,0);
INSERT INTO option_rules VALUES(751,'1257','2018',2,'CORE',1,1,'MN2705',1,0);
INSERT INTO option_rules VALUES(752,'1257','2018',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(753,'1257','2018',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(754,'1257','2018',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(755,'1257','2018',3,'CREDITS',60,60,'MN3',1,1);
INSERT INTO option_rules VALUES(756,'1067','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(757,'1067','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(758,'1067','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(759,'1067','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(760,'1067','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(761,'1067','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(762,'1067','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(763,'1067','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(764,'1067','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(765,'1067','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(766,'1067','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(767,'1067','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(768,'1067','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(769,'1067','2019',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(770,'1067','2019',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(771,'1067','2019',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(772,'2327','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(773,'2327','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(774,'2327','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(775,'2327','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(776,'2327','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(777,'2327','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(778,'2327','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(779,'2327','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(780,'2327','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(781,'2327','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(782,'2327','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(783,'2327','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(784,'2327','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(785,'2327','2019',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(786,'2327','2019',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(787,'2327','2019',4,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(788,'2327','2019',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(789,'1059','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(790,'1059','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(791,'1059','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(792,'1059','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(793,'1059','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(794,'1059','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(795,'1059','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(796,'1059','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(797,'1059','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(798,'1059','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(799,'1059','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(800,'1059','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(801,'1059','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(802,'1059','2019',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(803,'1059','2019',3,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(804,'1059','2019',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(805,'1059','2019',3,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(806,'2446','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(807,'2446','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(808,'2446','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(809,'2446','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(810,'2446','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(811,'2446','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(812,'2446','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(813,'2446','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(814,'2446','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(815,'2446','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(816,'2446','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(817,'2446','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(818,'2446','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(819,'2446','2019',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(820,'2446','2019',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(821,'2446','2019',4,'CORE',1,1,'CS3822',1,1);
INSERT INTO option_rules VALUES(822,'2446','2019',4,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(823,'2446','2019',4,'OPTS',4,4,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(824,'2675','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(825,'2675','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(826,'2675','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(827,'2675','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(828,'2675','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(829,'2675','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(830,'2675','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(831,'2675','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(832,'2675','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(833,'2675','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(834,'2675','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(835,'2675','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(836,'2675','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(837,'2675','2019',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(838,'2675','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(839,'2675','2019',3,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(840,'2675','2019',3,'CORE',1,1,'IY3501',1,0);
INSERT INTO option_rules VALUES(841,'2675','2019',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(842,'2675','2019',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(843,'2675','2019',3,'OPTS',1,1,'IY3',1,0);
INSERT INTO option_rules VALUES(844,'2675','2019',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(845,'2676','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(846,'2676','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(847,'2676','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(848,'2676','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(849,'2676','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(850,'2676','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(851,'2676','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(852,'2676','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(853,'2676','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(854,'2676','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(855,'2676','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(856,'2676','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(857,'2676','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(858,'2676','2019',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(859,'2676','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(860,'2676','2019',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(861,'2676','2019',4,'CORE',1,1,'IY3821',1,1);
INSERT INTO option_rules VALUES(862,'2676','2019',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(863,'2676','2019',4,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(864,'2676','2019',4,'CORE',1,1,'IY3501',1,0);
INSERT INTO option_rules VALUES(865,'2676','2019',4,'OPTS',1,1,'IY3',1,0);
INSERT INTO option_rules VALUES(866,'2676','2019',4,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(867,'1069','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(868,'1069','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(869,'1069','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(870,'1069','2019',1,'CORE',1,1,'MT1710',1,0);
INSERT INTO option_rules VALUES(871,'1069','2019',1,'CORE',1,1,'MT1720',1,0);
INSERT INTO option_rules VALUES(872,'1069','2019',1,'CORE',1,1,'MT1810',1,0);
INSERT INTO option_rules VALUES(873,'1069','2019',1,'CORE',1,1,'MT1820',1,0);
INSERT INTO option_rules VALUES(874,'1069','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(875,'1069','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(876,'1069','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(877,'1069','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(878,'1069','2019',2,'CORE',1,1,'MT2630',1,0);
INSERT INTO option_rules VALUES(879,'1069','2019',2,'CORE',1,1,'MT2800',1,0);
INSERT INTO option_rules VALUES(880,'1069','2019',2,'CREDITS',60,60,'MT2',1,0);
INSERT INTO option_rules VALUES(881,'1069','2019',3,'OPTS',1,1,'CS3821,CS3810',1,1);
INSERT INTO option_rules VALUES(882,'1069','2019',3,'OPTS',2,3,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(883,'1069','2019',3,'CREDITS',60,60,'CS3,IY3',1,1);
INSERT INTO option_rules VALUES(884,'1069','2019',3,'DISALLOWED',1,1,'CS3490',1,0);
INSERT INTO option_rules VALUES(885,'1069','2019',3,'DISALLOWED',1,1,'CS3870',1,0);
INSERT INTO option_rules VALUES(886,'1069','2019',3,'CREDITS',60,60,'MT3',1,1);
INSERT INTO option_rules VALUES(887,'2686','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(888,'2686','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(889,'2686','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(890,'2686','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(891,'2686','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(892,'2686','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(893,'2686','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(894,'2686','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(895,'2686','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(896,'2686','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(897,'2686','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(898,'2686','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(899,'2686','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(900,'2686','2015',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(901,'2686','2015',3,'CORE',1,1,'CS3821',0,1);
INSERT INTO option_rules VALUES(902,'2686','2015',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(903,'2686','2015',4,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(904,'2686','2015',4,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(905,'2687','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(906,'2687','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(907,'2687','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(908,'2687','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(909,'2687','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(910,'2687','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(911,'2687','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(912,'2687','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(913,'2687','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(914,'2687','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(915,'2687','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(916,'2687','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(917,'2687','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(918,'2687','2015',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(919,'2687','2015',3,'CORE',1,1,'CS3821',0,1);
INSERT INTO option_rules VALUES(920,'2687','2015',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(921,'2687','2015',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(922,'2687','2015',5,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(923,'2687','2015',5,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(924,'2673','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(925,'2673','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(926,'2673','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(927,'2673','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(928,'2673','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(929,'2673','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(930,'2673','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(931,'2673','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(932,'2673','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(933,'2673','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(934,'2673','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(935,'2673','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(936,'2673','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(937,'2673','2015',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(938,'2673','2015',3,'CORE',1,1,'CS3822',0,1);
INSERT INTO option_rules VALUES(939,'2673','2015',3,'CORE',1,1,'CS3920',1,0);
INSERT INTO option_rules VALUES(940,'2673','2015',3,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(941,'2673','2015',4,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(942,'2673','2015',4,'CORE',1,1,'CS4100',1,0);
INSERT INTO option_rules VALUES(943,'2673','2015',4,'CORE',1,1,'CS4200',1,0);
INSERT INTO option_rules VALUES(944,'2673','2015',4,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(945,'2674','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(946,'2674','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(947,'2674','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(948,'2674','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(949,'2674','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(950,'2674','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(951,'2674','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(952,'2674','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(953,'2674','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(954,'2674','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(955,'2674','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(956,'2674','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(957,'2674','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(958,'2674','2015',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(959,'2674','2015',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(960,'2674','2015',3,'CORE',1,1,'CS3822',0,1);
INSERT INTO option_rules VALUES(961,'2674','2015',3,'CORE',1,1,'CS3920',1,0);
INSERT INTO option_rules VALUES(962,'2674','2015',3,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(963,'2674','2015',3,'OPTS',5,5,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(964,'2674','2015',5,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(965,'2674','2015',5,'CORE',1,1,'CS4100',1,0);
INSERT INTO option_rules VALUES(966,'2674','2015',5,'CORE',1,1,'CS4200',1,0);
INSERT INTO option_rules VALUES(967,'2674','2015',5,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(968,'2677','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(969,'2677','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(970,'2677','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(971,'2677','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(972,'2677','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(973,'2677','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(974,'2677','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(975,'2677','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(976,'2677','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(977,'2677','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(978,'2677','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(979,'2677','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(980,'2677','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(981,'2677','2015',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(982,'2677','2015',2,'CORE',1,1,'CS2821',1,0);
INSERT INTO option_rules VALUES(983,'2677','2015',3,'CORE',1,1,'IY3821',0,1);
INSERT INTO option_rules VALUES(984,'2677','2015',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(985,'2677','2015',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(986,'2677','2015',3,'OPTS',4,4,'CS3',1,0);
INSERT INTO option_rules VALUES(987,'2677','2015',4,'CORE',1,1,'IY4500',0,0);
INSERT INTO option_rules VALUES(988,'2677','2015',4,'OPTS',2,2,'IY4',1,0);
INSERT INTO option_rules VALUES(989,'2677','2015',4,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(990,'2678','2015',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(991,'2678','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(992,'2678','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(993,'2678','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(994,'2678','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(995,'2678','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(996,'2678','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(997,'2678','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(998,'2678','2015',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(999,'2678','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1000,'2678','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1001,'2678','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1002,'2678','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1003,'2678','2015',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1004,'2678','2015',2,'CORE',1,1,'CS2821',1,0);
INSERT INTO option_rules VALUES(1005,'2678','2015',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1006,'2678','2015',3,'CORE',1,1,'IY3821',0,1);
INSERT INTO option_rules VALUES(1007,'2678','2015',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1008,'2678','2015',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1009,'2678','2015',3,'OPTS',4,4,'CS3',1,0);
INSERT INTO option_rules VALUES(1010,'2678','2015',5,'CORE',1,1,'IY4500',0,1);
INSERT INTO option_rules VALUES(1011,'2678','2015',5,'OPTS',2,2,'IY4',1,0);
INSERT INTO option_rules VALUES(1012,'2678','2015',5,'CORE',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1013,'2686','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(1014,'2686','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1015,'2686','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1016,'2686','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1017,'2686','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1018,'2686','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1019,'2686','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1020,'2686','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1021,'2686','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1022,'2686','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1023,'2686','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1024,'2686','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1025,'2686','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1026,'2686','2016',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1027,'2686','2016',3,'OPTS',8,8,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1028,'2686','2016',4,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(1029,'2686','2016',4,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1030,'2687','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(1031,'2687','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1032,'2687','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1033,'2687','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1034,'2687','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1035,'2687','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1036,'2687','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1037,'2687','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1038,'2687','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1039,'2687','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1040,'2687','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1041,'2687','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1042,'2687','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1043,'2687','2016',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1044,'2687','2016',3,'OPTS',8,8,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1045,'2687','2016',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1046,'2687','2016',5,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(1047,'2687','2016',5,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1048,'2673','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(1049,'2673','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1050,'2673','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1051,'2673','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1052,'2673','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1053,'2673','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1054,'2673','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1055,'2673','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1056,'2673','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1057,'2673','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1058,'2673','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1059,'2673','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1060,'2673','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1061,'2673','2016',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1062,'2673','2016',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1063,'2673','2016',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1064,'2673','2016',4,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(1065,'2673','2016',4,'STRAND',2,2,'AI,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1066,'2673','2016',4,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1067,'2674','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(1068,'2674','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1069,'2674','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1070,'2674','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1071,'2674','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1072,'2674','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1073,'2674','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1074,'2674','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1075,'2674','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1076,'2674','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1077,'2674','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1078,'2674','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1079,'2674','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1080,'2674','2016',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1081,'2674','2016',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1082,'2674','2016',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1083,'2674','2016',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1084,'2674','2016',5,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(1085,'2674','2016',5,'STRAND',2,2,'AI,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1086,'2674','2016',5,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1087,'2677','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(1088,'2677','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1089,'2677','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1090,'2677','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1091,'2677','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1092,'2677','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1093,'2677','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1094,'2677','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1095,'2677','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1096,'2677','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1097,'2677','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1098,'2677','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1099,'2677','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1100,'2677','2016',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1101,'2677','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1102,'2677','2016',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1103,'2677','2016',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1104,'2677','2016',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1105,'2677','2016',3,'MAX_STRAND',4,4,'IS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1106,'2677','2016',4,'CORE',1,1,'IY4500',0,0);
INSERT INTO option_rules VALUES(1107,'2677','2016',4,'CORE',1,1,'IY4501',1,0);
INSERT INTO option_rules VALUES(1108,'2677','2016',4,'CORE',1,1,'IY4523',1,0);
INSERT INTO option_rules VALUES(1109,'2677','2016',4,'CORE',1,1,'IY4610',1,0);
INSERT INTO option_rules VALUES(1110,'2677','2016',4,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1111,'2678','2016',1,'CORE',1,1,'CS1801',0,0);
INSERT INTO option_rules VALUES(1112,'2678','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1113,'2678','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1114,'2678','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1115,'2678','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1116,'2678','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1117,'2678','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1118,'2678','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1119,'2678','2016',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1120,'2678','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1121,'2678','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1122,'2678','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1123,'2678','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1124,'2678','2016',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1125,'2678','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1126,'2678','2016',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1127,'2678','2016',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1128,'2678','2016',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1129,'2678','2016',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1130,'2678','2016',3,'MAX_STRAND',4,4,'IS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1131,'2678','2016',5,'CORE',1,1,'IY4500',0,1);
INSERT INTO option_rules VALUES(1132,'2678','2016',5,'CORE',1,1,'IY4501',1,0);
INSERT INTO option_rules VALUES(1133,'2678','2016',5,'CORE',1,1,'IY4523',1,0);
INSERT INTO option_rules VALUES(1134,'2678','2016',5,'CORE',1,1,'IY4610',1,0);
INSERT INTO option_rules VALUES(1135,'2678','2016',5,'CORE',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1136,'2686','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1137,'2686','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1138,'2686','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1139,'2686','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1140,'2686','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1141,'2686','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1142,'2686','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1143,'2686','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1144,'2686','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1145,'2686','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1146,'2686','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1147,'2686','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1148,'2686','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1149,'2686','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1150,'2686','2017',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1151,'2686','2017',3,'OPTS',8,8,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1152,'2686','2017',4,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(1153,'2686','2017',4,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1154,'2687','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1155,'2687','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1156,'2687','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1157,'2687','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1158,'2687','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1159,'2687','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1160,'2687','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1161,'2687','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1162,'2687','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1163,'2687','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1164,'2687','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1165,'2687','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1166,'2687','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1167,'2687','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1168,'2687','2017',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1169,'2687','2017',3,'OPTS',8,8,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1170,'2687','2017',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1171,'2687','2017',5,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(1172,'2687','2017',5,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1173,'2673','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1174,'2673','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1175,'2673','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1176,'2673','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1177,'2673','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1178,'2673','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1179,'2673','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1180,'2673','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1181,'2673','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1182,'2673','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1183,'2673','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1184,'2673','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1185,'2673','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1186,'2673','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1187,'2673','2017',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(1188,'2673','2017',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1189,'2673','2017',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1190,'2673','2017',4,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(1191,'2673','2017',4,'STRAND',2,2,'AI,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1192,'2673','2017',4,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1193,'2674','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1194,'2674','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1195,'2674','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1196,'2674','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1197,'2674','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1198,'2674','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1199,'2674','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1200,'2674','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1201,'2674','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1202,'2674','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1203,'2674','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1204,'2674','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1205,'2674','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1206,'2674','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1207,'2674','2017',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(1208,'2674','2017',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1209,'2674','2017',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1210,'2674','2017',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1211,'2674','2017',5,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(1212,'2674','2017',5,'STRAND',2,2,'AI,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1213,'2674','2017',5,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1214,'3016','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1215,'3016','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1216,'3016','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1217,'3016','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1218,'3016','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1219,'3016','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1220,'3016','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1221,'3016','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1222,'3016','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1223,'3016','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1224,'3016','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1225,'3016','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1226,'3016','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1227,'3016','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1228,'3016','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1229,'3016','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1230,'3016','2017',3,'STRAND',1,1,'DNS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1231,'3016','2017',3,'OPTS',7,7,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1232,'3016','2017',4,'CORE',1,1,'CS4826',0,0);
INSERT INTO option_rules VALUES(1233,'3016','2017',4,'STRAND',1,1,'DNS,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1234,'3016','2017',4,'OPTS',3,3,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1235,'3017','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1236,'3017','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1237,'3017','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1238,'3017','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1239,'3017','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1240,'3017','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1241,'3017','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1242,'3017','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1243,'3017','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1244,'3017','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1245,'3017','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1246,'3017','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1247,'3017','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1248,'3017','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1249,'3017','2017',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1250,'3017','2017',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1251,'3017','2017',3,'STRAND',1,1,'DNS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1252,'3017','2017',3,'OPTS',7,7,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1253,'3017','2017',5,'CORE',1,1,'CS4826',0,0);
INSERT INTO option_rules VALUES(1254,'3017','2017',5,'STRAND',1,1,'DNS,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1255,'3017','2017',5,'OPTS',3,3,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1256,'2677','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1257,'2677','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1258,'2677','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1259,'2677','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1260,'2677','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1261,'2677','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1262,'2677','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1263,'2677','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1264,'2677','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1265,'2677','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1266,'2677','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1267,'2677','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1268,'2677','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1269,'2677','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1270,'2677','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1271,'2677','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1272,'2677','2017',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1273,'2677','2017',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1274,'2677','2017',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1275,'2677','2017',3,'MAX_STRAND',4,4,'IS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1276,'2677','2017',4,'CORE',1,1,'IY4500',0,0);
INSERT INTO option_rules VALUES(1277,'2677','2017',4,'CORE',1,1,'IY4501',1,0);
INSERT INTO option_rules VALUES(1278,'2677','2017',4,'CORE',1,1,'IY4523',1,0);
INSERT INTO option_rules VALUES(1279,'2677','2017',4,'CORE',1,1,'IY4610',1,0);
INSERT INTO option_rules VALUES(1280,'2677','2017',4,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1281,'2678','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1282,'2678','2017',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1283,'2678','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1284,'2678','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1285,'2678','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1286,'2678','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1287,'2678','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1288,'2678','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1289,'2678','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1290,'2678','2017',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1291,'2678','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1292,'2678','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1293,'2678','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1294,'2678','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1295,'2678','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1296,'2678','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1297,'2678','2017',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1298,'2678','2017',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1299,'2678','2017',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1300,'2678','2017',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1301,'2678','2017',3,'MAX_STRAND',4,4,'IS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1302,'2678','2017',5,'CORE',1,1,'IY4500',0,1);
INSERT INTO option_rules VALUES(1303,'2678','2017',5,'CORE',1,1,'IY4501',1,0);
INSERT INTO option_rules VALUES(1304,'2678','2017',5,'CORE',1,1,'IY4523',1,0);
INSERT INTO option_rules VALUES(1305,'2678','2017',5,'CORE',1,1,'IY4610',1,0);
INSERT INTO option_rules VALUES(1306,'2678','2017',5,'CORE',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1307,'2686','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1308,'2686','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1309,'2686','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1310,'2686','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1311,'2686','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1312,'2686','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1313,'2686','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1314,'2686','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1315,'2686','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1316,'2686','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1317,'2686','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1318,'2686','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1319,'2686','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1320,'2686','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1321,'2686','2018',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1322,'2686','2018',3,'OPTS',8,8,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1323,'2686','2018',4,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(1324,'2686','2018',4,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1325,'2687','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1326,'2687','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1327,'2687','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1328,'2687','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1329,'2687','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1330,'2687','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1331,'2687','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1332,'2687','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1333,'2687','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1334,'2687','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1335,'2687','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1336,'2687','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1337,'2687','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1338,'2687','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1339,'2687','2018',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1340,'2687','2018',3,'OPTS',8,8,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1341,'2687','2018',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1342,'2687','2018',5,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(1343,'2687','2018',5,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1344,'2673','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1345,'2673','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1346,'2673','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1347,'2673','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1348,'2673','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1349,'2673','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1350,'2673','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1351,'2673','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1352,'2673','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1353,'2673','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1354,'2673','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1355,'2673','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1356,'2673','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1357,'2673','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1358,'2673','2018',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(1359,'2673','2018',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1360,'2673','2018',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1361,'2673','2018',4,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(1362,'2673','2018',4,'STRAND',2,2,'AI,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1363,'2673','2018',4,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1364,'2674','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1365,'2674','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1366,'2674','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1367,'2674','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1368,'2674','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1369,'2674','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1370,'2674','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1371,'2674','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1372,'2674','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1373,'2674','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1374,'2674','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1375,'2674','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1376,'2674','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1377,'2674','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1378,'2674','2018',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(1379,'2674','2018',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1380,'2674','2018',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1381,'2674','2018',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1382,'2674','2018',5,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(1383,'2674','2018',5,'STRAND',2,2,'AI,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1384,'2674','2018',5,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1385,'3016','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1386,'3016','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1387,'3016','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1388,'3016','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1389,'3016','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1390,'3016','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1391,'3016','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1392,'3016','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1393,'3016','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1394,'3016','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1395,'3016','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1396,'3016','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1397,'3016','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1398,'3016','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1399,'3016','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1400,'3016','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1401,'3016','2018',3,'STRAND',1,1,'DNS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1402,'3016','2018',3,'OPTS',7,7,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1403,'3016','2018',4,'CORE',1,1,'CS4826',0,0);
INSERT INTO option_rules VALUES(1404,'3016','2018',4,'STRAND',1,1,'DNS,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1405,'3016','2018',4,'OPTS',3,3,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1406,'3017','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1407,'3017','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1408,'3017','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1409,'3017','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1410,'3017','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1411,'3017','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1412,'3017','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1413,'3017','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1414,'3017','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1415,'3017','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1416,'3017','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1417,'3017','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1418,'3017','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1419,'3017','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1420,'3017','2018',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1421,'3017','2018',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1422,'3017','2018',3,'STRAND',1,1,'DNS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1423,'3017','2018',3,'OPTS',7,7,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1424,'3017','2018',5,'CORE',1,1,'CS4826',0,0);
INSERT INTO option_rules VALUES(1425,'3017','2018',5,'STRAND',1,1,'DNS,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1426,'3017','2018',5,'OPTS',3,3,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1427,'2677','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1428,'2677','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1429,'2677','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1430,'2677','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1431,'2677','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1432,'2677','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1433,'2677','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1434,'2677','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1435,'2677','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1436,'2677','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1437,'2677','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1438,'2677','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1439,'2677','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1440,'2677','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1441,'2677','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1442,'2677','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1443,'2677','2018',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1444,'2677','2018',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1445,'2677','2018',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1446,'2677','2018',3,'MAX_STRAND',4,4,'IS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1447,'2677','2018',4,'CORE',1,1,'IY4500',0,0);
INSERT INTO option_rules VALUES(1448,'2677','2018',4,'CORE',1,1,'IY4501',1,0);
INSERT INTO option_rules VALUES(1449,'2677','2018',4,'CORE',1,1,'IY4523',1,0);
INSERT INTO option_rules VALUES(1450,'2677','2018',4,'CORE',1,1,'IY4610',1,0);
INSERT INTO option_rules VALUES(1451,'2677','2018',4,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1452,'2678','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1453,'2678','2018',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1454,'2678','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1455,'2678','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1456,'2678','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1457,'2678','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1458,'2678','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1459,'2678','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1460,'2678','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1461,'2678','2018',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1462,'2678','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1463,'2678','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1464,'2678','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1465,'2678','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1466,'2678','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1467,'2678','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1468,'2678','2018',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1469,'2678','2018',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1470,'2678','2018',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1471,'2678','2018',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1472,'2678','2018',3,'MAX_STRAND',4,4,'IS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1473,'2678','2018',5,'CORE',1,1,'IY4500',0,1);
INSERT INTO option_rules VALUES(1474,'2678','2018',5,'CORE',1,1,'IY4501',1,0);
INSERT INTO option_rules VALUES(1475,'2678','2018',5,'CORE',1,1,'IY4523',1,0);
INSERT INTO option_rules VALUES(1476,'2678','2018',5,'CORE',1,1,'IY4610',1,0);
INSERT INTO option_rules VALUES(1477,'2678','2018',5,'CORE',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1478,'2686','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1479,'2686','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1480,'2686','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(1481,'2686','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1482,'2686','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1483,'2686','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1484,'2686','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1485,'2686','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1486,'2686','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1487,'2686','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1488,'2686','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1489,'2686','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1490,'2686','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1491,'2686','2019',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1492,'2686','2019',3,'OPTS',8,8,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1493,'2686','2019',4,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(1494,'2686','2019',4,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1495,'2687','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1496,'2687','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1497,'2687','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(1498,'2687','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1499,'2687','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1500,'2687','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1501,'2687','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1502,'2687','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1503,'2687','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1504,'2687','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1505,'2687','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1506,'2687','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1507,'2687','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1508,'2687','2019',2,'OPTS',2,2,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1509,'2687','2019',3,'OPTS',8,8,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1510,'2687','2019',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1511,'2687','2019',5,'CORE',1,1,'CS4821',0,1);
INSERT INTO option_rules VALUES(1512,'2687','2019',5,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1513,'2673','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1514,'2673','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1515,'2673','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(1516,'2673','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1517,'2673','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1518,'2673','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1519,'2673','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1520,'2673','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1521,'2673','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1522,'2673','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1523,'2673','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1524,'2673','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1525,'2673','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1526,'2673','2019',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(1527,'2673','2019',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1528,'2673','2019',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1529,'2673','2019',4,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(1530,'2673','2019',4,'STRAND',2,2,'AI,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1531,'2673','2019',4,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1532,'2674','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1533,'2674','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1534,'2674','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(1535,'2674','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1536,'2674','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1537,'2674','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1538,'2674','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1539,'2674','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1540,'2674','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1541,'2674','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1542,'2674','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1543,'2674','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1544,'2674','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1545,'2674','2019',2,'STRAND',2,2,'AI,CS2',1,0);
INSERT INTO option_rules VALUES(1546,'2674','2019',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1547,'2674','2019',3,'STRAND',2,2,'AI,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1548,'2674','2019',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1549,'2674','2019',5,'CORE',1,1,'CS4822',0,1);
INSERT INTO option_rules VALUES(1550,'2674','2019',5,'STRAND',2,2,'AI,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1551,'2674','2019',5,'OPTS',2,2,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1552,'2677','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1553,'2677','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1554,'2677','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(1555,'2677','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1556,'2677','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1557,'2677','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1558,'2677','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1559,'2677','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1560,'2677','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1561,'2677','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1562,'2677','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1563,'2677','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1564,'2677','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1565,'2677','2019',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1566,'2677','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1567,'2677','2019',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1568,'2677','2019',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1569,'2677','2019',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1570,'2677','2019',3,'MAX_STRAND',4,4,'IS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1571,'2677','2019',4,'CORE',1,1,'IY4500',0,0);
INSERT INTO option_rules VALUES(1572,'2677','2019',4,'CORE',1,1,'IY4501',1,0);
INSERT INTO option_rules VALUES(1573,'2677','2019',4,'CORE',1,1,'IY4523',1,0);
INSERT INTO option_rules VALUES(1574,'2677','2019',4,'CORE',1,1,'IY4610',1,0);
INSERT INTO option_rules VALUES(1575,'2677','2019',4,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1576,'2678','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1577,'2678','2019',1,'DISC_ALT',1,1,'CS1812,CS1813',0,0);
INSERT INTO option_rules VALUES(1578,'2678','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(1579,'2678','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1580,'2678','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1581,'2678','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1582,'2678','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1583,'2678','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1584,'2678','2019',2,'CORE',1,1,'CS2810',0,0);
INSERT INTO option_rules VALUES(1585,'2678','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1586,'2678','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1587,'2678','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1588,'2678','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1589,'2678','2019',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1590,'2678','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1591,'2678','2019',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1592,'2678','2019',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1593,'2678','2019',3,'CORE',1,1,'IY3660',1,0);
INSERT INTO option_rules VALUES(1594,'2678','2019',3,'OPTS',6,6,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1595,'2678','2019',3,'MAX_STRAND',4,4,'IS,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1596,'2678','2019',5,'CORE',1,1,'IY4500',0,1);
INSERT INTO option_rules VALUES(1597,'2678','2019',5,'CORE',1,1,'IY4501',1,0);
INSERT INTO option_rules VALUES(1598,'2678','2019',5,'CORE',1,1,'IY4523',1,0);
INSERT INTO option_rules VALUES(1599,'2678','2019',5,'CORE',1,1,'IY4610',1,0);
INSERT INTO option_rules VALUES(1600,'2678','2019',5,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1601,'2843','2015',1,'CORE',1,1,'CS1802',0,0);
INSERT INTO option_rules VALUES(1602,'2843','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1603,'2843','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1604,'2843','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1605,'2843','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1606,'2843','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1607,'2843','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1608,'2843','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1609,'2843','2015',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1610,'2843','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1611,'2843','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1612,'2843','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1613,'2843','2015',2,'CORE',1,1,'CS2821',1,0);
INSERT INTO option_rules VALUES(1614,'2843','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1615,'2843','2015',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1616,'2843','2015',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1617,'2843','2015',3,'CORE',1,1,'CS3003',1,0);
INSERT INTO option_rules VALUES(1618,'2843','2015',3,'CORE',1,1,'CS3480',1,0);
INSERT INTO option_rules VALUES(1619,'2843','2015',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1620,'2843','2015',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1621,'2843','2015',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1622,'2844','2015',1,'CORE',1,1,'CS1802',0,0);
INSERT INTO option_rules VALUES(1623,'2844','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1624,'2844','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1625,'2844','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1626,'2844','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1627,'2844','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1628,'2844','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1629,'2844','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1630,'2844','2015',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1631,'2844','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1632,'2844','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1633,'2844','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1634,'2844','2015',2,'CORE',1,1,'CS2821',1,0);
INSERT INTO option_rules VALUES(1635,'2844','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1636,'2844','2015',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1637,'2844','2015',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(1638,'2844','2015',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1639,'2844','2015',4,'CORE',1,1,'CS3003',1,0);
INSERT INTO option_rules VALUES(1640,'2844','2015',4,'CORE',1,1,'CS3480',1,0);
INSERT INTO option_rules VALUES(1641,'2844','2015',4,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1642,'2844','2015',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1643,'2844','2015',4,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1644,'2843','2016',1,'CORE',1,1,'CS1802',0,0);
INSERT INTO option_rules VALUES(1645,'2843','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1646,'2843','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1647,'2843','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1648,'2843','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1649,'2843','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1650,'2843','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1651,'2843','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1652,'2843','2016',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1653,'2843','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1654,'2843','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1655,'2843','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1656,'2843','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1657,'2843','2016',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1658,'2843','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1659,'2843','2016',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1660,'2843','2016',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1661,'2843','2016',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1662,'2843','2016',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1663,'2843','2016',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1664,'2844','2016',1,'CORE',1,1,'CS1802',0,0);
INSERT INTO option_rules VALUES(1665,'2844','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1666,'2844','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1667,'2844','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1668,'2844','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1669,'2844','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1670,'2844','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1671,'2844','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1672,'2844','2016',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1673,'2844','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1674,'2844','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1675,'2844','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1676,'2844','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1677,'2844','2016',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1678,'2844','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1679,'2844','2016',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(1680,'2844','2016',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1681,'2844','2016',4,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1682,'2844','2016',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1683,'2844','2016',4,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1684,'2844','2016',4,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1685,'2843','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1686,'2843','2017',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1687,'2843','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1688,'2843','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1689,'2843','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1690,'2843','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1691,'2843','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1692,'2843','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1693,'2843','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1694,'2843','2017',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1695,'2843','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1696,'2843','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1697,'2843','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1698,'2843','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1699,'2843','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1700,'2843','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1701,'2843','2017',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1702,'2843','2017',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1703,'2843','2017',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1704,'2843','2017',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1705,'2843','2017',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1706,'2844','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1707,'2844','2017',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1708,'2844','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1709,'2844','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1710,'2844','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1711,'2844','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1712,'2844','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1713,'2844','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1714,'2844','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1715,'2844','2017',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1716,'2844','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1717,'2844','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1718,'2844','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1719,'2844','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1720,'2844','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1721,'2844','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1722,'2844','2017',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(1723,'2844','2017',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1724,'2844','2017',4,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1725,'2844','2017',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1726,'2844','2017',4,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1727,'2844','2017',4,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1728,'2843','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1729,'2843','2018',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1730,'2843','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1731,'2843','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1732,'2843','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1733,'2843','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1734,'2843','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1735,'2843','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1736,'2843','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1737,'2843','2018',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1738,'2843','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1739,'2843','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1740,'2843','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1741,'2843','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1742,'2843','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1743,'2843','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1744,'2843','2018',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1745,'2843','2018',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1746,'2843','2018',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1747,'2843','2018',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1748,'2843','2018',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1749,'2844','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1750,'2844','2018',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1751,'2844','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1752,'2844','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1753,'2844','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1754,'2844','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1755,'2844','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1756,'2844','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1757,'2844','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1758,'2844','2018',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1759,'2844','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1760,'2844','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1761,'2844','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1762,'2844','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1763,'2844','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1764,'2844','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1765,'2844','2018',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(1766,'2844','2018',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1767,'2844','2018',4,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1768,'2844','2018',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1769,'2844','2018',4,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1770,'2844','2018',4,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1771,'2843','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1772,'2843','2019',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1773,'2843','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(1774,'2843','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1775,'2843','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1776,'2843','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1777,'2843','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1778,'2843','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1779,'2843','2019',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1780,'2843','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1781,'2843','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1782,'2843','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1783,'2843','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1784,'2843','2019',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1785,'2843','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1786,'2843','2019',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1787,'2843','2019',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1788,'2843','2019',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1789,'2843','2019',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1790,'2843','2019',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1791,'2844','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1792,'2844','2019',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1793,'2844','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(1794,'2844','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1795,'2844','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1796,'2844','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1797,'2844','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1798,'2844','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1799,'2844','2019',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1800,'2844','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1801,'2844','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1802,'2844','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1803,'2844','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1804,'2844','2019',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1805,'2844','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1806,'2844','2019',3,'CORE',1,1,'CS3001',0,0);
INSERT INTO option_rules VALUES(1807,'2844','2019',4,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1808,'2844','2019',4,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1809,'2844','2019',4,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1810,'2844','2019',4,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1811,'2844','2019',4,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1812,'2845','2015',1,'CORE',1,1,'CS1802',0,0);
INSERT INTO option_rules VALUES(1813,'2845','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1814,'2845','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1815,'2845','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1816,'2845','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1817,'2845','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1818,'2845','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1819,'2845','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1820,'2845','2015',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1821,'2845','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1822,'2845','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1823,'2845','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1824,'2845','2015',2,'CORE',1,1,'CS2821',1,0);
INSERT INTO option_rules VALUES(1825,'2845','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1826,'2845','2015',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1827,'2845','2015',3,'CORE',1,1,'CS3821',0,1);
INSERT INTO option_rules VALUES(1828,'2845','2015',3,'CORE',1,1,'CS3003',1,0);
INSERT INTO option_rules VALUES(1829,'2845','2015',3,'CORE',1,1,'CS3480',1,0);
INSERT INTO option_rules VALUES(1830,'2845','2015',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1831,'2845','2015',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1832,'2845','2015',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1833,'2845','2015',4,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(1834,'2845','2015',4,'CORE',1,1,'CS4910',1,0);
INSERT INTO option_rules VALUES(1835,'2845','2015',4,'CORE',1,1,'CS4915',1,0);
INSERT INTO option_rules VALUES(1836,'2845','2015',4,'CORE',1,1,'CS4563',1,0);
INSERT INTO option_rules VALUES(1837,'2845','2015',4,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1838,'2846','2015',1,'CORE',1,1,'CS1802',0,0);
INSERT INTO option_rules VALUES(1839,'2846','2015',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1840,'2846','2015',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1841,'2846','2015',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1842,'2846','2015',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1843,'2846','2015',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1844,'2846','2015',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1845,'2846','2015',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1846,'2846','2015',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1847,'2846','2015',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1848,'2846','2015',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1849,'2846','2015',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1850,'2846','2015',2,'CORE',1,1,'CS2821',1,0);
INSERT INTO option_rules VALUES(1851,'2846','2015',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1852,'2846','2015',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1853,'2846','2015',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1854,'2846','2015',3,'CORE',1,1,'CS3821',0,1);
INSERT INTO option_rules VALUES(1855,'2846','2015',3,'CORE',1,1,'CS3003',1,0);
INSERT INTO option_rules VALUES(1856,'2846','2015',3,'CORE',1,1,'CS3480',1,0);
INSERT INTO option_rules VALUES(1857,'2846','2015',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1858,'2846','2015',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1859,'2846','2015',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1860,'2846','2015',5,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(1861,'2846','2015',5,'CORE',1,1,'CS4910',1,0);
INSERT INTO option_rules VALUES(1862,'2846','2015',5,'CORE',1,1,'CS4915',1,0);
INSERT INTO option_rules VALUES(1863,'2846','2015',5,'CORE',1,1,'CS4563',1,0);
INSERT INTO option_rules VALUES(1864,'2846','2015',5,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1865,'2845','2016',1,'CORE',1,1,'CS1802',0,0);
INSERT INTO option_rules VALUES(1866,'2845','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1867,'2845','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1868,'2845','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1869,'2845','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1870,'2845','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1871,'2845','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1872,'2845','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1873,'2845','2016',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1874,'2845','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1875,'2845','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1876,'2845','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1877,'2845','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1878,'2845','2016',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1879,'2845','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1880,'2845','2016',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1881,'2845','2016',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1882,'2845','2016',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1883,'2845','2016',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1884,'2845','2016',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1885,'2845','2016',4,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(1886,'2845','2016',4,'STRAND',3,3,'SE,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1887,'2845','2016',4,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1888,'2846','2016',1,'CORE',1,1,'CS1802',0,0);
INSERT INTO option_rules VALUES(1889,'2846','2016',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1890,'2846','2016',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1891,'2846','2016',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1892,'2846','2016',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1893,'2846','2016',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1894,'2846','2016',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1895,'2846','2016',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1896,'2846','2016',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1897,'2846','2016',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1898,'2846','2016',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1899,'2846','2016',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1900,'2846','2016',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1901,'2846','2016',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1902,'2846','2016',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1903,'2846','2016',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1904,'2846','2016',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1905,'2846','2016',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1906,'2846','2016',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1907,'2846','2016',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1908,'2846','2016',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1909,'2846','2016',5,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(1910,'2846','2016',5,'STRAND',3,3,'SE,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1911,'2846','2016',5,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1912,'2845','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1913,'2845','2017',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1914,'2845','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1915,'2845','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1916,'2845','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1917,'2845','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1918,'2845','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1919,'2845','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1920,'2845','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1921,'2845','2017',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1922,'2845','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1923,'2845','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1924,'2845','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1925,'2845','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1926,'2845','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1927,'2845','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1928,'2845','2017',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1929,'2845','2017',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1930,'2845','2017',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1931,'2845','2017',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1932,'2845','2017',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1933,'2845','2017',4,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(1934,'2845','2017',4,'STRAND',3,3,'SE,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1935,'2845','2017',4,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1936,'2846','2017',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1937,'2846','2017',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1938,'2846','2017',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1939,'2846','2017',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1940,'2846','2017',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1941,'2846','2017',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1942,'2846','2017',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1943,'2846','2017',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1944,'2846','2017',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1945,'2846','2017',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1946,'2846','2017',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1947,'2846','2017',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1948,'2846','2017',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1949,'2846','2017',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1950,'2846','2017',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1951,'2846','2017',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1952,'2846','2017',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(1953,'2846','2017',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1954,'2846','2017',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1955,'2846','2017',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1956,'2846','2017',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1957,'2846','2017',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1958,'2846','2017',5,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(1959,'2846','2017',5,'STRAND',3,3,'SE,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1960,'2846','2017',5,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1961,'2845','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1962,'2845','2018',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1963,'2845','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1964,'2845','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1965,'2845','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1966,'2845','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1967,'2845','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1968,'2845','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1969,'2845','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1970,'2845','2018',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1971,'2845','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1972,'2845','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1973,'2845','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1974,'2845','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1975,'2845','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(1976,'2845','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(1977,'2845','2018',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(1978,'2845','2018',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(1979,'2845','2018',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(1980,'2845','2018',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1981,'2845','2018',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(1982,'2845','2018',4,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(1983,'2845','2018',4,'STRAND',3,3,'SE,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1984,'2845','2018',4,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(1985,'2846','2018',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(1986,'2846','2018',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(1987,'2846','2018',1,'CORE',1,1,'CS1820',1,0);
INSERT INTO option_rules VALUES(1988,'2846','2018',1,'CORE',1,1,'CS1830',1,0);
INSERT INTO option_rules VALUES(1989,'2846','2018',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(1990,'2846','2018',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(1991,'2846','2018',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(1992,'2846','2018',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(1993,'2846','2018',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(1994,'2846','2018',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(1995,'2846','2018',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(1996,'2846','2018',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(1997,'2846','2018',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(1998,'2846','2018',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(1999,'2846','2018',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(2000,'2846','2018',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(2001,'2846','2018',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(2002,'2846','2018',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(2003,'2846','2018',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(2004,'2846','2018',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(2005,'2846','2018',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(2006,'2846','2018',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(2007,'2846','2018',5,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(2008,'2846','2018',5,'STRAND',3,3,'SE,CS4,IY4',1,0);
INSERT INTO option_rules VALUES(2009,'2846','2018',5,'OPTS',1,1,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(2010,'2845','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(2011,'2845','2019',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(2012,'2845','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(2013,'2845','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(2014,'2845','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(2015,'2845','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(2016,'2845','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(2017,'2845','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(2018,'2845','2019',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(2019,'2845','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(2020,'2845','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(2021,'2845','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(2022,'2845','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(2023,'2845','2019',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(2024,'2845','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(2025,'2845','2019',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(2026,'2845','2019',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(2027,'2845','2019',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(2028,'2845','2019',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(2029,'2845','2019',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(2030,'2845','2019',4,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(2031,'2845','2019',4,'OPTS',4,4,'CS4,IY4',1,0);
INSERT INTO option_rules VALUES(2032,'2846','2019',1,'CORE',1,1,'CS1811',0,0);
INSERT INTO option_rules VALUES(2033,'2846','2019',1,'CORE',1,1,'CS1813',0,0);
INSERT INTO option_rules VALUES(2034,'2846','2019',1,'DISC_ALT',1,1,'CS1822,CS1821',0,0);
INSERT INTO option_rules VALUES(2035,'2846','2019',1,'CORE',1,1,'CS1840',1,0);
INSERT INTO option_rules VALUES(2036,'2846','2019',1,'CORE',1,1,'CS1860',1,0);
INSERT INTO option_rules VALUES(2037,'2846','2019',1,'CORE',1,1,'CS1870',1,0);
INSERT INTO option_rules VALUES(2038,'2846','2019',1,'CORE',1,1,'CS1890',1,0);
INSERT INTO option_rules VALUES(2039,'2846','2019',2,'CORE',1,1,'CS2800',0,0);
INSERT INTO option_rules VALUES(2040,'2846','2019',2,'CORE',1,1,'CS2815',0,0);
INSERT INTO option_rules VALUES(2041,'2846','2019',2,'CORE',1,1,'CS2850',1,0);
INSERT INTO option_rules VALUES(2042,'2846','2019',2,'CORE',1,1,'CS2855',1,0);
INSERT INTO option_rules VALUES(2043,'2846','2019',2,'CORE',1,1,'CS2860',1,0);
INSERT INTO option_rules VALUES(2044,'2846','2019',2,'CORE',1,1,'IY2760',1,0);
INSERT INTO option_rules VALUES(2045,'2846','2019',2,'CORE',1,1,'IY2840',1,0);
INSERT INTO option_rules VALUES(2046,'2846','2019',2,'OPTS',1,1,'CS2,IY2',1,0);
INSERT INTO option_rules VALUES(2047,'2846','2019',4,'CORE',1,1,'CS4001',0,0);
INSERT INTO option_rules VALUES(2048,'2846','2019',3,'CORE',1,1,'CS3821',1,1);
INSERT INTO option_rules VALUES(2049,'2846','2019',3,'CORE',1,1,'CS3846',1,0);
INSERT INTO option_rules VALUES(2050,'2846','2019',3,'CORE',1,1,'IY3840',1,0);
INSERT INTO option_rules VALUES(2051,'2846','2019',3,'STRAND',2,2,'SE,CS3,IY3',1,0);
INSERT INTO option_rules VALUES(2052,'2846','2019',3,'OPTS',2,2,'CS3,IY3',1,0);
INSERT INTO option_rules VALUES(2053,'2845','2019',5,'CORE',1,1,'CS4825',1,1);
INSERT INTO option_rules VALUES(2054,'2845','2019',5,'OPTS',4,4,'CS4,IY4',1,0);
CREATE TABLE teaching_activities (
  "mod_code" text,
  "activity_name" text,
  "kis_category" text,
  "length_mins" text,
  "num_weeks" text,
  "times_per_week" text,
  "total_hours" integer,
  foreign key (mod_code) references modules(mod_code)
);
INSERT INTO teaching_activities VALUES('CS3910','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS3910','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS4100','Lectures','S','50','10','3-4',31);
INSERT INTO teaching_activities VALUES('CS4100','Laboratory classes','S','50','9','1',9);
INSERT INTO teaching_activities VALUES('CS4100','Guided Independent Study','I','n/a','n/a','n/a',110);
INSERT INTO teaching_activities VALUES('CS3760','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS3760','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS4234','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4234','Laboratory classes','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4234','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('CS4563','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4563','Guided Independent Study','I','n/a','n/a','n/a',128);
INSERT INTO teaching_activities VALUES('CS4950','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4950','Practical Classes and Workshops','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4950','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('CS3920','Lectures','S','60','10','2',20);
INSERT INTO teaching_activities VALUES('CS3920','Laboratory classes','S','60','10','1',10);
INSERT INTO teaching_activities VALUES('CS3920','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('CS3915','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS3915','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS4920','Lectures','S','60','10','2',20);
INSERT INTO teaching_activities VALUES('CS4920','Laboratory classes','S','60','10','1',10);
INSERT INTO teaching_activities VALUES('CS4920','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('CS3563','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS3563','Guided Independent Study','I','n/a','n/a','n/a',128);
INSERT INTO teaching_activities VALUES('CS4825','Lectures','S','60','1','1',1);
INSERT INTO teaching_activities VALUES('CS4825','Project Supervision','S','','','',12);
INSERT INTO teaching_activities VALUES('CS4825','Demonstration','S','60','5','0-1',5);
INSERT INTO teaching_activities VALUES('CS4825','Practical Classes and Workshops','S','60','1','2',2);
INSERT INTO teaching_activities VALUES('CS4825','Guided Independent Study','I','n/a','n/a','n/a',580);
INSERT INTO teaching_activities VALUES('CS4200','Lectures','S','60','10','3-4',35);
INSERT INTO teaching_activities VALUES('CS4200','Practical Classes and Workshops','S','60','5','1',5);
INSERT INTO teaching_activities VALUES('CS4200','Guided Independent Study','I','n/a','n/a','n/a',110);
INSERT INTO teaching_activities VALUES('CS4910','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS4910','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS3003','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS3003','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS4490','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('CS4490','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('IY4501','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('IY4501','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS3490','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('CS3490','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('IY3501','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('IY3501','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS3000','Lectures','S','150','10','1',25);
INSERT INTO teaching_activities VALUES('CS3000','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('CS2855','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS2855','Laboratory classes','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS2855','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('DC3760','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('DC3760','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS3870','Lectures','','180','11','1',33);
INSERT INTO teaching_activities VALUES('CS1823','Lectures','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS1823','Laboratory classes','S','60','15','1',15);
INSERT INTO teaching_activities VALUES('CS1823','Practical Classes and Workshops','S','60','20','2',40);
INSERT INTO teaching_activities VALUES('CS1823','Guided Independent Study','I','n/a','n/a','n/a',230);
INSERT INTO teaching_activities VALUES('CS4980','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4980','Laboratory classes','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4980','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('CS1821','Lectures','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS1821','Laboratory classes','S','60','15','1',15);
INSERT INTO teaching_activities VALUES('CS1821','Practical Classes and Workshops','S','60','20','2',40);
INSERT INTO teaching_activities VALUES('CS1821','Guided Independent Study','I','n/a','n/a','n/a',230);
INSERT INTO teaching_activities VALUES('CS4990','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4990','Laboratory classes','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4990','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('DC1821','Lectures','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('DC1821','Laboratory classes','S','60','15','1',15);
INSERT INTO teaching_activities VALUES('DC1821','Practical Classes and Workshops','S','60','20','2',40);
INSERT INTO teaching_activities VALUES('DC1821','Guided Independent Study','I','n/a','n/a','n/a',234);
INSERT INTO teaching_activities VALUES('CS1822','Lectures','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS1822','Laboratory classes','S','60','15','1',15);
INSERT INTO teaching_activities VALUES('CS1822','Practical Classes and Workshops','S','60','20','2',40);
INSERT INTO teaching_activities VALUES('CS1822','Guided Independent Study','I','n/a','n/a','n/a',234);
INSERT INTO teaching_activities VALUES('IY4523','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('IY4523','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('IY3609','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('IY3609','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('CS4860','Lectures','S','60','10','2',20);
INSERT INTO teaching_activities VALUES('CS4860','Laboratory classes','S','60','10','2',20);
INSERT INTO teaching_activities VALUES('CS4860','Guided Independent Study','I','n/a','n/a','n/a',110);
INSERT INTO teaching_activities VALUES('CS1831','Lectures','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS1831','Laboratory classes','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS1831','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('IY3606','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('IY3606','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('IY3612','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('IY3612','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('CS1801','Lectures','S','60','22','2',44);
INSERT INTO teaching_activities VALUES('CS1801','Tutorials','S','60','4','1',4);
INSERT INTO teaching_activities VALUES('CS1801','Laboratory classes','S','180','22','1',66);
INSERT INTO teaching_activities VALUES('CS1801','Guided Independent Study','I','n/a','n/a','n/a',186);
INSERT INTO teaching_activities VALUES('CS3220','Laboratory classes','S','120','11','2',44);
INSERT INTO teaching_activities VALUES('CS3220','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('IY4606','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('IY4606','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('CS4220','Laboratory classes','S','120','11','2',44);
INSERT INTO teaching_activities VALUES('CS4220','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('CS3945','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS3945','Laboratory classes','S','60','5','1',5);
INSERT INTO teaching_activities VALUES('CS3945','Guided Independent Study','I','n/a','n/a','n/a',123);
INSERT INTO teaching_activities VALUES('CS1830','Lectures','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS1830','Laboratory classes','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS1830','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('CS4945','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS4945','Laboratory classes','S','60','5','1',5);
INSERT INTO teaching_activities VALUES('CS4945','Guided Independent Study','I','n/a','n/a','n/a',123);
INSERT INTO teaching_activities VALUES('CS1802','Lectures','S','60','22','2',44);
INSERT INTO teaching_activities VALUES('CS1802','Tutorials','S','60','2','1',2);
INSERT INTO teaching_activities VALUES('CS1802','Laboratory classes','S','120-180','20','1',51);
INSERT INTO teaching_activities VALUES('CS1802','Guided Independent Study','I','n/a','n/a','n/a',203);
INSERT INTO teaching_activities VALUES('IY4612','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('IY4612','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('IY4609','Lectures','S','60','10','3',30);
INSERT INTO teaching_activities VALUES('IY4609','Guided Independent Study','I','n/a','n/a','n/a',120);
INSERT INTO teaching_activities VALUES('IY2840','Lectures','S','60','11','2-3',28);
INSERT INTO teaching_activities VALUES('IY2840','Laboratory classes','S','60','5','1',5);
INSERT INTO teaching_activities VALUES('IY2840','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS2821','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS2821','Laboratory classes','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS2821','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('CS3823','Lectures','S','60','1','1',1);
INSERT INTO teaching_activities VALUES('CS3823','Project Supervision','S','','','','3-5');
INSERT INTO teaching_activities VALUES('CS3823','Demonstration','S','60','2','1',2);
INSERT INTO teaching_activities VALUES('CS3823','Practical Classes and Workshops','S','60','1','2',2);
INSERT INTO teaching_activities VALUES('CS3823','Guided Independent Study','I','n/a','n/a','n/a',290);
INSERT INTO teaching_activities VALUES('CS4823','Lectures','S','60','1','1',1);
INSERT INTO teaching_activities VALUES('CS4823','Project Supervision','S','','','','3-5');
INSERT INTO teaching_activities VALUES('CS4823','Demonstration','S','60','2','1',2);
INSERT INTO teaching_activities VALUES('CS4823','Practical Classes and Workshops','S','60','1','2',2);
INSERT INTO teaching_activities VALUES('CS4823','Guided Independent Study','I','n/a','n/a','n/a',590);
INSERT INTO teaching_activities VALUES('CS3840','Lectures','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS3840','Laboratory classes','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS3840','Guided Independent Study','I','n/a','n/a','n/a',128);
INSERT INTO teaching_activities VALUES('CS4870','Lectures','S','60','11','2-3',29);
INSERT INTO teaching_activities VALUES('CS4870','Seminars','S','60','4','1',4);
INSERT INTO teaching_activities VALUES('CS4870','Laboratory classes','S','60','11','2',11);
INSERT INTO teaching_activities VALUES('CS4870','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('IY2760','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('IY2760','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS1890','Lectures','S','60','','',14);
INSERT INTO teaching_activities VALUES('CS1890','Laboratory classes','S','120','10','1',20);
INSERT INTO teaching_activities VALUES('CS1890','Guided Independent Study','I','n/a','n/a','n/a',116);
INSERT INTO teaching_activities VALUES('CS3750','Lectures','','120','11','1',22);
INSERT INTO teaching_activities VALUES('CS3750','Laboratory classes','','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS3824','Lectures','S','60','1','1',1);
INSERT INTO teaching_activities VALUES('CS3824','Project Supervision','S','','','','3-5');
INSERT INTO teaching_activities VALUES('CS3824','Demonstration','S','60','2','1',2);
INSERT INTO teaching_activities VALUES('CS3824','Practical Classes and Workshops','S','60','1','2',2);
INSERT INTO teaching_activities VALUES('CS3824','Guided Independent Study','I','n/a','n/a','n/a',590);
INSERT INTO teaching_activities VALUES('CS1813','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS1813','Laboratory classes','S','120','10','1',20);
INSERT INTO teaching_activities VALUES('CS1813','Guided Independent Study','I','n/a','n/a','n/a',108);
INSERT INTO teaching_activities VALUES('CS2847','Lectures','S','60','6','1',6);
INSERT INTO teaching_activities VALUES('CS2847','Laboratory classes','S','60/120','11','2',38);
INSERT INTO teaching_activities VALUES('CS2847','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('CS3563','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS3563','Guided Independent Study','I','n/a','n/a','n/a',128);
INSERT INTO teaching_activities VALUES('CS4504','Lectures','S','60','5','6',30);
INSERT INTO teaching_activities VALUES('CS4504','Tutorials','S','60','5','1',5);
INSERT INTO teaching_activities VALUES('CS4504','Laboratory classes','S','60','5','1',5);
INSERT INTO teaching_activities VALUES('CS4504','Guided Independent Study','I','n/a','n/a','n/a',110);
INSERT INTO teaching_activities VALUES('CS2910','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS2910','Laboratory classes','S','60','6','2',12);
INSERT INTO teaching_activities VALUES('CS2910','Guided Independent Study','I','n/a','n/a','n/a',116);
INSERT INTO teaching_activities VALUES('CS1812','Lectures','S','60','11','2',33);
INSERT INTO teaching_activities VALUES('CS1812','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS2900','Lectures','S','50','11','2',22);
INSERT INTO teaching_activities VALUES('CS2900','Laboratory classes','S','50','11','1',11);
INSERT INTO teaching_activities VALUES('CS2900','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS1811','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS1811','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS3915','Seminars','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS3915','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('DC3811','Lectures','S','60','10','1-2',18);
INSERT INTO teaching_activities VALUES('DC3811','Practical Classes and Workshops','S','120','11','1',22);
INSERT INTO teaching_activities VALUES('DC3811','Guided Independent Study','I','n/a','n/a','n/a',110);
INSERT INTO teaching_activities VALUES('CS2850','Lectures','S','60','11','2-3',27);
INSERT INTO teaching_activities VALUES('CS2850','Laboratory classes','S','60','11','1-2',17);
INSERT INTO teaching_activities VALUES('CS2850','Guided Independent Study','I','n/a','n/a','n/a',106);
INSERT INTO teaching_activities VALUES('CS2810','Lectures','S','60','10','1-2',18);
INSERT INTO teaching_activities VALUES('CS2810','Practical Classes and Workshops','S','120','11','1',22);
INSERT INTO teaching_activities VALUES('CS2810','Guided Independent Study','I','n/a','n/a','n/a',110);
INSERT INTO teaching_activities VALUES('CS4822','Lectures','S','60','1','1',1);
INSERT INTO teaching_activities VALUES('CS4822','Project Supervision','S','','','','3-5');
INSERT INTO teaching_activities VALUES('CS4822','Demonstration','S','60','2','1',2);
INSERT INTO teaching_activities VALUES('CS4822','Practical Classes and Workshops','S','60','1','2',2);
INSERT INTO teaching_activities VALUES('CS4822','Guided Independent Study','I','n/a','n/a','n/a',590);
INSERT INTO teaching_activities VALUES('CS2860','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS2860','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS3940','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS3940','Laboratory classes','S','60','11','1',11);
INSERT INTO teaching_activities VALUES('CS3940','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('CS2815','Lectures','S','60','10','1-2',18);
INSERT INTO teaching_activities VALUES('CS2815','Practical Classes and Workshops','S','120','11','1',22);
INSERT INTO teaching_activities VALUES('CS2815','Guided Independent Study','I','n/a','n/a','n/a',110);
INSERT INTO teaching_activities VALUES('CS1860','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS1860','Tutorials','S','60','6','1',6);
INSERT INTO teaching_activities VALUES('CS1860','Guided Independent Study','I','n/a','n/a','n/a',111);
INSERT INTO teaching_activities VALUES('CS4821','Lectures','S','60','1','1',1);
INSERT INTO teaching_activities VALUES('CS4821','Project Supervision','S','','','','3-5');
INSERT INTO teaching_activities VALUES('CS4821','Demonstration','S','60','2','1',2);
INSERT INTO teaching_activities VALUES('CS4821','Practical Classes and Workshops','S','60','1','2',2);
INSERT INTO teaching_activities VALUES('CS4821','Guided Independent Study','I','n/a','n/a','n/a',590);
INSERT INTO teaching_activities VALUES('CS2865','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS2865','Tutorials','S','60','6','1',6);
INSERT INTO teaching_activities VALUES('CS2865','Guided Independent Study','I','n/a','n/a','n/a',111);
INSERT INTO teaching_activities VALUES('CS1840','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS1840','Laboratory classes','S','60','9','1',9);
INSERT INTO teaching_activities VALUES('CS1840','Guided Independent Study','I','n/a','n/a','n/a',119);
INSERT INTO teaching_activities VALUES('CS2841','Lectures','S','60','11','2',22);
INSERT INTO teaching_activities VALUES('CS2841','Laboratory classes','S','60','9','1',9);
INSERT INTO teaching_activities VALUES('CS2841','Guided Independent Study','I','n/a','n/a','n/a',119);
INSERT INTO teaching_activities VALUES('CS4915','Lectures','S','60','11','3',33);
INSERT INTO teaching_activities VALUES('CS4915','Guided Independent Study','I','n/a','n/a','n/a',117);
INSERT INTO teaching_activities VALUES('IY3821','Project Supervision','S','','','',3.7000000000000001776);
INSERT INTO teaching_activities VALUES('IY4500','Project Supervision','','','','',3.7000000000000001776);
INSERT INTO teaching_activities VALUES('CS3846','Lectures','S','60','6','1',6);
INSERT INTO teaching_activities VALUES('CS3846','Laboratory Classes','S','','','',38);
INSERT INTO teaching_activities VALUES('CS3480','Lectures','S','','','',22);
INSERT INTO teaching_activities VALUES('CS3480','Laboratory Classes','S','','','',22);
INSERT INTO teaching_activities VALUES('CS4580','Lectures','S','','','',33);
INSERT INTO teaching_activities VALUES('CS3822','Project Supervision','','','','',3.7000000000000001776);
INSERT INTO teaching_activities VALUES('CS3470','Lectures','S','','','',33);
INSERT INTO teaching_activities VALUES('CS3821','Project Supervision','S','','','',3.7000000000000001776);
INSERT INTO teaching_activities VALUES('CS3810','Project Supervision','S','','','',3.7000000000000001776);
INSERT INTO teaching_activities VALUES('CS3110','Lectures','S','','','',33);
INSERT INTO teaching_activities VALUES('CS2800','Lectures','','','','',33);
INSERT INTO teaching_activities VALUES('CS3580','Lectures','','','','',33);
INSERT INTO teaching_activities VALUES('CS4001','External visits','','','','',6);
INSERT INTO teaching_activities VALUES('CS4250','Lectures','S','','','',33);
INSERT INTO teaching_activities VALUES('CS4250','Laboratory Classes','S','','','',11);
INSERT INTO teaching_activities VALUES('CS3250','Lectures','','','','',22);
INSERT INTO teaching_activities VALUES('CS3250','Laboratory Classes','','','','',11);
INSERT INTO teaching_activities VALUES('CS1870','Lectures','S','','','',33);
INSERT INTO teaching_activities VALUES('CS1870','Tutorials','S','','','',5);
INSERT INTO teaching_activities VALUES('CS3510','Lectures','S','','','',22);
INSERT INTO teaching_activities VALUES('CS3510','Laboratory Classes','','','','',11);
INSERT INTO teaching_activities VALUES('CS3930','Lectures','','','','',33);
INSERT INTO teaching_activities VALUES('CS3001','External visits','','','','',6);
INSERT INTO teaching_activities VALUES('CS2846','Lectures','S','60','6','1',6);
INSERT INTO teaching_activities VALUES('CS2846','Laboratory Classes','S',NULL,NULL,NULL,38);
INSERT INTO teaching_activities VALUES('CS2847','Lectures','S','60','6','1',6);
INSERT INTO teaching_activities VALUES('CS2847','Laboratory Classes','S',NULL,NULL,NULL,38);
CREATE TABLE formative_assessments (
  "mod_code" text,
  "set_order" integer,
  "activity" text,
  "length" text,
  "units_of_length" text,
  "must_pass" text,
  "marked_out_of" text,
  "mode_of_feedback" text,
  foreign key (mod_code) references modules(mod_code)
);
INSERT INTO formative_assessments VALUES('CS4100',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4234',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4563',0,'Discussions in presentations','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4950',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS3920',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS3915',0,'Discussions in presentations','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4920',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS3563',0,'Discussions in presentations','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4825',0,'Supervision meetings','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4825',1,'Comments for draft report','','','','','Oral or written feedback');
INSERT INTO formative_assessments VALUES('CS4200',0,'Lab session','8','hrs','N','Not graded','Oral feedback');
INSERT INTO formative_assessments VALUES('IY4501',0,'Coursework (one per week)','1000','Words','N','100','Written feedback');
INSERT INTO formative_assessments VALUES('IY3501',0,'Coursework (one per week)','1000','Words','N','100','Written feedback');
INSERT INTO formative_assessments VALUES('CS3000',0,'Coursework','','','','','Moodle');
INSERT INTO formative_assessments VALUES('CS2855',0,'Lab sessions','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS3870',0,'Oral feedback','','','','','verbal feedback during lectures');
INSERT INTO formative_assessments VALUES('CS3870',1,'Coursework','','','','','two MFA pieces of assessment');
INSERT INTO formative_assessments VALUES('CS3870',2,'In-class exercise sessions','','','','','individual feedback and collective discussions');
INSERT INTO formative_assessments VALUES('CS1823',0,'Checkpoints','55','hours','Y','100','In person discussion.');
INSERT INTO formative_assessments VALUES('CS4980',0,'Lab activities','20','hours','N','100','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS4980',1,'In class participation','20','hours','N','100','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS4980',2,'Project','2','hours','N','100','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS1821',0,'Checkpoints','55','hours','Y','100','In person discussion.');
INSERT INTO formative_assessments VALUES('CS4990',0,'Lab activities','20','hours','N','100','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS4990',1,'In class participation','20','hours','N','100','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS4990',2,'Project','2','hours','N','100','Verbal feedback');
INSERT INTO formative_assessments VALUES('DC1821',0,'Checkpoints','55','hours','Y','100','In person discussion.');
INSERT INTO formative_assessments VALUES('CS1822',0,'Checkpoints','55','hours','Y','100','In person discussion.');
INSERT INTO formative_assessments VALUES('IY4523',0,'Formative assignments','','','','','oral feedback');
INSERT INTO formative_assessments VALUES('IY3609',0,'Formative assignments (normally 2)','','','','','written feedback');
INSERT INTO formative_assessments VALUES('CS4860',0,'Feedback during the lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS1831',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('IY3606',0,'In lecture assignments','','','','','oral and written feedback');
INSERT INTO formative_assessments VALUES('IY3612',0,'Formative assignments (normally 2)','','','','','written feedback');
INSERT INTO formative_assessments VALUES('CS1801',0,'Laboratory exercises','66','hours','Y','Pass/fail','Oral feedback');
INSERT INTO formative_assessments VALUES('CS1801',1,'Tutorials','4','hours','N','','Oral Feedback');
INSERT INTO formative_assessments VALUES('CS3220',0,'Laboratory sessions','','','N','N/A','Oral feedback on the student''s solution to some key execises');
INSERT INTO formative_assessments VALUES('IY4606',0,'In lecture assignments','','','','','oral and written feedback');
INSERT INTO formative_assessments VALUES('CS4220',0,'Laboratory sessions','','','N','N/A','Oral feedback on the student''s solution to some key execises');
INSERT INTO formative_assessments VALUES('CS3945',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS1830',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4945',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS1802',0,'Laboratory exercises','33','hours','Y','Pass/fail','Oral feedback');
INSERT INTO formative_assessments VALUES('CS1802',1,'Tutorials','2','hours','N','','Oral feedback');
INSERT INTO formative_assessments VALUES('IY4612',0,'Formative assignments (normally 2)','','','','','written feedback');
INSERT INTO formative_assessments VALUES('IY4609',0,'Formative assignments (normally 2)','','','','','written feedback');
INSERT INTO formative_assessments VALUES('IY2840',0,'Lab sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS2821',0,'Written formative assignment','10','hours','N','100','Oral and written feedback');
INSERT INTO formative_assessments VALUES('CS3823',0,'Supervisory meetings','9','sessions','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS3823',1,'Comments for draft report','see summative','','','','Verbal or written feedback');
INSERT INTO formative_assessments VALUES('CS4823',0,'Supervisory meetings','9','sessions','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS4823',1,'Comments for draft report','see summative','','','','Verbal or written feedback');
INSERT INTO formative_assessments VALUES('CS3840',0,'Feedback during the lab sessions','11','sessions','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4870',0,'Feedback during the lab sessions','5','sessions','','','Oral feedback');
INSERT INTO formative_assessments VALUES('IY2760',0,'in class feedback','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS1890',0,'Lectures','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS1890',1,'Labs','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS3750',0,'Verbal feedback on progress will be given during the laboratory sessions.','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS3750',1,'Written feedback from summative assessment.','','','','','Written feedback');
INSERT INTO formative_assessments VALUES('CS3750',2,'Mandatory formative assessment .','','','','','Written feedback');
INSERT INTO formative_assessments VALUES('CS3824',0,'Supervisory meetings','9-15','sessions of approx. 20 min.','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS3824',1,'Comments for draft report','see summative','','','','Verbal or written feedback');
INSERT INTO formative_assessments VALUES('CS2847',0,'Lab sessions','','','','','Oral Feedback');
INSERT INTO formative_assessments VALUES('CS4504',0,'Lab sessions','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS2910',0,'Lab sessions','','','','','Oral Feedback');
INSERT INTO formative_assessments VALUES('CS2900',0,'In lecture exercises','','','N','','Verbal');
INSERT INTO formative_assessments VALUES('CS2900',1,'In lab verbal feedback','','','N','','Verbal');
INSERT INTO formative_assessments VALUES('CS3915',0,'Feedback during the seminars','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('DC3811',0,'Practical sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS2810',0,'Practical sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS4822',0,'Supervisory meetings','9-15','sessions of approx. 20 min.','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS4822',1,'Comments for draft report','see summative','','','','Verbal or written feedback');
INSERT INTO formative_assessments VALUES('CS2860',0,'In-lecture feedback','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS3940',0,'Lab sessions','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS2815',0,'Practical sessions','','','','','Oral feedback');
INSERT INTO formative_assessments VALUES('CS1860',0,'Tutorial exercises','','','','','verbal feedback');
INSERT INTO formative_assessments VALUES('CS4821',0,'Supervisory meetings','9-15','sessions of approx. 20 min.','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS4821',1,'Comments for draft report','see summative','','','','Verbal or written feedback');
INSERT INTO formative_assessments VALUES('CS2865',0,'Tutorial exercises','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS1840',0,'Lab sessions','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS2841',0,'Lab sessions','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS1860',1,replace('Completion of quizzes embedded in asynchronous materials\n','\n',char(10)),'5','Hours','No','100','Feedback through course completion block on moodle');
INSERT INTO formative_assessments VALUES('CS2900',2,replace('Completion of quizzes embedded in asynchronous materials\n','\n',char(10)),'300','Minutes','No','100','Feedback through course completion block on moodle');
INSERT INTO formative_assessments VALUES('CS3490',0,replace('Completion of quizzes embedded in asynchronous materials\n','\n',char(10)),'','','','100','Feedback through course completion block on moodle');
INSERT INTO formative_assessments VALUES('CS4915',0,'Discussions in presentations','Length','Units','Y/N','?','Oral feedback');
INSERT INTO formative_assessments VALUES('IY3821',0,'Verbal feedback in meetings','','','','','Feedback provided on the basis of reports written');
INSERT INTO formative_assessments VALUES('IY4500',0,'Feedback in meetings','','','','','');
INSERT INTO formative_assessments VALUES('CS3846',0,'Feedback during labs','','','','','Verbal feedback on progress during the weekly laboratory sessions');
INSERT INTO formative_assessments VALUES('CS3480',0,'Feedback in laboratory classes','','','','','Verbal feedback will be provided during laboratory sessions');
INSERT INTO formative_assessments VALUES('CS4580',0,'Problem solving assignments','','','','','Written feedback');
INSERT INTO formative_assessments VALUES('CS3822',0,'Project meetings','','','','','Verbal feedback on progress and guidance on future work');
INSERT INTO formative_assessments VALUES('CS3470',0,'Coursework feedback','','','','','Return of coursework grades and comments, in-class discussion of coursework solutions');
INSERT INTO formative_assessments VALUES('CS3821',0,'Project meetings','','','','','Verbal feedback on progress and guidance on future work');
INSERT INTO formative_assessments VALUES('CS3810',0,'Project Meetings','','','','','Verbal feedback on progress');
INSERT INTO formative_assessments VALUES('CS3110',0,'Exercises in lectures','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS2800',0,'Feedback via forum','','','','','Written responses to forum questions and common mistakes made in coursework');
INSERT INTO formative_assessments VALUES('CS3580',0,'Assignments','','','','','Return of marked zero-weighted assignments');
INSERT INTO formative_assessments VALUES('CS4001',0,'Visits','','','','','Verbal feedback');
INSERT INTO formative_assessments VALUES('CS4250',0,'Laboratory sessions','','','','','Verbal');
INSERT INTO formative_assessments VALUES('CS3250',0,'Laboratory Sessions','','','','','Verbal');
INSERT INTO formative_assessments VALUES('CS1870',0,'Tutorials','','','','','Individual discussion of non-assessed tutorial exercises and discussion of assessed worksheets in small group tutorials');
INSERT INTO formative_assessments VALUES('CS3510',0,'Written assignment','','','','','Written feedback');
INSERT INTO formative_assessments VALUES('CS3930',0,'Coursework feedback','','','','','Written comments on coursework grades and written comments on coursework project.');
INSERT INTO formative_assessments VALUES('CS2846',0,'Feedback during labs',NULL,NULL,NULL,NULL,'Verbal feedback on progress during the weekly laboratory sessions');
INSERT INTO formative_assessments VALUES('CS2847',0,'Feedback during labs',NULL,NULL,NULL,NULL,'Verbal feedback on progress during the weekly laboratory sessions');
CREATE TABLE modules (
    "mod_code" TEXT,
    "jacs_code" TEXT,
    "hecos_code" TEXT,
    "title" TEXT,
    "short_title" TEXT,
    "level" INTEGER,
    "department" TEXT,
    "with_effect_from" TEXT,
    "availability_terms" TEXT,
    "credits" INTEGER,
    "corequisites" TEXT,
    "prerequisites" TEXT,
    "banned_combinations" TEXT,
    "learning_outcomes" TEXT,
    "summary" TEXT,
    "notional_learning_hours" TEXT,
    "books_to_purchase" TEXT,
    "core_reading" TEXT,
    "exam_format" TEXT,
    "status" TEXT,
    "project" BOOLEAN,
    "lab_hours" INTEGER,
    "deg_progs" TEXT);
INSERT INTO modules VALUES('CS3810','','','Half Unit Project','',6,'Computer Science','','',15,'','CS2800','',replace('understand complex ideas and identify solutions to a problem,\napply scientific and software/hardware techniques to solving a problem,\nanalyse the solution to a problem and evaluate the associated results,\ndemonstrate the ability to plan, organise and present the project work both in written form and orally.','\n',char(10)),'To provide the opportunity to demonstrate independence and originality, to plan and organise a large project over a long period, and to put into practice the techniques taught throughout their degree course.','150','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X<br/>\n<br/>\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project-with Success: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2006: ISBN-10: 1852333324\n','\n',char(10)),'','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('CS4860','I120, I112','','Advanced distributed systems and Communication Networks','Advanced distributed systems',7,'Computer Science','2016-17','Term 1',15,'','','',replace('Display a mastery of core concepts, theories and principles of distributed systems\nDemonstrate knowledge of algorithmic techniques for solving problems in a distributed environment.\nExplain the practical aspects of implementing various components of a distributed system\nImplement various components of a realistic distributed system.\nThink critically about open research problems','\n',char(10)),replace('The course will cover fundamental principles of building modern distributed systems, for example in the context of the Internet of Things. The specific emphasis will be on the two central components of the IoT reference architecture: cloud infrastructure and wireless networking.\nThe course will discuss major challenges found in these environments (such as massive scales, wide distribution, decentralisation, unreliable communication links, component failures and network partitions) and general approaches for dealing with these challenges.\nThe topics covered will include:\nabstract models (such as the synchronous and asynchronous distributed computing models, models for wireless networks,'');\nalgorithmic techniques (such as distributed coordination, fault-tolerant design of distributed algorithms, synchronization techniques,'');\npractical case studies.\nThe students will also have an opportunity to apply the studied material for implementing various components of a realistic distributed system through a series of formative coursework assignments, lab practicals, and a final project.\n','\n',char(10)),'150','',replace('Nancy A. Lynch: Distributed Algorithms. The Morgan Kaufmann Series in Data Management Systems (1996). ISBN-13: 978-1558603486\nHagit Attiya, Jennifer Welch: Distributed Computing: Fundamentals, Simulations and Advanced Topics. John Wiley & Sons; 2 edition (11 Mar. 2004). ISBN-13: 978-0471453246\nChristian Cachin, Rachid Guerraoui, Luís Rodrigues: Introduction to Reliable and Secure Distributed Programming. Springer 2 edition (11 Feb. 2011).  ASIN: B008R61LBG\nMaurice Herlihy, Nir Shavit: The Art of Multiprocessor Programming. Morgan Kaufmann; Revised edition edition (2012). ISBN-13: 978-0123973375\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('MT1820','','','Matrix Algebra','',4,'Maths','','',15,'','','','','','150','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('CS4915','I300','','Standards, IP and Technology','',7,'Computer Science','2018/19','',15,'','','CS3915',replace('Demonstrate an understanding of standards, intellectual property and technologies in software engineering.\nCritically assess software licenses.\nExplain how standards are arrived at and the processes necessary to achieve consensus within a community.','\n',char(10)),replace('This course covers a number of topics under Standards (e.g. CMMI and ISO9000/9001), Intellectual Property (IP) and Technology, and their impact in computer science and software engineering. This includes aspects within IP, software licensing, standards processes and their implications, and multiple software engineering related technologies. Students will be expected to introduce or recap any topic based on reading materials handed out. The main aims of the course are to expose students to the overall environment in which the software industry operates, and to give them an understanding on the implications of standards and IP to the work of a computer scientist and software engineer.\n','\n',char(10)),'150','N/A',replace('Students will be given online reading materials relevant to each topic.\n','\n',char(10)),NULL,'WONTRUN',0,0,'CS');
INSERT INTO modules VALUES('IY3840','','','Malicious Software','',6,'Information Security','','',15,'','IY2760 and IY2840','',replace('Comprehend what malicious software is\nUnderstand the malware landscape of the early days and what efforts and challenges the AV industry was facing to fight malware threats; (basic) static analysis to analyze and detect malware; (basic) assembly and reverse engineering notions are provided\nExplain dynamic analysis. Packing and algorithmic-agnostic unpacking is introduced as an initial step toward full dynamic analysis; sandboxes and limits of dynamic analysis and sandboxes.\nDescribe and explain the underground economy and cybercrime that surrounds malicious software\nDemonstrate a critical appreciation of some of the newer research trends that are likely to influence software security work in the coming years','\n',char(10)),replace('Cybercrime has become both more widespread and harder to battle. Researchers and anecdotal experience show that the cybercrime scene is becoming increasingly organized and consolidated, with strong links also to traditional criminal networks. Modern attacks are indeed stealthy and often profit oriented.\nMalicious software (malware) is the traditional way in which cybercriminals infect user and enterprise hosts to gain access to their private, financial, and intellectual property data. Once stolen, such information can enable more sophisticated attacks, generate illegal revenue, and allow for cyber-espionage.\nBy mixing a practical, hands-on approach with the theory and techniques behind the scene, the course discusses the current academic and underground research in the field, trying to answer the foremost question about malware and underground economy, namely, "Should we care?".\nStudents will learn how traditional and mobile malware work, how they are analyzed and detected, peering through the underground ecosystem that drives this profitable but illegal business. Understanding how malware operates is of paramount importance to form knowledgeable experts, teachers, researchers, and practitioners able to fight back. Besides, it allows us to gather intimate knowledge of the systems and the threats, which is a necessary step to successfully devise novel, effective, and practical mitigation techniques.','\n',char(10)),'150','',' ','','ACTIVE',0,1,'CS');
INSERT INTO modules VALUES('CS1821','I100','','Programming Fundamentals','',4,'Computer Science','2018-19','Term 1, Term 2',30,'','','',replace('program independently to solve a given problem.\nknow how to write an individual technical report..\nknow how to present a project, both at a practical demonstration and in a formal short presentation.\nhave been introduced to a programming environment for a particular event driven or embedded domain such as microprocessor coding, robotics coding, game development or interactive web development.\nwork in a group on an I.T. project.\n','\n',char(10)),replace('Students in this course will apply programming concepts from the the very basic (variables, control flow, loops, methods) up to advanced concepts (event driven programming, embedded programming) and best practices. The course will follow a blended learning model incorporating lectures, practical exercises, project work and online assessment.\n','\n',char(10)),'300','',replace('Cay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\nhttps://inventwithpython.com/\nIan Millington – Artificial Intelligence for Games\nDavid Eberly – Game Physics\nChrister Ericsson – Real Time Collision Detection\nJ. Kelly: LEGO Mindstorms NXT-G Programming Guide, Technology in Action Press, 2007, ISBN 10: 1590598717\nBrian Bagnell: Maximum Lego NXT: Building Robots with Java Brains, Variant Press 2007, ISBN 10: 097386491\n','\n',char(10)),'','ACTIVE',0,3,'CS');
INSERT INTO modules VALUES('CS2841','I160','','Internet Services','',5,'Computer Science','2017-18','Term 2',15,'','','CS1840',replace('explain how the Internet works\nunderstand key Internet protocols\nperform web development tasks involving current web technologies\nuse scripting languages to add dynamic aspects to web sites/applications\ndescribe and assess the fundamentals of Web Services\nexplain network security principles','\n',char(10)),replace('The course introduces how the Internet works and its key protocols. With that foundation, it then addresses the technologies used for web development, including scripting languages and their potential. Web Services and related technologies are also introduced as well as network security principles.\nCourse content:\nInternet Basics: protocols, delay and loss.\nInternet Protocol Stack: layer model, key Internet protocols.\nWeb Technologies: HTML and related technologies.\nScripting languages: client and server side scripting.\nWeb Services: introduction and related technologies.\nNetwork Security: basic security concepts and their implications to networks.\n','\n',char(10)),'150','',replace('J.F. Kurose and K.W. Ross: Computer networking : a top-down approach, Pearson, 6th edition, International edition, 2013.\n','\n',char(10)),replace('Time allowed: 1 1/2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,1,'DC');
INSERT INTO modules VALUES('CS1802','I100, I300','','Software development','',4,'Computer Science','2016-17','Terms 1 and 2',30,'','','',replace('solve basic programming tasks\nunderstand and use basic object-oriented concepts\nappreciate the need for program documentation, testing, readability and modifiability\ndevelop a simple application based on a design specification\ncreate a test plan, execute it, and identify faults in an application','\n',char(10)),replace('This course teaches programming and object-orientation concepts. Students will learn about program basics (variables, types, scope, lifetimes),  control flow (if-constructs, for-loops, while-loops), data structures (strings, sets, lists, trees, algorithms), objects (classes, dynamic dispatch, interface, inheritance, generics), exceptions (throwing and catching) and file I/O (streams, file reading, writing and copying).\nIn addition, students learn software development best practices, how to perform small scale software development from a specification, and details about the testing process and software evaluation.\n','\n',char(10)),'300','',replace('Herbert Schildt: Java: a Beginner’s Guide, 4th Edition, McGraw-Hill, 2007, ISBN 0072263849\nCay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('IY3606','I112','','Smart Cards, RFIDs and Embedded Systems Security','',6,'Information Security','2016-17','Term 2',15,'','IY2760','',replace('identify constituent components, analyse strengths and weaknesses, identify new applications of smart cards/security tokens and their use as assets in cyber security; identify the steps in the manufacturing/personalisation processes, analyse and evaluate potential risks and compare security safeguards\nidentify and compare the systems in use, analyse the strengths and weaknesses and evaluate interoperability and security issues; analyse the range of capabilities of SIM/USIM cards in Smartphones and apply them to new service ideas, evaluate the possible range of services and security measures\nunderstand the main standards and applications of smart cards for banking and finance, compare with earlier card solutions and analyse strengths and weaknesses of approaches; analyse the key role of the smart card/RFID for passports, IDs and satellite TV, evaluate the security measures that have protected past and current cards,\nidentify and describe new technologies, including NFC, TPM, TEE; and apply them to new applications and evaluate the likely suitability/success of approach; explain how common criteria may affect smart card design/development, analyse the different approaches and compare with less formal methods\nidentify and describe the classes of attack and notable methods within each class, analyse countermeasures and evaluate practicality of attacks and the effects on cyber security; identify, compare and  evaluate	different methods of developing applications for smart cards, and understand the development cycle and the use of practical tools\nanalyse the issues concerning smart card lifecycle management, and evaluate and compare methods of local and remote card management','\n',char(10)),replace('Students will have obtained a good understanding of the topic of smart cards and token security.\nCourse contents:\nIntroduction to Smart Cards/Chips & RFID/NFC; Assets for Cyber Security\nSmart Cards – Trusted Production Environment\nOperating systems, Interoperability and Security\nApplications & Security for Mobile Communications, USIM/SIM, Services and Clouds\nSmart Cards for Secure Banking & Finance\nSmart Cards in eIDs/Passports - & RFIDs/NFC explained\nAdvances in Smart Chips/Tokens, and Transport System Case Study\nCommon Criteria and Smart Cards\nSecurity Attacks, Countermeasures and Testing for Smart Cards/RFIDs/NFC\nApplication Development Environments for JAVA and SIM Toolkit\nComparing Alternative Security Tokens/Environments; including TPM and TEE\n','\n',char(10)),'150','',replace('Course Text book: Keith Mayes, Konstantinos Markantonakis, “Smart Cards, Tokens, Security and\nApplications”, Springer-Verlag New York, January 2008, ISBN: 0387721975\nW. Rankl and W. Effing – “Smart card handbook” 2nd edition John Wiley 1997\nKlaus Finkenzeller, “The RFID Handbook”, John Wiley and Sons 2003\nZhiqun Chen, “Java Card Technology for Smart Cards”, Addison- Wesley 2000.\nKeith Mayes, Konstantinos Markantonakis, “Secure Smart Embedded Devices, Platforms and\nApplications”, Springer-Verlag New York, 2013, ISBN 978-1-4614-7914-7\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS2815','I300','','Small enterprise team project','',5,'Computer Science','2017-18','Term 2',15,'CS2800','CS1811,CS1813','CS2810',replace('work in a team to produce a substantial product using software engineering techniques\napply managerial discipline and a professional attitude\nunderstand why project cost and effort is hard to estimate and why project quality is hard to prescribe\ndesign software following an agile process\nunderstand an external customer''s requirements for a software product','\n',char(10)),replace('This course aims to assist students in appreciating the role of the computer professional through the practical experience of developing medium scale software as part of a team.\nCourse content:\nThe software lifecycle, including: software development, planning and documentation.\nTeam development, communication, managing risks and conflicts.\nPractical experience of standard industrial software engineering. Agile project management, use of version control in a team, IDEs, etc.\nA medium scale agile software development project, conducted by teams of students.\nMeetings with an external customer to determine the requirements for a product.\n','\n',char(10)),'150','',replace('Richard Whitehead: Leading a Software Development Team, Addison Wesley, 2001 ISBN 10: 0201675269\nCay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 978 0470553091\nKen Schwaber: Agile Software Development with Scrum.  Pearson Prentice Hall 2002.    ISBN 978 0132074896\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('IY2760','I100','','Introduction to Information Security','',5,'Computer Science','2015/16','Term 1',15,'','','',replace('Identify, through the case studies how information security may be influenced by real world design and implementation decisions.\nAppreciate the different cryptographic algorithms, their use, advantages and disadvantages\nApply the above identified cryptographic primitives in the review and evaluation of cryptographic protocols.\nIdentify, through the case studies how information security may be influenced by real world design and implantation decisions.\nAppreciate the rational decisions in the design of a number tokens and secure elements','\n',char(10)),replace('Introduction: What is security (covering notions of Confidentiality, Integrity, and Availability)? Security threats and risks. Security management (ISO 27000 series). Data Protection legislation.-	\nIntroduction to the elements of cryptography: Ciphers (stream, block, e.g. DES/3DES/AES). Message Authentication codes (MACs). Public key ciphers and digital signatures (e.g. RSA). \nIdentity verification: use and storage of conventional passwords. Dynamic password schemes. Biometric techniques. Use of tokens (dumb and intelligent), including the use of secure elements such as smart cards and trusted execution environments (TEEs)\nAccess control: Access Control Lists, capabilities, security labels (MAC and DAC), and role-based access control. \nCASE STUDY I: a case study in information security. 	\nNetwork security concepts and examples: the concepts of security services and security mechanisms (as in ISO 7498-2). An introduction to firewalls, intrusion detection systems and virtual private networks. \nComputer security concepts and examples: hardware and operating system concepts, malware e.g. viruses, spyware, ransomware etc., restricting access. Authentication and key distribution: The importance and relatedness of the concepts of key management and entity authentication in a network. Objectives of an entity authentication protocol. Some fundamental protocols (e.g. Kerberos). Using authentication protocols for key distribution, and other approaches to key establishment (including public key certificates and X.509).	\nCyber Physical security, Examine the security provisions, strengths and weaknesses of existing embedded systems/platforms/smart cards and operating systems. \nCASE STUDY II: a case study in information security. ','\n',char(10)),'150','',replace('D. Gollman, Computer Security, John Wiley & Sons, 2011 (3rd edition)\nC.P. Pfleeger, S. L. Pfleeger, J Margulies, Security in Computing, Prentice Hall, 2015 (5th edition) \nK. Martin, Everyday Cryptography: Fundamental Principles and Applications, Oxford University Press, 2017 (2nd edition)\nK. Markantonakis and K. E. Mayes, Secure Smart Embedded Devices, Platforms and Applications, Springer, 2013 ','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS3915','I300','','Standards, IP and Technology','',6,'Computer Science','2018/19','',15,'','','',replace('Understand the importance of standards, intellectual property and technologies in software engineering.\nCritically assess software licenses.\nUnderstand how standards are arrived at and the processes necessary to achieve consensus within a community.','\n',char(10)),replace('This course covers a number of topics under Standards (e.g. CMMI and ISO9000/9001), Intellectual Property (IP) and Technology, and their impact in computer science and software engineering. This includes aspects within IP, software licensing, standards processes and their implications, and multiple software engineering related technologies. Students will be expected to introduce or recap any topic based on reading materials handed out. The main aims of the course are to expose students to the overall environment in which the software industry operates, and to give them an understanding on the implications of standards and IP to the work of a computer scientist and software engineer.\n','\n',char(10)),'150','N/A',replace('Students will be given online reading materials relevant to each topic.\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('CS2855','I240','','Databases','',5,'Computer Science','2017-18','Term 1',15,'','CS1811','',replace('explain the issues involved in database design and the theory of the relational view of data\ndescribe the crucial issues concerning database integrity and recovery from failure\nwrite SQL queries\ndesign and implement a database, from the user specifications to the final design\nimplement an interface to an SQL database using an API','\n',char(10)),replace('The aim of this course is to teach students a number of database concepts and techniques. This ranges from the specification and modelling stages to the implementation of relational databases. The course also introduces students to the usage of databases from software applications.\nThe content of the course includes:\nData modelling: views, subschema, data dictionary, data independence, entity relationship model. The relational model: relations, attributes, domains, relational algebra. Database design: normalisation, normal forms, entities and attributes SQL: basic SQL, correspondence between the relational model and SQL commands, simple queries, combination and sub-queries Administration and implementation: integrity, recovery from failure, concurrency, deletion and updating, forms, report writing.\n','\n',char(10)),'150','',replace('Database Systems Concepts (6th edition) A. Silbertschatz, H.F. Korth, S. Sudarshan McGraw Hill, 2011\nC.J. Date: An Introduction To Database Systems, 8th edition, Addison Wesley, 2003, ISBN 0321197844\nP. Rob and C. Coronel: Database Systems: Design, Implementation, And Management, Course Technology Inc, 2002, ISBN 061906269X\nR. Elmasri and S. Navathe: Fundamentals Of Database Systems, 3rd edition, Addison Wesley, 2000, ISBN 0805317554\nD.M. Kroenke: Database Processing, Prentice Hall, 1997, ISBN 0137378424\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS4870','I120','','Wireless sensor and actuator networks','',7,'Computer Science','2016-17','Term 2',15,'','CS3840','',replace('Design, build, and test wireless sensor and actuator networks for a variety of application setups\nExplore the design space and conduct trade-off analysis between performance and resources\nDesign and implement simple protocols and algorithms for wireless sensor and actuator networks\nThink critically about open research problems','\n',char(10)),replace('The course will combine formal lectures that will focus on the algorithms and the protocols behind wireless sensor and actuator networks and lab classes that will focus on how to build wireless sensor and actuator networks for a variety of applications.\nThe lectures will cover critical design factors for WSANs, the protocal stack, models and algorithms for WSANs, routing protocols and more advanced open research problems, such as topology control and mobility.\nThe practical classes will cover how to design and build wireless sensor networks and intelligent interactive devices with the ZigBee wireless networking protocol.\n','\n',char(10)),'150','',replace('- Building Wireless Sensor Networks, Robert Faludi (without kit)\n- Algorithms and protocols for wireless sensor networks, Azzedine Boukerche.\n','\n',char(10)),NULL,'WITHDRAWN',0,1,'CS');
INSERT INTO modules VALUES('CS1840','I160','','Internet Services','',4,'Computer Science','2017-18','Term 2',15,'','','',replace('understand the basics of how the Internet works\nunderstand key Internet protocols\ncarry out web development tasks involving current web technologies\nuse scripting languages to add dynamic aspects to web sites/applications\nunderstand the fundamentals of Web Services and network security','\n',char(10)),replace('The course introduces the basics of how the Internet works and its key protocols. With that foundation, it then addresses the technologies used for web development, including scripting languages and their potential. Web Services and related technologies are also introduced as well as the basics of network security.\nCourse content:\nInternet Basics: protocols, delay and loss.\nInternet Protocol Stack: layer model, key Internet protocols.\nWeb Technologies: HTML and related technologies.\nScripting languages: client and server side scripting.\nWeb Services: introduction and related technologies.\nNetwork Security: basic security concepts and their implications to networks.\n','\n',char(10)),'150','',replace('J.F. Kurose and K.W. Ross: Computer networking : a top-down approach, Pearson, 6th edition, International edition, 2013.\n','\n',char(10)),replace('Time allowed: 1 1/2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,1,'CS');
INSERT INTO modules VALUES('IY4523','I100','','Secure business architectures','',7,'Information Security','2016-17','Term 1',15,'','','',replace('understand, and be able to apply, the concept of a “security lifecycle” in relation to specific security architectures\nunderstand, and be able to outline the high-level components of a Risk Assessment and apply these components to candidate security architectures.\nappreciate the Governance, Risk and Compliance issues related to business architectures\napply these to a number of architectures, such as: Identity Management; Outsourcing; PCI-DSS; Supply Chain','\n',char(10)),replace('The high level aim of this course is to discuss the appropriate system design and business response to technical/architectural decisions which impact the security of the organisation’s information.\nThe content of the course will include:\nIntroduce the concept of a security development lifecycle\nAn overview of the basics of Risk Assessment\nElaborate on the Governance, Risk and Compliance issues discussed in the Security Management module\nOutsourcing/Cloud Computing architectures\nIdentity Management\nThe Payment Card Industry – Data Security Standard\nSupply Chain Security\nBig Data\n','\n',char(10)),'150','',replace('The course will not follow any individual text book, but is likely to make use of: international standards; industry white papers and research reports; case studies using common industry architectures.\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS4580','','','Advanced Data Communications','',7,'Computer Science','','',15,'','CS1840','',replace('Show advanced understanding of multimedia communications\nEvaluate coding and compressing algorithms for text, audio, image and video\nAnalyse internet technologies in terms of supporting quality of service\nExamine modern network security mechanisms and their applications\nEvaluate internet network management issues and explain possible solutions','\n',char(10)),replace('The course teaches important topics in modern data communications including text, image, audio and video transfer over networking infrastructures and recent trends in QoS management, network security and network management.<br/>\nIntroduction: layering, abstraction, and standards.  The ISO/OSI reference model. The internet reference model<br/>\nMultimedia communications: multimedia information representation coding and compression, applications and standards, quality of service (QoS) requirements<br/>\nInternet technologies: IP addressing, routeing algorithms and routeing protocols, RIP, OSPF, the internet multicast model, scheduling and queue management<br/>\nSecurity in communication networks: security issues, security mechanisms, secure protocols.<br/>\nNetwork management: network management issues, infrastructure and framework for internet management\n','\n',char(10)),'150','',replace('<ul><li>James F. Kurose and Keith W. Ross: Computer Networking : a top-down approach featuring the internet, Addison-Wesley: ISBN: 10:0321227352</li>\n<li>Fred Halsall: multimedia communications: applications, networks, protocols and standards, Addison-Wesley</li>\n<li>William Stallings: Cryptography and network security: principles and practice, prentice Hall: ISBN-10 0131873164</li></ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'DORMANT',0,0,'CS');
INSERT INTO modules VALUES('CS3940','I400','','Intelligent agents and multi-agent systems','',6,'Computer Science','2017-18','Term 1',15,'','','',replace('understand the notion of an agent and understand the characteristics of applications that lend themselves to an agent-oriented solution\ndescribe the key issues associated with constructing agents capable of intelligent autonomous action\nunderstand the key issues in designing societies of agents that can effectively cooperate in order to solve problems\nevaluate the main application areas of agent-based solutions, and be able to develop a meaningful agent-based system','\n',char(10)),replace('The aims of this course include introducing the students to the concept and design of an agent and multi-agent system, and the main applications for which they are appropriate. In addition, it presents a contemporary platform for implementing agents and multi-agent systems.  Course contents include:\nIntroduction: agents and objects, expert systems, distributed systems; typical application areas for agent systems.\nIntelligent Agents: abstract architectures for agents; tasks for agents, the design of intelligent agents - reasoning agents, agents as reactive systems; hybrid agents (e.g., PRS,''); layered agents (e.g., Interrap).\nMulti-Agent Systems: classifying multi-agent interactions - cooperative versus non-cooperative; zero-sum and other interactions; cooperation - the Prisoner’s dilemma and Axelrod’s experiments; interactions between self-interested agents: auctions systems; negotiation; argumentation;  interaction languages and protocols: speech acts, KQML/KIF, the FIPA framework, ontologies, coordination languages; interactions between benevolent agents: cooperative distributed problem solving (CDPS), partial global planning; coherence and coordination;  applications of intelligent agents and multi-agent systems.\n','\n',char(10)),'150','',replace('M. Wooldridge: An Introduction to MultiAgent Systems. John Wiley & Sons (2nd edition) 2009: ISBN 978-0-470-51946-2\nG. Weiss, editor: Multi-Agent Systems, A Modern Approach to Distributed Artificial Intelligence. The MIT Press, 1999:  ISBN-10: 0262232030\nJ. Ferber: Multi-Agent Systems. Addison-Wesley, 1999: ISBN-10: 0201360489\nM. Singh and M. Huhns: Readings in Agents. Morgan-Kaufmann Publishers, 1997: ISBN-10: 1558604952\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('IY4606','I112','','Smart Cards, RFIDs and Embedded Systems Security','',7,'Information Security','2016-17','Term 2',15,'','IY2760','IY3606',replace('identify constituent components, analyse strengths and weaknesses, identify new applications of smart cards/security tokens and their use as assets in cyber security; identify the steps in the manufacturing/personalisation processes, analyse and evaluate potential risks and compare security safeguards\nidentify and compare the systems in use, analyse the strengths and weaknesses and evaluate interoperability and security issues; analyse the range of capabilities of SIM/USIM cards in Smartphones and apply them to new service ideas, evaluate the possible range of services and security measures\nunderstand the main standards and applications of smart cards for banking and finance, compare with earlier card solutions and analyse strengths and weaknesses of approaches; analyse the key role of the smart card/RFID for passports, IDs and satellite TV, evaluate the security measures that have protected past and current cards,\nidentify and describe new technologies, including NFC, TPM, TEE; and apply them to new applications and evaluate the likely suitability/success of approach; explain how common criteria may affect smart card design/development, analyse the different approaches and compare with less formal methods\nidentify and describe the classes of attack and notable methods within each class, analyse countermeasures and evaluate practicality of attacks and the effects on cyber security; identify, compare and  evaluate	different methods of developing applications for smart cards, and understand the development cycle and the use of practical tools\nanalyse the issues concerning smart card lifecycle management, and evaluate and compare methods of local and remote card management','\n',char(10)),replace('Students will have developed a mastery of the topic of smart cards and token security.\nCourse contents:\nIntroduction to Smart Cards/Chips & RFID/NFC; Assets for Cyber Security\nSmart Cards – Trusted Production Environment\nOperating systems, Interoperability and Security\nApplications & Security for Mobile Communications, USIM/SIM, Services and Clouds\nSmart Cards for Secure Banking & Finance\nSmart Cards in eIDs/Passports - & RFIDs/NFC explained\nAdvances in Smart Chips/Tokens, and Transport System Case Study\nCommon Criteria and Smart Cards\nSecurity Attacks, Countermeasures and Testing for Smart Cards/RFIDs/NFC\nApplication Development Environments for JAVA and SIM Toolkit\nComparing Alternative Security Tokens/Environments; including TPM and TEE\n','\n',char(10)),'150','',replace('Course Text book: Keith Mayes, Konstantinos Markantonakis, “Smart Cards, Tokens, Security and\nApplications”, Springer-Verlag New York, January 2008, ISBN: 0387721975\nW. Rankl and W. Effing – “Smart card handbook” 2nd edition John Wiley 1997\nKlaus Finkenzeller, “The RFID Handbook”, John Wiley and Sons 2003\nZhiqun Chen, “Java Card Technology for Smart Cards”, Addison- Wesley 2000.\nKeith Mayes, Konstantinos Markantonakis, “Secure Smart Embedded Devices, Platforms and\nApplications”, Springer-Verlag New York, 2013, ISBN 978-1-4614-7914-7\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS3945','I150','','Semantic Web','',6,'Computer Science','2016-17','Term 1',15,'','CS2841','',replace('explain fundamental concepts, and standards of the semantic web\ndemonstrate a deep understanding of the use of standards such as RDF, RDFS and OWL for modeling different scenarios and reasoning\ndemonstrate a deep understanding of underlying logical theory behind the semantic web, for example Description Logic','\n',char(10)),replace('The Web, as it exists today, primarily supports human understanding and the interpretation of the vast information space it encompasses. However the Web was originally designed with a goal to support not only human-human communication but also as one that would enable automated machine processing of data with minimal human intervention. The Semantic Web is Tim Berners-Lee''s vision of a machine understandable and unambiguously computer interpretable Web. The rationale behind such a system is that most of the data currently posted on the web is buried in HTML files suitable for human reading and not for computers to manipulate meaningfully. The semantic Web, an extension of the current web, can be thought of as a globally linked database where information is given well-defined meaning using metadata for better enabling computers and humans to work in close cooperation. The realisation of a Semantic Web will thus make machine reasoning more ubiquitous and powerful, creating an environment where intelligent software agents can roam, carrying out sophisticated tasks for their users.\nThough the original motivation of the semantic web was to constitute the next generation of the WWW, the standards and technologies developed in the process have been found useful in specific realm enterprises as well. From this perspective the Semantic Web can be viewed as a semantically-rich data model that is more expressive than the usual relational data model used in standard databases systems, and is also more adequate to distributed and incomplete resources.\nThis course is about the notions, concepts, technologies and modelling techniques that constitute the Semantic Web, whose key distinguishing characteristics will be the support for and use of semantics in new, more effective, more intelligent, ways of managing information and supporting applications.\n','\n',char(10)),'150','',replace('Primary text:\nSemantic Web for the Working Ontologist (Effective Modeling in RDFS and OWL) 2nd Edition, By Dean Allemang, James Hendler, Elsevier / Morgan Kaufmann, July 2011.\nA Semantic Web Primer (Cooperative Information Systems), 3rd Ed., by Grigoris Antoniou (Author), Paul Groth (Author) et al., 2012.\nSecondary text:\nSemantic Web Programming, John Hebeler, Matthew Fisher, Ryan Blace, Andrew Perez-Lopez, Wiley Publishing, Inc, 2009\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('IY4609','I112','','Digital forensics','',7,'Information Security','2016-17','Term 2',15,'','IY2760','IY3609',replace('understand the concepts of audit and indirect activity records retained by operating systems, particularly in file systems, and  how to retrieve such information\nunderstand selected network protocols and the collection and derivation of evidence leading to the reconstruction of system and user activity based on network trace information\nunderstand infiltration and anti-forensics techniques used particularly by malicious software\napply steganographic and particularly steganalytical methods for different types of media\nunderstand the retention characteristics of storage systems and non-standard devices such as mobile/smart phones, cloud computing, and vehicular systems','\n',char(10)),replace('Introduction to forensic science, steps from collecting data to preserving evidence, and a framework for digital forensic evidence collection and processing.\nFundamentals of host forensics for Microsoft Windows, including kernel architecture, device driver architecture, registry, auditing, and security architecture, file system handling, and reconstruction of file and directory structures on the FAT and NTFS file system families.\nFundamentals of host forensics for Unix derivatives using the Linux operating system as an exemplar, including kernel and device driver architecture, security and audit mechanisms, file systems and pseudo file systems, and the reconstruction of file and directory structures using UFS and Ext2/3fs as exemplars.\nFoundations of network forensics from data capturing and collection to network file systems and supplementary protocols as well as selected application-layer protocols and techniques used for identifying and reverse-engineering protocols used on networks.\nIntroduction to malware including anti-forensics and propagation techniques.\nIntroduction to steganographic techniques for images, video, textual data, and audio as well as steganalytical techniques for selected media types and approaches to traitor tracing.\nA survey of non-standard storage mechanisms from retention characteristics to mobile and smart phones and vehicular systems as well as network-based search and storage mechanisms.\n','\n',char(10)),'150','',replace('K.J. Jones, R. Bejtlich, C. W. Rose: Real Digital Forensics. Addison-Wesley, 2006\nB. Carrier: File System Forensic Analysis. Addison-Wesley, 2005\nD. P. Bovet, M. Cesati: Understanding the Linux Kernel, 3rd ed. O’Reilly, 2006\nM. Russinovich, D.A. Soiomon, A. Ionescu: Windows Internals, 5th ed. Microsoft Press, 2008\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('MT3130','','','Complexity Theory','',6,'Maths','','',-1,'','','','','','-10','','','','ACTIVE',0,'','MT');
INSERT INTO modules VALUES('CS4234','I460, I260','','Large-Scale Data Storage and Processing','',7,'Computer Science','2018/19','Spring Term',15,'','CS1830','',replace('Knowledge and understanding of core concepts, theories and principles of large scale data storage and processing frameworks.\nSound evaluation of opportunities and challenges related to leveraging those frameworks for building massive scale analytics solutions, and an ability to make recommendations to resolve these challenges.\nProficient knowledge and use of at least one large scale data store systems, and at least one massive scale processing framework.\nAbility to design, develop, and evaluate an end to end analytics solution combining large scale data storage and processing frameworks.\nKnowledge of cloud computing as a platform for Big Data analytics.','\n',char(10)),replace('The main aims of this course are for students to study the underlying principles of storage and processing massive collections of data, typical of today''s Big Data systems, and to gain hands-on experience in using large and unstructured data sets for analysis and prediction. The topics covered include techniques and paradigms for querying and processing massive data sets (Spark, MapReduce, Hadoop, data warehousing, SQL for data analytics, stream processing), fundamentals of scalable data storage (NoSQL data bases such as MongoDB, Cassandra, HBase), working with dynamic web data (data acquisition, data formats), elements of cloud computing, and applications to real world data analytics and data mining problems (sentiment analysis, social network mining).\n','\n',char(10)),'150','',replace('Rajaraman, Leskovec, Ullman, Mining of Massive Datasets, Available for free from http://infolab.stanford.edu/~ullman/mmds.htm\nWhite, Hadoop: The Definitive Guide, O''Reilly, ISBN-10: 1449311520\nLin, Dyer, Data-Intensive Text Processing with MapReduce, Synthesis Lectures on Human Language Technologies, 2010, 177 pages, (doi:10.2200/S00274ED1V01Y201006HLT007)\nChodorow, Dirolf, MongoDB: The Definitive Guide, O''Reilly, ISBN-10: 1449344682\nMiner, Shook, MapReduce Design Patterns, O''Reilly, ISBN-10: 1449327176\nPramod J. Sadalage, Martin Fowler (2012), NoSQL Distilled: A Brief Guide to the Emerging World of Polyglot Persistence, Addison-Wesley Professional; 1st edition (August 18, 2012)\nLearning Spark: Lightning-Fast Big Data Analysis, by Karau, Konwinski, Wendell, and Zaharia: https://www.amazon.co.uk/Learning-Spark-Lightning-Fast-Data-Analysis/dp/1449358624\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS1811','I100','','Object oriented programming I','',4,'Computer Science','2017-18','Term 1',15,'','','',replace('solve basic programming tasks\nunderstand and use basic object-oriented concepts\ndemonstrate familiarity with core elements of the Java API','\n',char(10)),replace('This course teaches programming and object-orientation concepts. Students will learn about program basics (variables, types, scope, lifetimes),  control flow (if-constructs, for-loops, while-loops), data structures (strings, sets, lists, trees), objects (classes and inheritance), exceptions (throwing and catching) and file I/O (streams, file reading and writing).\n','\n',char(10)),'150','',replace('Herbert Schildt: Java: a Beginner’s Guide, 4th Edition, McGraw-Hill, 2007, ISBN 0072263849\nCay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\n','\n',char(10)),replace('Time allowed: 1 1/2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('IY2840','I100','','Computer and network security','',5,'Computer Science','2016-17','Term 2',15,'','CS2850','',replace('Identify and exploit the software vulnerabilities that can be introduced into programs through language features and poor programming practice\nDiscuss the countermeasures that can mitigate the exploitation of such software vulnerabilities\nIntroduce (briefly) malicious software (malware) as a typical consequence of a successful software exploitation\nProvide pointers to/discuss academic and /or industry research-oriented publications on the subject','\n',char(10)),replace('This course addresses a number of topics in computer and network security. Its content includes: Memory errors, Web, network, countermeasures and pointers to research papers. The course prepares students to identify software vulnerabilities, shows how to address these and introduces how vulnerabilities are exploited through malware.\n','\n',char(10)),'150','',replace('Hacking: The art of exploitation, 2nd edition, Jon Erickson\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('DC3760','I100','','Information Security','',6,'Computer Science','2018/19','Autumn Term',15,'','','IY2760',replace('Identify, through case studies how information security may be influenced by real world design and implementation decisions.\nDemonstrate an understanding of the different cryptographic algorithms, their use, advantages and disadvantages.\nApply the above identified cryptographic primitives in the review and evaluation of cryptographic protocols.\nAppreciate the rational decisions made in the design of some secure systems and security protocols, examples such as authentication protocols, key management protocols, access control, tokens and secure elements, etc.','\n',char(10)),replace('The aims of this course include providing a breadth of knowledge in Information Security and providing the background needed to study the subject area at different levels of specialisation.\nCourse content:\nIntroduction: What is security (covering notions of Confidentiality, Integrity, and Availability)? Security threats and risks. Security management (ISO 27000 series). Data Protection legislation.\nIntroduction to the elements of cryptography: Ciphers (stream, block, e.g. DES/3DES/AES). Message Authentication codes (MACs). Public key ciphers and digital signatures (e.g. RSA).\nIdentity verification: use and storage of conventional passwords. Dynamic password schemes. Biometric techniques. Use of tokens (dumb and intelligent), including the use of secure elements such as smart cards and trusted execution environments (TEEs)\nAccess control: Access Control Lists, capabilities, security labels (MAC and DAC), and role-based access control.\nNetwork security concepts and examples: the concepts of security services and security mechanisms (as in ISO 7498-2). An introduction to firewalls, intrusion detection systems and virtual private networks.\nComputer security concepts and examples: hardware and operating system concepts, malware e.g. viruses, spyware, ransomware etc., restricting access.\nCASE STUDY I: a case study in information security.\nAuthentication and key distribution: The importance and relatedness of the concepts of key management and entity authentication in a network. Objectives of an entity authentication protocol. Some fundamental protocols (e.g. Kerberos). Using authentication protocols for key distribution, and other approaches to key establishment (including public key certificates and X.509).\nCyber Physical security, Examine the security, strengths and weaknesses of existing embedded systems/platforms/smart cards and operating systems.\nCASE STUDY II: a case study in information security.\n','\n',char(10)),'150','',replace('D. Gollman, Computer Security, John Wiley & Sons, 2011 (3rd edition)\nC.P. Pfleeger, S. L. Pfleeger, J Margulies, Security in Computing, Prentice Hall, 2015 (5th edition)\nK. Martin, Everyday Cryptography: Fundamental Principles and Applications, Oxford University Press, 2017 (2nd edition)\nK. Markantonakis and K. E. Mayes, Secure Smart Embedded Devices, Platforms and Applications, Springer, 2013\nW. Ford, Computer Communications Security, 1994.\n','\n',char(10)),'','ACTIVE',0,0,'DC');
INSERT INTO modules VALUES('CS4220','I150','','Digital Audio and Applications','',7,'Computer Science','2016-2017','Term 1',15,'','','CS3220',replace('master digital audio and  the fundamentals of AD/DA conversion\nprogram Fourier analysis to synthesize and transform sounds in the frequency domain\ndemonstrate an understanding of  lossy and losseless compression algorithms\nprogram digital signal processing (post-processing and effects)\ndevelop applications for digital audio (music production, noise cancellation, audio enhancement, automatic music generation)\nacquire a basic knowledge of sound perception and  psychoacoustics','\n',char(10)),replace('Digital audio has many applications, ranging from music production to audio enhancement, or from noise cancellation in mobile phones to automatic music generations for games. These applications share common features that will be covered in this course. Starting with the fundamentals of sound (nature, transmission, volume), students will then learn how to convert sound to and from the digital domain. Once in the digital domain, audio can be manipulated using algorithms from Digital Signal Processing. The course covers some basic DSP algorithms, engaging the students both in audio analysis (amplitude, frequency, pan, etc.) and audio synthesis (additive , FM, etc.). By the end of this course, students should be able to write simple applications that analyse, manipulate and generate sound.\n','\n',char(10)),'150','',replace('Musimathics, volumes 1 & 2, Gareth Loy, The MIT press, 2011\n','\n',char(10)),NULL,'DORMANT',0,4,'CS');
INSERT INTO modules VALUES('MT3110','','','Number Theory','',6,'Maths','','',-1,'','','','','','-10','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('CS3470','','','Compilers and Code Generation','',6,'Computer Science','','',15,'','CS1811; CS1812 or CS1813; CS1870','',replace('explain the role and structure of a compiler and the standard stages of compilation\nto build a DFA based lexical analyser for a set of tokens specified using regular expressions\nAdvanced students should be able to construct regular expressions, which define specified set of strings\nuse grammars to define context free languages and to build parsers for them\ndescribe syntax directed translators and use them to construct intermediate code\ndescribe various types of error detection and recovery \ngenerate three address code from source code.','\n',char(10)),'To describe how to construct and implement interpreters and compilers for modern processors','150','',replace('<ul><li>Aho, Lam, Sethi, Ullman: Compilers: Principles, Techniques, and Tools, Addison Wesley, 2006 ISBN: 10: 0321486811</li>\n<li>J. Tremblay and P.G. Sorenson: The theory and practice of compiler writing, McGraw Hill, 1985,  ISBN 0-07-065161-2</li>\n<li>N. Wirth: Algorithms + Data Structures = Programs, Prentice Hall, 1976.</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS1890','I310','','Software Design','',4,'Computer Science','2015-16','Term 1',15,'','','',replace('Identify common software requirements and how these map to software components.  They will be able to recognise how these requirements have been discharged in existing systems and critique their effectiveness.\nUnderstand several techniques and notations that make it possible to document software design.  They will understand that Software Engineering supports communication of design ideas and this will allow them to see how Software Engineering is a team activity.\nUnderstand the importance of the several activities of a professional software engineer.  This will include techniques from agile software development, but will focus on requirements acquisition and software design.\nApply several techniques to design software based on user requirements.  They will be able to judge the appropriateness of designs produced using these techniques, both formally and informally.\nanalyse and critique the design of existing software.  This will include the User Experience of software as a measure of its fitness for purpose.','\n',char(10)),replace('The course addresses concepts required for performing software design activities. Core course content aims at interpreting requirements, identifying software components, documenting software design and understanding the various stages of software development, as well as techniques with a focus on software design.\nThis course will emphasise problem based learning.  Students will progress through case studies in critiquing software, acquiring and expressing requirements, designing software and documenting their designs.\nStudents will learn to use current industry standard notations such as User Stories and UML.  Students will see how design is achieved in various current Software Engineering processes, including the waterfall and agile processes.\n','\n',char(10)),'150','',replace('Shari Pfleeger and Joanne Atlee, Software Engineering: Theory and Practice, Prentice Hall, 4th edition, 2010.\nMartin Fowler, UML distilled: a brief guide to the standard object modelling language, Addison-Wesley, 3rd edition, 2004..\n','\n',char(10)),replace('Time allowed: 1 1/2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('IY3660','','','Applications of Cryptography','',6,'Information Security','','',15,'','IY2760','',replace('Appreciate the full range of security services that can be provided by cryptography\nCompare a number of different cryptographic mechanisms that can be used to provide these security services\nExplain the full nature of the architecture within which cryptography is deployed in a security system\nIdentify appropriate cryptographic standards that should be followed when implementing cryptography\nExplain the rationale for the design decisions taken in a number of widely deployed cryptographic systems','\n',char(10)),'The aim of this module is to explain the fundamentals behind cryptography and how it is deployed in real systems.','150','',replace('<ul><li>D.R. Stinson, Cryptography: Theory and Practice, CRC Press</li>\n<li>K.M. Martin: Everyday Cryptography, OUP.</li>\n<li>A. Dent and C.J. Mitchell: A users’ Guide to Cryptography Standards, Artech House</li>\n<li>C. Paar and J. Pelzl, Understanding Cryptography, Springer</li>\n<li>J. Katz and Y. Lindell, Introduction to Modern Cryptography, CRC Press</li>\n<li>N. Ferguson, B. Schneier and T. Kohno, Cryptography Engineering, Wiley</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,1,'CS');
INSERT INTO modules VALUES('CS3563','I300','','Technology Entrepreneurship','',6,'Computer Science','2018/19','',15,'','','',replace('Develop and think about technology-based ideas for the future.\nUnderstand the issues and challenges facing technology entrepreneurs.\nAssess and evaluate a technology venture.\nUnderstand the formation, development, growth and exit stages of technology ventures in detail.\nDemonstrate an understanding of the entrepreneurial process in the context of technology ventures.\nHave a systematic understanding, critical awareness and knowledge of current issues in technology entrepreneurship.','\n',char(10)),replace('This course gives an introduction into how technology start-ups work, and an insight into how to work for one. It takes students through the venture’s life cycle and explores issues that are unique to entrepreneurs starting science and technology-based ventures. It also provides students with a theoretical as well as practical outlook on issues faced by technology ventures/entrepreneurs. After this course, students should also be able to pitch an idea to potential investors.\n','\n',char(10)),'150','N/A',replace('Allen, K. 2009. Entrepreneurship for Scientists and Engineers (International ed.): Pearson Prentice Hall.\nDorf, R. C. & Byers, T. H. 2010. Technology Ventures From Idea to Enterprise (3rd ed.): McGraw Hill.\nBessant, J. & Tidd, J. 2007. Innovation and entrepreneurship: John Wiley & Sons.\nBurns, R. L. (Ed.). 2005. The business of healthcare innovation: Cambridge University Press.\nGeorge, G. & Bock, A. 2009. Inventing entrepreneurs: Technology innovators and their entrepreneurial journey: Prentice Hall.\nOakey, R. 2012. High-technology entrepreneurship. Routledge.\nPearce, R. & Barnes, S. 2006. Raising venture capital: Wiley.\nSeifert, R. W., Leleux, B. F., & Tucci, C. 2008. Nurturing science-based ventures: An international case perspective: Springer.\nShane, S. 2009. Technology strategy for managers and entrepreneurs: Pearson Prentice Hall.\nTouhill, C. J., Touhill, G. J., & O’Riordan, T. A. 2008. Commercialization of Innovative Technologies: Wiley Inter-science.\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('IY4612','I112','','Cyber security','',7,'Information Security','2016-17','Term 2',15,'','IY2760','IY3612',replace('have an understanding of network robustness and failures, together with key underlying theoretical concepts\nunderstand critical (information) infrastructures, vulnerabilities, and their dependencies\nappreciate the specific security problems of cyber-physical including SCADA systems and selected infrastructure\nunderstand complex attacks, analytical models for such attacks, and assurance mechanisms','\n',char(10)),replace('Week 1: Introduction\nWeek 2: Networks and dependencies\nWeek 3: Critical infrastructures and interdependencies\nWeek 4: Security of Cyber-Physical Systems\nWeek 5: Control systems security\nWeek 6: Advanced persistent threats\nWeek 7: Attack modelling techniques\nWeek 8: System assurance\nWeek 9: Incident response mechanisms\nWeek 10: Offensive cyber operations\nWeek 11: Future challenges\n','\n',char(10)),'150','',replace('J Lopez, R Setola, S Wolthusen (eds.) Critical Information Infrastructures Vol. 7130 of\nLecture Notes in Computer Science. Springer-Verlag, 2012\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS3840','I120','','Interconnected devices','',6,'Computer Science','2019-20','Term 1',15,'','','',replace('Understand how to design, build, and test a simple microcontroller-based embedded system\nUse an appropriate low level programming language to program an embedded system\nAnalyse requirements and make design trade-off decisions between hardware, software and networking\nConnect multiple devices to achieve planned goals','\n',char(10)),replace('The course will present the Internet of Things (IoT) by covering the applications of IoT in society, the components of typical IoT systems and the trends for the future.\nThe course will expose students to IoT design considerations, constraints and interfacing between the physical world and the IoT devices.\nAfter this stage, the course will focus on how the Arduino platform works in terms of the physical board, the libraries and the IDE (integrated development environment). It will cover how to program the Arduino and how to access the pins on the board via the software to control external devices.\nFinally, the course will provide hands-on knowledge on how to plug shields into the main Arduino board to perform other functions such as sensing and actuating.\n','\n',char(10)),'150','',replace('- Michael Margolis, Arduino Cookbook, 3rd edition\n- John Hughes, Arduino in a Nutshell\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('CS2860','I130','','Algorithms and Complexity','',5,'Computer Science','2017/18','Spring',15,'','CS1811,CS1812,CS1813,CS1860','',replace('understand and reason about alternative data structure representations, and their use in programs\nimplement and reason about alternative implementations for basic algorithms, including graph algorithms\ncalculate the complexity of basic algorithms, including graph algorithms','\n',char(10)),replace('The main aim of the course is to teach the design of algorithms and data structures from the point of view of time and space complexity. This includes covering sorting and search algorithms, and graphs. The course content includes the following:\nComplexity: counting, big-O notation, best-case, worst-case and average-case analysis.\nBasic algorithms, sorting and searching part: implementation and analysis of linear search, binary search, and basic sorting algorithms,\nespecially insertion sort, selection sort, merge sort, quick sort, heap sort.\nData structures: binary search trees, balanced binary search trees, hash tables, (binary) heaps.\nAbstract datatypes: Sets, maps, priority queues.\nBasic algorithms, graph algorithms part: adjacency matrix and adjacency list representations; algorithms for connectivity, shortest paths,\nand spanning trees.\n','\n',char(10)),'150','',replace('T.H. Cormen, C.E. Leiserson, R.L. Rivest and C. Stein: Introduction To Algorithms, 3rd Edition, MIT Press, Cambridge MA, 2009,\nISBN 0262533058\nR. Sedgewick and K. Wayne: Algorithms, 4th edition, Addison-Wesley Professional 2011, ISBN 032157351X\nS. Skiena: The Algorithm Design Manual, 2nd edition, Springer 2010, ISBN 1849967202\nK. Mehlhorn and P. Sanders: Algorithms and Data Structures: The Basic Toolbox. Springer 2008.\nAvailable at http://www.mpi-inf.mpg.de/~mehlhorn/Toolbox.html\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS3110','','','Bioinformatics','',6,'Computer Science','','',15,'','None','',replace('assess the main approaches currently in use in bioinformatics;\ndemonstrate an understanding of the analysis of DNA and protein sequences.','\n',char(10)),'To introduce the main approaches currently in use in bioinformatics, with special emphasis on the analysis of DNA and protein sequences emerging from genome sequencing projects and genome-wide experimental assays.','150','',replace('<ul><li>Understanding Bioinformatics Marketa Zvalebil, Jeremy O. Baum Garland Science, 2007</li>\n<li>R.Durbin, S.Eddy, A.Krogh, and G.Mitchinson: Biological sequence analysis, Cambridge University Press, 1998 : ISBN-10: 0521629713</li>\n<li>R.Duda,P.Hart,D.Stork: Pattern classification, John Wiley &amp; Sons, 2001:ISBN-10: 0471056693</li>\n<li>B.Levin: Genes VIII, Prentice Hall, 2004: ISBN-10: 0131239244</li>\n<li>A.M.Lesk: Introduction to Bioinformatics, Oxford University Press, 2005: ISBN-10: 0199277877</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS1812','I100','','Object oriented programming II','',4,'Computer Science','2017-18','Term 2',15,'CS1811','','',replace('demonstrate an ability to implement basic algorithms and data structures\nunderstand and use object-oriented concepts\nappreciate the need for program documentation, testing, readability and modifiability','\n',char(10)),replace('This course teaches programming and object-orientation concepts, building on what is taught in CS1811. Students will reinforce their knowledge about program basics (e.g. variables, types, scope, lifetimes), algorithms (e.g. recursion, searching, sorting), data structures (e.g. sets, lists, trees), objects (e.g. classes, dynamic dispatch, interface, inheritance, generics), exceptions and I/O (e.g. streams, file reading, writing and copying). Furthermore, the course also teaches fundamentals of coding best practices.\n','\n',char(10)),'150','',replace('Herbert Schildt: Java: a Beginner’s Guide, 4th Edition, McGraw-Hill, 2007, ISBN 0072263849\nCay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\n','\n',char(10)),replace('Time allowed: 1 1/2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS4490','I100','','Computational Optimization','',7,'Computer Science','2018/19','Spring Term',15,'','CS2860','CS3490',replace('understand and evaluate fundamental models of computational optimization (CO)\nexamine and apply the fundamental algorithms for solving CO problems\napply theoretical and computational methods to analyse CO algorithms\nfurther develop algorithmic and mathematical skills','\n',char(10)),replace('This course will provide students with advanced understanding of fundamental models of computational optimisation (CO) and important algorithms for solving CO problems; enable students to analyse CO algorithms using theoretical and computational methods; and discuss and compare available software packages for solving CO problems.\nCourse content:\nLinear programming (LP) model. Formulating problems as LP problems.\nGraphical solution. Simplex method.\nDuality in LP. Decomposition of LP problems. LP software.\nInteger Programming (IP). IP models. Branch-and-Bound algorithm.\nCO problems. Polynomial-time algorithms. Greedy-type algorithms. Construction heuristics and local search for the TSP.\nTheoretical and computational analysis of heuristics and meta-heuristics.\n','\n',char(10)),'150','',replace('M.W. Carter, C.C. Price, Operations Research: A Practical Introduction, CRC, 2001 (001.424 CAR)\n','\n',char(10)),NULL,'DORMANT',0,0,'CS');
INSERT INTO modules VALUES('CS4250','','','Visualisation and Exploratory Analysis','',7,'Computer Science','','',15,'','Cannot take if passed CS3250','',replace('have a mastery of the skills and wisdom that are needed for open-ended exploratory analysis of data, and for the analytical presentation and critical evaluation of the results of statistical analyses;\nhave a mastery of the construction of linear projections of multivariate data and advanced understanding of non-linear dimension reduction methods;\nhave some practical experience of using standard graph visualisation methods and evaluation of results\nbe effective in avoiding data snooping\ncritically evaluate choices in representational mode, glyph design, and colour design for presentation graphics.','\n',char(10)),'The course aims to teach the principles and arts of statistical visualisation and exploratory analysis of data. There are principles, theory, and skills to be acquired.Course content: 	Construction of informative bivariate plots. This will cover standard axis transformations and why they are useful, and also the importance of constructing data transformations such that a reference hypothesis presents in the simplest possible form. Smoothing with loess. Visualisation of distributions: histograms, binning, and kernel density estimation; cumulative distributions and QQ plots. These topics will be backed up with plenty of practical examples and coursework. 	Visualisation of multivariate data. Linear projections and principal components analysis in primal and dual mode. Kernel PCA. Canonical correlations analysis (CCA) and Kernel CCA. 	Dimensional reduction. Non-linear methods, examples such as t-SNE, Isomap, and proxigrams. 	Exploratory cluster analysis, and metrics for comparison of clusterings. 	Standard methods for visualisation of relational and graph data will be described including practical implementations such as Gephi. 	Checking a found pattern by constructing a suitable randomisation of the data; importance of guarding against `snooping''. 	Principles of selecting modes of presentation for various quantities; basic principles of colour scale design and glyph choice.','150','',replace('Visualising data, by William S. Cleveland<br/>\nThe elements of graphing data by William s. Cleveland<br/>\nThe visual display of quantitative data, by Edward Tufle<br/>\nEnvisioning information by Edward Tufle','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,1,'CS');
INSERT INTO modules VALUES('CS2910','I400','','Artificial Intelligence','',5,'Computer Science','2017-18','Term 2',15,'','','',replace('Use computational logic to model domains and reasoning tasks of an intelligent system\nUnderstand the role of knowldege representation, problem solving and learning in building domain independent and domain dependent AI capabilities\nExplain conceptual and computational trade-offs between the expressiveness of different representations and capabilities\nDemonstrate how to develop and combine AI capabilities in a suitable programming language','\n',char(10)),replace('Artificial Intelligence (AI) is usually defined as the science of making computers do things that require intelligence when done by humans. AI has had some success in limited, or simplified, domains. However,  more recently, successes with developments of AI systems such as game playing and robotics have regenerated optimism concerning the attainment of human-level intelligence in a variety of domains despite the profound difficulty of the problem.\nThe aim of this course  is to introduce students to the basic principles, methods and techniques of AI to provide the foundations for more advanced courses in this area. The course will start by providing an overview of the approaches in the field by referring to the wider historical context in which the AI vision was set and will further motivate the content to be taught by presenting existing and potential applications. After the overview, the course will deliver a series of topics from first principles, including  the role of first-order logic for knowledge representation, computational  reasoning and problem solving systems, the use of search as a capability for exploring alternative solutions, and how AI systems  use knowledge to plan and learn from first principles.\nUpon completion of the course, students should be able to develop intelligent systems by assembling capabilities to concrete computational problems; understand the role of knowledge representation, problem solving, and learning in intelligent-system engineering; and appreciate the role of problem solving, in wide applications that require a basic understanding of human intelligence from a computational perspective.\n','\n',char(10)),'150','',replace('Primary text:\nRussell and Norvig. Artificial Intelligence: A Modern Approach. 3rd Edition.\nSecondary text:\nIvan Bratko. Prolog Programming for Artificial Intelligence 3rd Edition.\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS4001','','','Year in Industry','',7,'Computer Science','','',30,'',replace('60% average in first year of study with no module below 40%.<br/>\n60% average in second year of study with no module below 40%.<br/>\n60% average in third year of study with no module below 40%.','\n',char(10)),'',replace('An understanding of the complexities and demands of the job application process\nAn understanding of the day to day running of a company \nAn insight into data handling and analysis skills required in business and Experience a range of practical work based situations\nImprove technical skills and increased ability to evidence and demonstrate their skills to future employers\nAn understanding of recruitment priorities of employers','\n',char(10)),replace(' This is an optional ‘year out’ between the third and final year, spent at an organisation or institution approved by the College as having a function relevant and suitable to Computer Science.  Each student on a placement gets a placement advisor. This can be the same person as the students’ academic adviser or may be different person more experienced in industry collaborations.\nThe advisor monitors progression and is the first point of contact in the college if the student is unhappy with anything concerning the placement.\nThe adviser would normally visit the student twice at the location of the placement, depending on the location of the placement. The main purpose of the visits is to make sure that the placement proceeds as agreed and the job tasks undertaken by the student are of sufficient educational value.','\n',char(10)),'300','','N/A','','ACTIVE',0,NULL,'CS');
INSERT INTO modules VALUES('CS2890','','','Software Design','',5,'Computer Science','','',15,'','None','',replace('Identify common software requirements and how these map to software components.  They will be able to recognise how these requirements have been discharged in existing systems and critique their effectiveness.\nUnderstand several techniques and notations that make it possible to document software design.  They will understand that Software Engineering supports communication of design ideas and this will allow them to see how Software Engineering is a team activity.\nUnderstand the importance of the several activities of a professional software engineer.  This will include techniques from agile software development, but will focus on requirements acquisition and software design.\nApply several techniques to design software based on user requirements.  They will be able to judge the appropriateness of designs produced using these techniques, both formally and informally.\nAnalyse and critique the design of existing software.  This will include the User Experience of software as a measure of its fitness for purpose.','\n',char(10)),'The course addresses concepts required for performing software design activities. Core course content aims at interpreting requirements, identifying software components, documenting software design and understanding the various stages of software development, as well as techniques with a focus on software design.','150','',replace('<ul><li>Shari Pfleeger and Joanne Atlee, Software Engineering: Theory and Practice, Prentice Hall, 4th edition, 2010.</li>\n<li>Martin Fowler, UML distilled: a brief guide to the standard object modelling language, Addison-Wesley, 3rd edition, 2004.</li>\n</ul>','\n',char(10)),'','ACTIVE',0,2,'DC');
INSERT INTO modules VALUES('CS3823','I120, I160','','Individual Project in Distributed and Networked Systems','',6,'Computer Science','2019/20','Terms 1 & 2',30,'','','',replace('understand complex ideas and identify solutions to a problem\napply scientific and software/hardware techniques to solving a problem\nanalyse the solution to a problem and evaluate the associated results\ndemonstrate the ability to plan, organise and present the project work both in written form and orally\nunderstand legal, social, ethical and professional issues','\n',char(10)),replace('The content of each project is individual. The rules for choosing a project and designing an individual project are detailed in the Project Handbook.\n','\n',char(10)),'300','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project - with Success!: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2002: ISBN-10: 1852333324\nRichard Epstein: The case of the Killer Robot, John Wiley & Sons, 1997: ISBN 978-0471138235.\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('CS3910','I300','','Running a Small Business','',6,'Computer Science','2018/19','',15,'','','',replace('Understand fundamental concepts, terminology and processes of a business and its operating environment.\nApply basic strategy and financial management techniques.\nUnderstand and compare types of Information Systems, architectural paradigms, acquisition models and key software applications of a modern business.\nComprehend the theoretical foundations of leadership and people management and be able to appraise their applicability in practice.\nExplain and where appropriate apply the principles of Risk Management.','\n',char(10)),replace('The main aim of this course is to give a good background to students on how to run a small company.\nCourse content:\nIntroduction – types of Businesses, Organizational Functions/Structures, Business Processes fundamentals.\nStarting a Business – Business Plan, Budgeting and Investment Valuation Methods (e.g. ROI, TCO, NPV), Fund-raising aspects.\nBasics of Strategy and Planning – e.g. Definitions, SWOT Analysis, Porter’s 5 forces, types/elements of plans.\nBusiness Financial Management – Basics of Accounting, Assets/Liabilities, CAPEX/OPEX, Balance Sheet, P&L, Cash Management, Financial Ratios.\nCapital Raising and the role/services of Banks – e.g. Financial Intermediation, Trade Finance, Payments, Loans, Financial Markets and Instruments.\nBasics of Information Systems – Overview & Landscape, underlying Technology elements, Architectural paradigms, Acquisition methods.\nERP and Human Resources Management Processes and Systems\nCustomer Relationship Management and Marketing concepts, CRM Systems\nFundamentals of Managing Oneself and Others – e.g. Leadership, Planning, Time and Stress Management, Negotiation, Goal-setting.\nRisk Management and Business Continuity elements\n','\n',char(10)),'150','N/A',replace('Good small business guide, 7th Edition: How to start and grow your own business, ISBN-10: 1408159597\nMichael Blackstaff, Finance for IT Decision Makers: A Practical Handbook, BCS, ISBN: 1780171226, 2012.\nK.C Laudon, J.P Laudon, Management Information Systems: Managing the Digital Firm, Pearson, ISBN-10: 0133898164.\nHBR''s 10 Must Reads for New Managers, Harvard Business Review, ISBN-10: 1633693023, 2017.\nHBR''s 10 Must Reads on Managing Yourself, Harvard Business Review, ISBN-10: 1422157997, 2011.\nHBR’s 10 Must Reads on Managing People, Harvard Business Review, ISBN-10: 1422158012, 2011.\nAdditional readings and handouts will be provided on specific topics, e.g. on Banks and Financial Services, Risk Management, Leadership, Negotiations, Time Management.\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('MT2860','','','Groups and Group Functions','',5,'Maths','','',-1,'','','','','','-10','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('CS4945','I150','','Semantic Web','',7,'Computer Science','2016-17','Term 1',15,'','CS2841','CS3945',replace('demonstrate a mastery of the fundamental concepts, and standards of the semantic web\ndemonstrate an advanced understanding of the use of standards such as RDF, RDFS and OWL for modeling different scenarios and reasoning\ndemonstrate an advanced understanding of underlying logical theory behind the semantic web, for example Description Logic','\n',char(10)),replace('The Web, as it exists today, primarily supports human understanding and the interpretation of the vast information space it encompasses. However the Web was originally designed with a goal to support not only human-human communication but also as one that would enable automated machine processing of data with minimal human intervention. The Semantic Web is Tim Berners-Lee''s vision of a machine understandable and unambiguously computer interpretable Web. The rationale behind such a system is that most of the data currently posted on the web is buried in HTML files suitable for human reading and not for computers to manipulate meaningfully. The semantic Web, an extension of the current web, can be thought of as a globally linked database where information is given well-defined meaning using metadata for better enabling computers and humans to work in close cooperation. The realisation of a Semantic Web will thus make machine reasoning more ubiquitous and powerful, creating an environment where intelligent software agents can roam, carrying out sophisticated tasks for their users.\nThough the original motivation of the semantic web was to constitute the next generation of the WWW, the standards and technologies developed in the process have been found useful in specific realm enterprises as well. From this perspective the Semantic Web can be viewed as a semantically-rich data model that is more expressive than the usual relational data model used in standard databases systems, and is also more adequate to distributed and incomplete resources.\nThis course is about the notions, concepts, technologies and modelling techniques that constitute the Semantic Web, whose key distinguishing characteristics will be the support for and use of semantics in new, more effective, more intelligent, ways of managing information and supporting applications.\n','\n',char(10)),'150','',replace('Primary text:\nSemantic Web for the Working Ontologist (Effective Modeling in RDFS and OWL) 2nd Edition, By Dean Allemang, James Hendler, Elsevier / Morgan Kaufmann, July 2011.\nA Semantic Web Primer (Cooperative Information Systems), 3rd Ed., by Grigoris Antoniou (Author), Paul Groth (Author) et al., 2012.\nSecondary text:\nSemantic Web Programming, John Hebeler, Matthew Fisher, Ryan Blace, Andrew Perez-Lopez, Wiley Publishing, Inc, 2009\n','\n',char(10)),NULL,'DORMANT',0,1,'CS');
INSERT INTO modules VALUES('CS3846','','','Human-Computer Interaction','',6,'Computer Science','','',15,'','CS1840 or CS2841','',replace('demonstrate an understanding of what HCI is, its principles, challenges, and teamwork development aspects\nbuild prototypes using different media and technologies\nevaluate the usability and suitability of user interfaces\nundertake HCI tests, namely Web experiments\nexplain how perception and cognition influence HCI','\n',char(10)),'This course introduces human-computer interaction aspects and challenges, and addresses the approaches that can be used to create interfaces matching users'' needs and expectations.','150','',replace('<ul><li>Alan Dix et al, Human Computer Interaction. 2003.</li>\n<li>Yvonne Rogers et al, Interaction Design: Beyond Human Computer Interaction. 2011.</li>\n<li>Jakob Nielsen, Prioritizing Web usability. 2006.</li>\n<li>Don Norman, The Design of Everyday Things: Revised and Expanded Edition. 2013.</li>\n<li>Eric Freeman. Head First HTML5 Programming. 2011.</li>\n<li>Jon Duckett, JavaScript and jQuery: Interactive Front-End Web Development. 2014.</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,4,'CS');
INSERT INTO modules VALUES('MT1710','','','Calculus','',4,'Maths','','',15,'','','','','','150','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('IY3612','I112','','Cyber security','',6,'Information Security','2016-17','Term 2',15,'','IY2760','',replace('have an understanding of network robustness and failures, together with key underlying theoretical concepts\nunderstand critical (information) infrastructures, vulnerabilities, and their dependencies\nappreciate the specific security problems of cyber-physical including SCADA systems and selected infrastructure\nunderstand complex attacks, analytical models for such attacks, and assurance mechanisms','\n',char(10)),replace('Week 1: Introduction\nWeek 2: Networks and dependencies\nWeek 3: Critical infrastructures and interdependencies\nWeek 4: Security of Cyber-Physical Systems\nWeek 5: Control systems security\nWeek 6: Advanced persistent threats\nWeek 7: Attack modelling techniques\nWeek 8: System assurance\nWeek 9: Incident response mechanisms\nWeek 10: Offensive cyber operations\nWeek 11: Future challenges\n','\n',char(10)),'150','',replace('J Lopez, R Setola, S Wolthusen (eds.) Critical Information Infrastructures Vol. 7130 of\nLecture Notes in Computer Science. Springer-Verlag, 2012\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS1822','I100','','Programming Laboratory','',4,'Computer Science','2019-20','Term 1, Term 2',30,'','','',replace('program independently to solve a given problem.\nknow how to write an individual technical report..\nknow how to present a project, both at a practical demonstration and in a formal short presentation.\nhave been introduced to a programming environment for a particular event driven or embedded domain such as microprocessor coding, robotics coding, game development or interactive web development.\nwork in a group on a programming project.\n','\n',char(10)),replace('Students in this course will apply programming concepts from the the very basic (variables, control flow, loops, methods) up to advanced concepts (event driven programming, embedded programming) and best practices. The course will follow a blended learning model incorporating lectures, practical exercises, project work and online assessment.\n','\n',char(10)),'300','',replace('Cay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\nhttps://inventwithpython.com/\nIan Millington – Artificial Intelligence for Games\nDavid Eberly – Game Physics\nChrister Ericsson – Real Time Collision Detection\nJ. Kelly: LEGO Mindstorms NXT-G Programming Guide, Technology in Action Press, 2007, ISBN 10: 1590598717\nBrian Bagnell: Maximum Lego NXT: Building Robots with Java Brains, Variant Press 2007, ISBN 10: 097386491\n','\n',char(10)),'','ACTIVE',0,3,'CS');
INSERT INTO modules VALUES('DC1821','I100','','Programming Laboratory','',4,'Computer Science','2019-20','Term 1, Term 2',30,'','','',replace('be able to program independently to solve a given problem.\nknow how to write an individual technical report..\nknow how to present a project, both at a practical demonstration and in a formal short presentation.\nhave been introduced to a programming environment for a particular event driven or embedded domain such as microprocessor coding, robotics coding, game development or interactive web development.\nwork in a group on an I.T. project.\n','\n',char(10)),replace('Students in this course will apply programming concepts from the the very basic (variables, control flow, loops, methods) up to advanced concepts (event driven programming, embedded programming) and best practices. The course will follow a blended learning model incorporating lectures, practical exercises, project work and online assessment.\n','\n',char(10)),'300','',replace('Cay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\nhttps://inventwithpython.com/\nIan Millington – Artificial Intelligence for Games\nDavid Eberly – Game Physics\nChrister Ericsson – Real Time Collision Detection\nJ. Kelly: LEGO Mindstorms NXT-G Programming Guide, Technology in Action Press, 2007, ISBN 10: 1590598717\nBrian Bagnell: Maximum Lego NXT: Building Robots with Java Brains, Variant Press 2007, ISBN 10: 097386491\n','\n',char(10)),'','ACTIVE',0,3,'DC');
INSERT INTO modules VALUES('CS1813','I100, I300','','Software Development','',4,'Computer Science','2017-18','Term 2',15,'CS1811','','',replace('demonstrate an ability to implement basic algorithms and data structures\nunderstand and use object-oriented concepts\nappreciate the need for program documentation, testing, readability and modifiability\ndevelop a simple application based on a design specification\ncreate a test plan, execute it, and identify faults in an application','\n',char(10)),replace('This course teaches programming and object-orientation concepts, building on what is taught in CS1811. Students will reinforce their knowledge about program basics (e.g. variables, types, scope, lifetimes), algorithms (e.g. recursion, searching, sorting), data structures (e.g. sets, lists, trees), objects (e.g. classes, dynamic dispatch, interface, inheritance, generics), exceptions and I/O (e.g. streams, file reading, writing and copying). Furthermore, the course also teaches fundamentals of coding best practices.\nIn addition, students learn software development best practices, how to perform small scale software development from a specification, and details about the testing process and software evaluation.\n','\n',char(10)),'150','',replace('Herbert Schildt: Java: a Beginner’s Guide, 4th Edition, McGraw-Hill, 2007, ISBN 0072263849\nCay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\n','\n',char(10)),replace('Time allowed: 1 1/2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS1820','','','Computing laboratory (robotics)','',4,'Computer Science','','',15,'','None','',replace('Programme a mobile robot to execute pre-defined movements\nUnderstand the operation of basic sensors\nUnderstand the essentials of real time event-driven programming','\n',char(10)),'To provide a practical approach to programming and the building of computer systems.<br /><br />To introduce elementary robotics concepts<br /><br />To reinforce the earning of elementary programming','150','',replace('<ul><li>J. Kelly: LEGO Mindstorms NXT-G Programming Guide, Technology in Action Press, 2007, ISBN 10: 1590598717</li>\n<li>Brian Bagnell: Maximum Lego NXT: Building Robots with Java Brains, Variant Press 2007, ISBN 10: 0973864915</li>\n</ul>','\n',char(10)),'','DORMANT',0,2,'CS');
INSERT INTO modules VALUES('CS3822','','','Full Unit Project in Artificial Intelligence','',6,'Computer Science','','',30,'','CS2800','',replace('Understand complex ideas and identify solutions to a problem\nApply scientific and software/hardware techniques to solving a problem\nAnalyse the solution to a problem and evaluate the associated results\nDemonstrate the ability to plan, organise and present the project work both in written form and orally\nUnderstand complex ideas and identify solutions to a problem','\n',char(10)),replace('<p>To provide the opportunity to demonstrate independence and originality, to plan and organise a large project over a long period, and to put into practice the techniques taught throughout their degree course.</p>\n<p>The topic of the project will be related to artificial intelligence and related to individual project. To show an understanding of legal, social, ethical and professional issues</p>','\n',char(10)),'300','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X.<br/>\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project - with Success!: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2002: ISBN-10: 1852333324.<br/>\nRichard Epstein: The case of the Killer Robot, John Wiley & Sons, 1997:                     ISBN 978-0471138235.','\n',char(10)),'','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('CS1870','','','Machine Fundamentals','',4,'Computer Science','','',15,'','None','',replace('use formal logic to design, reason about and minimise switching circuits\nwrite basic programs in assembly language\nunderstand binary representations of signed and unsigned integers\nwrite regular expressions to describe sets and build deterministic automata to recognise these sets\nuse automata to design and reason about sequential flow systems','\n',char(10)),'To explain the theory and use of logic in the description, specification and behaviour of machine processes.<br /><br />To provide insights and skills for dealing with large and infinite objects in a way that allows them to be implemented in a programming environment.<br />','150','',replace('<ul><li>Rosen: Discrete Mathematics And Its Applications, McGraw Hill, 2006, ISBN 0071244743</li>\n<li>Brookshear: Computer Science An Overview, Addison-Wesley, 2007, ISBN 0321524039</li>\n</ul>','\n',char(10)),replace('Time allowed: 1 1/2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS4563','I300','','Technology Entrepreneurship','',7,'Computer Science','2018/19','',15,'','','CS3563',replace('Develop and think about technology-based ideas for the future.\nUnderstand the issues and challenges facing technology entrepreneurs.\nAssess and evaluate a technology venture.\nUnderstand the formation, development, growth and exit stages of technology ventures in detail.\nHave an in-depth and critical understanding of the entrepreneurial process in the context of technology ventures.\nHave a systematic understanding, critical awareness and knowledge of current issues in technology entrepreneurship.','\n',char(10)),replace('This course gives an introduction into how technology start-ups work, and an insight into how to work for one. It takes students through the venture’s life cycle and explores issues that are unique to entrepreneurs starting science and technology-based ventures. It also provides students with a theoretical as well as practical outlook on issues faced by technology ventures/entrepreneurs. After this course, students should also be able to pitch an idea to potential investors.\n','\n',char(10)),'150','N/A',replace('Allen, K. 2009. Entrepreneurship for Scientists and Engineers (International ed.): Pearson Prentice Hall.\nDorf, R. C. & Byers, T. H. 2010. Technology Ventures From Idea to Enterprise (3rd ed.): McGraw Hill.\nBessant, J. & Tidd, J. 2007. Innovation and entrepreneurship: John Wiley & Sons.\nBurns, R. L. (Ed.). 2005. The business of healthcare innovation: Cambridge University Press.\nGeorge, G. & Bock, A. 2009. Inventing entrepreneurs: Technology innovators and their entrepreneurial journey: Prentice Hall.\nOakey, R. 2012. High-technology entrepreneurship. Routledge.\nPearce, R. & Barnes, S. 2006. Raising venture capital: Wiley.\nSeifert, R. W., Leleux, B. F., & Tucci, C. 2008. Nurturing science-based ventures: An international case perspective: Springer.\nShane, S. 2009. Technology strategy for managers and entrepreneurs: Pearson Prentice Hall.\nTouhill, C. J., Touhill, G. J., & O’Riordan, T. A. 2008. Commercialization of Innovative Technologies: Wiley Inter-science.\n','\n',char(10)),NULL,'WONTRUN',0,0,'CS');
INSERT INTO modules VALUES('CS4920','I460','','Machine Learning','',7,'Computer Science','2018/19','Autumn Term',15,'','','CS3920',replace('Demonstrate advanced knowledge of the theoretical foundations of several key machine learning methods.\nUnderstand at an advanced level the main advantages and limitations of various approaches to machine learning and specific machine-learning algorithms.\nHave a mastery and be able to implement several machine-learning algorithms.\nUnderstand, at an advanced level, ways to apply the ideas and algorithms of machine learning in industry, medicine, and other fields.','\n',char(10)),replace('The aim of the course is to acquaint the students with several key methods and techniques of machine learning.  In particular, it will cover the following topics. Nearest neighbours for classification and regression; interesting distances. Conformal prediction and conformalizing nearest neighbours. Ridge regression and Lasso. Inductive conformal predictors and cross-conformal predictors. Support vector machines for classification and regression. Kernel trick and its applications to the algorithms covered so far. Practically useful kernels. Conformalized versions.\n','\n',char(10)),'150','N/A',replace('Andreas C. Mueller and Sarah Guido (2016) Introduction to Machine Learning with Python. O''Reilly Media\nVineeth N. Balasubramanian et al. (2014) Conformal Prediction for Reliable Machine Learning. Elsevier\nGareth James et al. (2013) An Introduction to Statistical Learning. Springer\nTrevor Hastie et al. (2009) The Elements of Statistical Learning.  Second edition. Springer\nJohn Shawe-Taylor and Nello Cristianini (2004) Kernel Methods for Pattern Analysis. Cambridge University Press\nTom M. Mitchell (1997) Machine Learning. McGraw-Hill\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are permitted','\n',char(10)),'DORMANT',0,1,'CS');
INSERT INTO modules VALUES('MT2220','','','Vector Analysis and Fluids','',5,'Maths','','',-1,'','','','','','-10','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('CS1803','','','Introduction to Programming','',4,'Computer Science','','',15,'','None','','','The goal of this course is to provide:an overall look at the world of programming;knowledge of how computers can be used to solve problems;a hands-on approach to fundamental programming skills.','150','',replace('<ul><li>Herbert Schildt: Java: a Beginner’s Guide, 4th Edition, McGraw-Hill, 2007, ISBN 0072263849</li>\n<li>Cay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1</li>\n</ul>','\n',char(10)),'','DORMANT',0,3,'DC');
INSERT INTO modules VALUES('CS4823','I120, I160','','MSci Individual Project in Distributed and Networked Systems','',7,'Computer Science','2020/21','Terms 1 & 2',60,'','','',replace('develop an advanced understanding of complex ideas and identify solutions to a problem\napply scientific and software/hardware techniques to solving a problem\nanalyse the solution to a problem and evaluate the associated results\ndemonstrate a mastery of planning, organising and presenting the project work both in written form and orally\ndevelop an advanced understanding of legal, social, ethical and professional issues','\n',char(10)),replace('The content of each project is individual. The rules for choosing a project and designing an individual project are detailed in the Project Handbook.\n','\n',char(10)),'600','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project - with Success!: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2002: ISBN-10: 1852333324\nRichard Epstein: The case of the Killer Robot, John Wiley & Sons, 1997: ISBN 978-0471138235.\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('CS4990','I410, I430, I460','','Natural Language Processing','',7,'Computer Science','2019/20','Spring Term',15,'','CS2900','',replace('Have an advanced understanding of theory of syntax, semantics, and pragmatics\nHave an advanced understanding techniques for basic processing of text corpora\nHave an advanced understanding typical natural language processing tasks\nImplement modern deep learning methods of natural language processing.','\n',char(10)),replace('The aim of this course is to teach the necessary background knowledge and practical techniques - especially deep learning -  needed to apply natural language processing to large, real-life text-based projects. A brief survey of computational linguistic theory will include notions of syntax, semantics, and pragmatics. Practical techniques for preparing and pre-processing text will be taught in lab sessions. Typical commercial applications of NLP will be surveyed, with practical examples. Standard NLP techniques covered will include: topic modelling and LDA, and construction of word-embeddings.\nRecent recurrent deep learning architectures for text processing will be covered in depth, using examples from the research literature.\n','\n',char(10)),'150','',replace('Natural Language Processing in Action: understanding, analysing, and generating text with Python, by Hobson and Cole, Springer 2017\nDeep Learning with Natural Language Processing by Li Deng and Yang Liu, Springer, July 2018-06-14\nThe Handbook of Computational Linguistics and Natural Language Processing (Blackwell Handbooks in Linguistics) by Alexander Clark, 2012\nApplied Text Analysis with Python, by Bengfort and Bilbro, O''Reilly 2018\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS4822','I400','','MSci Individual Project in Artificial Intelligence','',7,'Computer Science','2017/18','Terms 1 & 2',60,'','CS2800','',replace('develop an advanced understanding of complex ideas relating to AI and identify solutions to an AI problem\napply advanced scientific and software/hardware techniques to solving an AI problem\nanalyse the solution to a problem and evaluate the associated results\ndemonstrate a mastery of planning, organising and presenting the project work both in written form and orally\ndevelop an advanced understanding of legal, social, ethical and professional issues','\n',char(10)),replace('The aim of this project is to further the students'' knowledge of a particular artificial intelligence topic and to give them the opportunity of demonstrating their ability of working individually, whilst appling advanced scientific and software/hardware techniques to solving a problem.\nThe content of each project is individual. The rules for choosing a project and designing an own project are detailed in the Project Handbook.\n','\n',char(10)),'600','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project - with Success!: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2002: ISBN-10: 1852333324\nRichard Epstein: The case of the Killer Robot, John Wiley & Sons, 1997: ISBN 978-0471138235.\n','\n',char(10)),'','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('CS2846','','','Human-Computer Interaction','',5,'Computer Science','','',15,'','CS1840 or CS2841','',replace('demonstrate an understanding of what HCI is, its principles, challenges, and teamwork development aspects\nbuild prototypes using different media and technologies\nevaluate the usability and suitability of user interfaces\nundertake HCI tests, namely Web experiments\nexplain how perception and cognition influence HCI','\n',char(10)),'This course introduces human-computer interaction aspects and challenges, and addresses the approaches that can be used to create interfaces matching users'' needs and expectations.','150','',replace('<ul><li>Alan Dix et al, Human Computer Interaction. 2003.</li>\n<li>Yvonne Rogers et al, Interaction Design: Beyond Human Computer Interaction. 2011.</li>\n<li>Jakob Nielsen, Prioritizing Web usability. 2006.</li>\n<li>Don Norman, The Design of Everyday Things: Revised and Expanded Edition. 2013.</li>\n<li>Eric Freeman. Head First HTML5 Programming. 2011.</li>\n<li>Jon Duckett, JavaScript and jQuery: Interactive Front-End Web Development. 2014.</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,4,'CT');
INSERT INTO modules VALUES('MT1720','','','Functions of Several Variables','',4,'Maths','','',15,'','','','','','150','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('MT2800','','','Linear Algebra and a Group Project','',5,'Maths','','',15,'','','','','','150','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('DC2845','','','Data Analytics and Visualisation','',5,'Computer Science','','',15,'',' ','','',' ','150','',' ',' ','WITHDRAWN',0,1,'DC');
INSERT INTO modules VALUES('CS2800','','','Software Engineering','',5,'Computer Science','','',15,'','CS1811; CS1812 or CS1813','',replace('understand the software engineering techniques and managerial discipline required to work as part of a team\nunderstand and use basic object-oriented concepts\nappreciate the need for program documentation, testing, readability and modifiability\nuse appropriate tools to support software development: Version control, programming standards, a modern IDE,\nbe able to use test driven development to deliver a small scale project.','\n',char(10)),'Introducing software Engineering tools and techniques through practical experience of design and development that enable each individual programmer to contribute effective, working, documented code, as part of a team, in a timely fashion.','150','',replace('<ul><li>Cary S. Horstmann: Object Oriented Design And Patterns, 2nd Edition, Wiley, 2005, ISBN 978 0471744870</li>\n<li>E. Freeman, E. Freeman: B. Bates and K. Sierra, Head First Design Patterns, O’Reilly, 2004, ISBN 978 0596007126</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS2821','I112','','Systems Programming','',5,'Computer Science','2016-17','Term 2',15,'','CS2850','',replace('demonstrate a working understanding of program execution using a simplified model of the main memory hierarchy\nexplain the implementation of data structures at the level of memory references\nbe able to interact with the operating system via system calls\nunderstand memory management, interrupts, sockets and basic threading in C\nwrite simple shell scripts to automate the processing of batch jobs','\n',char(10)),replace('The aim of this course is to develop an understanding of the interaction between application software and the operating system. The course covers aspects such as the computer model (e.g. CPU/main memory backing store, the pigeon hole model of memory, indexing and pointer hopping, heap management), performance (abstracting performance, counting basic operations, impact of cache), procedural languages (dynamic memory handling in C and in comparison to Java; interrupts, pipes, sockets, file i/o and starting processes in C), and scripting (batch processing of simple shell commands, handling of command line arguments, filesystem navigation, loops and conditionals).\n','\n',char(10)),'150','',replace('Frantisek Franik: Memory as a Programming Concept in C and C++, Cambridge University Press, 2004 ISBN 10:0521520436 Herbert Schildt: C++ A Beginners Guide. McGraw-Hill 2003 (2nd edition)\nW. R. Stevens, S. A. Rago:  Advanced Programming in the UNIX Environment, Addison-Wesley Professional 2005 (2nd Edition)\nC. Abling, JP Vossen, C. Newham: Bash Cookbook, O''Reilly Media, 2007\nBrian W. Kernighan Dennis M Ritchie: The C programming language, Englewood Cliffs, N. J., Prentice Hall 2nd ed. c1988\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('CS3821','','','Full Unit Project','',6,'Computer Science','','',30,'','CS2800','',replace('understand complex ideas and identify solutions to a problem,\napply scientific and software/hardware techniques to solving a problem,\nanalyse the solution to a problem and evaluate the associated results\ndemonstrate the ability to plan, organise and present the project work both in written form and orally,\nunderstand legal, social, ethical and professional issues.','\n',char(10)),replace('<p>To provide the opportunity to demonstrate independence and originality, to plan and organise a large project over a long period, and to put into practice the techniques taught throughout their degree course. Related to individual project.</p>\n<p>Legal, social, ethical and professional issues.</p>','\n',char(10)),'300','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X<br/>\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project - with Success!: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2002: ISBN-10: 1852333324</br>\nRichard Epstein: The case of the Killer Robot, John Wiley & Sons, 1997:                      ISBN 978-0471138235.','\n',char(10)),'','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('CS3510','','','Functional Programming and Applications','',6,'Computer Science','','',15,'','','',replace('Understand the basic principles of functional programming; its basic ideas, foundations, advantages as compared with imperative programming paradigm\nMaster the fundamental programming concepts such as recursion, abstraction, higher-order functions and data types\nGrasp skills in developing elegant, efficient, correct, and reusable programs, using the key features in functional programming languages\n Understand the advantages and disadvantages of different programming paradigms as compared to each other and, on the basis of this, the basic ideas of combining different programming styles in a uniform paradigm\n Understand the basic foundational principles of functional programming and some of the advanced issues such as genericity, polymorphism and typing in functional programming','\n',char(10)),'This course introduces the principles of functional programming (FP). Functional programming has become more and more popular in recent years because it promotes code that’s safe, concise, and elegant, and makes it easier to write parallel code for parallel computing.  You will also study how FP may be combined with other programming paradigms (eg, OOP) in languages such as Scala, a language that fuses FP and OOP in a practical package for applications.','150','',replace('<ul><li>M. Odersky, L. Spoon and B. Venners.  Programming in Scala. 2nd ed. Dec 2010.</li>\n<li>S. Thompson. Haskell: The Craft of Functional Programming. 3rd ed. 2012.</li>\n<li>C.S. Horstmann. Scala for the Impatient. Addison-Wesley 2012</li></ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,1,'CS');
INSERT INTO modules VALUES('CS4950','I400, I430, I460','','Deep Learning','',7,'Computer Science','2018/19','Spring Term',15,'','CS2900','',replace('Demonstrate an advanced understanding of the notions of an artificial neural network, and of learning by minimising a loss function, using training, validation, and test data sets.\nMaster computation of loss-gradients for different neural network architectures, and of a range of algorithms for optimisation by gradient descent, as applied in neural networks.\nDemonstrate a good comparative understanding of a range of deep learning architectures.\nMaster the basic techniques necessary for gradient optimisation of deep networks, and of some diagnostics needed for determining whether gradient descent is working correctly.\nApply deep learning algorithms to real-world data and evaluate the results.\nImplement and run deep learning algorithms using appropriate tool-kits.','\n',char(10)),replace('The aim of the course is to give students an introduction to deep learning that covers neural network optimisation by gradient descent from first principles, and which also gives a broader introduction to a range of advanced architectures, with hands-on implementation.\nThe course starts by considering models of artificial neural networks for supervised learning, and introduces notions of activation function, loss function, and computation of loss-gradients using back-propagation with the chain rule. Neural network learning with back-propagation and different gradient descent algorithms will be covered in detail, and visualised in lab-sessions.  Next, the ''disappearing gradient'' problem in deep architectures will be raised, and methods for resolving this problem will be discussed. A range of deep architectures will be described for discriminative learning, generative learning and learning of representations, and for reinforcement learning.  Students will implement a deep architecture using a toolkit in a project assignment at the end of the course.\n','\n',char(10)),'150','',replace('Deep Learning, by Ian Goodfellow, Yoshua Bengio, and Aaron Courville, MIT Press Dec 2016 (already available on web)\nThe course will make extensive use of notes, handouts, and freely available material on the web, which is abundant and rapidly changing.\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS3760','I100','','Information Security','',6,'Computer Science','2018/19','Autumn Term',15,'','','IY2760',replace('Identify, through the case studies how information security may be influenced by real world design and implementation decisions.\nDemonstrate an understanding of the different cryptographic algorithms, their use, advantages and disadvantages.\nApply the above identified cryptographic primitives in the review and evaluation of cryptographic protocols.\nAppreciate the rational decisions in the design of a number tokens and secure elements.','\n',char(10)),replace('The aims of this course include providing a breadth of knowledge in Information Security and providing the background needed to study the subject area at different levels of specialisation.\nCourse content:\nIntroduction: What is security (covering notions of Confidentiality, Integrity, and Availability)? Security threats and risks. Security management (ISO/IEC 17799). Data Protection legislation.\nElements of cryptography: Ciphers (DES/AES). Message Authentication codes (MACs). Public key ciphers and digital signatures (RSA).\nIdentity verification: use and storage of conventional passwords. Dynamic password schemes. Biometric techniques. Use of tokens (dumb and intelligent), including the use of secure elements such as smart cards and trusted execution environments (TEEs)\nAccess control: Access Control Lists, capabilities, security labels (MAC and DAC), and role-based access control.\nCASE STUDY I: electronic payments (EMV). Examine the overall security functionality provided by widely utilised Europay- Mastercard-VISA (EMV) standard.\nNetwork security concepts: the concepts of security services and security mechanisms (as in ISO 7498-2) firewalls.\nComputer security: viruses, spyware, restricting access.\nAuthentication and key distribution: The importance and relatedness of the concepts of key management and entity authentication in a network. Objectives of an entity authentication protocol. Some fundamental protocols (e.g. Kerberos). Using authentication protocols for key distribution, and other approaches to key establishment (including public key certificates and X.509).\nCyber Physical security, Examine the security provisions, strengths and weaknesses of existing multi-application smart card platforms and operating systems along with the security of embedded systems and tokens.\nCASE STUDY II: Chip migration for financial institutions. Examine the relevant information security, business, design,\narchitectural and other factors that may influence the adoption of chip card technology by financial institutions.\n','\n',char(10)),'150','',replace('D. Gollmann, Computer Security, John Wiley & Sons, 2005 (2nd edition).\nC.P. Pfleeger and S. L. Pfleeger, Security in Computing, Prentice Hall, 2006 (4th edition).\nW. Ford, Computer Communications Security, 1994.\nK. Martin: Everyday Cryptography, Oxford University Press 2012.\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('CS4504','I200, I420','','Business Intelligence Systems, Infrastructures and Technologies','',7,'Computer Science','2017-18','Term 2',15,'','CS2855','',replace('demonstrate a holistic view of business intelligence systems and their role in the IT environment of modern organizations\nunderstand end evaluate the concepts, terminology and architectures of Data Warehouses and BI solutions\nunderstand Data Modelling concepts and provide design solutions using Dimensional Modeling\nknow the important elements of business intelligence applications such as Data Analysis, Data Mining and Dashboards; understand and evaluate BI Visualization aspects and the relationship of BI solutions to CRM and ERP systems.\nuse industrial business intelligence tools','\n',char(10)),replace('Business Intelligence (BI) refers to the skills, processes, methodologies, technologies, applications, and practices used in order to leverage (gathering, storing, analyzing) an organization''s internal and external information assets to support and improve decision-making. With the advent of Big-Data there is considerably increased demand for skills and knowledge, both conceptual and technological, that can be effectivelly applied to support this new era of Big-Data based decision-making.\nThis course aims to provide students with\n(a) a broad understanding of the information assets and the conceptual and technical architectures of information and business intelligence systems in modern organizations\n(b) the necessary background knowledge of, and skills to design, implement and evaluate business intelligence systems and technologies.\nCourse Content includes the following topics:\nIntroduction to Information Systems & Business Intelligence: Overview of Information Systems and BI Systems, Information Systems and BI Technical Architectures (Logical & Physical aspects), Acquisition models and Business cases.\nData Warehousing and Dimensional Modelling (Defintions, Concepts, Architectures, Design Processes, Implementation Aspects)\nBI Applications: OLAP, Reports, Dashboards, Data Mining, Visualization and UI design\nPractical Sessions (Surgeries, Labs) on Dimensional Modelling, Reports and Dashboards using BI tools.\n','\n',char(10)),'150','',replace('1.  R. Sherman: "Business Intelligence Guidebook, From Data Integration to Analytics", 1st edition, 2014.\n2. .E.Turban, R.Sharda, D.Delen, D. King: “Business Intelligence: A Managerial Approach”, 2nd edition, 2011.\n3.  R.Kimball, M. Ross:  “The Data Warehouse Toolkit, The Complete Guide to  Dimensional Modeling”, 2nd edition, 2001\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('IY3501','I100','','Security management','',6,'Information Security','2018/19','Autumn Term',15,'','','IY4501',replace('analyse information security risks, strategies and methods\nevaluate security management requirements\ndefine security treatments to meet identified requirements\nperform ongoing security functions, including internal and external audit','\n',char(10)),replace('This course will explain the need for effective security management, identify the main elements of security management, and consider the ways in which organisations implement security management.\nThe list of topics may vary slightly to reflect developments in the subject but typically will include:\nWhat is information security management and is it necessary?\nThe role of standards in information security management, with emphasis on the ISO/IEC 27000 series.\nSecurity controls and ISO/IEC 27002.\nInformation security risk management.\nLegal and regulatory aspects of information security.\nInternal control, audit and security.\nIncident management and disaster recovery.\nStaff management.\nProcedural issues.\nFailures in information security management.\nCase studies in information security management\n','\n',char(10)),'150','',replace('Andy Taylor (ed.), David Alexander, Amanda Finch and David Sutton, Information Security Management Principles, 2nd edition, BCS, 2013.\nSteve Purser, A Practical Guide to Managing Information Security, Artech House, 2004.\nISO/IEC 27000 series standards.\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS4200','I460','','On-line Machine Learning','',7,'Computer Science','2018/19','Spring Term',15,'','','',replace('understand and evaluate probabilistic and non-probabilistic on-line learning protocols;\ndemonstrate advanced understanding of the prediction with expert advice and reinforcement learning frameworks;\ndemonstrate advanced knowledge of methods of Markov models, time series, prediction with expert advice and reinforcement learning;\nanalyse the properties of on-line learning algorithms;\napply on-line algorithms to real-world data and evaluate the results.','\n',char(10)),replace('The course addresses the on-line framework of machine learning in which the learning system learns and issues predictions or decisions in real time, perhaps in a changing environment. The course teaches protocols, methods and applications of on-line learning.\nCourse content:\nMarkov chains and their applications; PageRank. Markov chain Monte-Carlo. Hidden Markov models.\nTime series. ARMA model. Kalman filters.\nPrediction with expert advice: learning protocol, loss function, regret.\nAggregating algorithm, its optimality properties and applications to general loss functions. Sleeping and switching experts.\nUniversal algorithms in on-line learning. Applications to portfolio theory: Cover’s universal rebalanced portfolios.\nReinforcement learning framework, Markov decision process, Q-learning.\n','\n',char(10)),'150','The course mainly relies on handouts, notes and freely available materials. No book purchases are expected.',replace('C. Bishop, Pattern Recognition and Machine Learning, Springer, 2006\nD. Barber, Bayesian Reasoning and Machine Learning, Cambridge, 2012.\nR. H. Shumway and D. S. Stoffer Time Series Analysis and Its Applications With R Examples, 3rd ed., Springer 2011.\nN. Cesa-Bianchi and G. Lugosi. Prediction, Learning, and Games. Cambridge University Press, 2006.\nR.S.Sutton and A.G.Barto. Reinforcement learning: an introduction, MIT Press, 1998.\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS3220','I150','','Digital Audio and Applications','',6,'Computer Science','2016-2017','Term 1',15,'','','',replace('explain digital audio and  the fundamentals of AD/DA conversion\nuse Fourier analysis to synthesize and transform sounds in the frequency domain\ndemonstrate an understanding lossy and losseless compression algorithms\nexplain the basics of digital signal processing (post-processing and effects)\ndevelop applications of digital audio (music production, noise cancellation, audio enhancement, automatic music generation)\nacquire a basic knowledge of sound perception and  psychoacoustics','\n',char(10)),replace('Digital audio has many applications, ranging from music production to audio enhancement, or from noise cancellation in mobile phones to automatic music generations for games. These applications share common features that will be covered in this course. Starting with the fundamentals of sound (nature, transmission, volume), students will then learn how to convert sound to and from the digital domain. Once in the digital domain, audio can be manipulated using algorithms from Digital Signal Processing. The course covers some basic DSP algorithms, engaging the students both in audio analysis (amplitude, frequency, pan, etc.) and audio synthesis (additive , FM, etc.). By the end of this course, students should be able to write simple applications that analyse, manipulate and generate sound.\n','\n',char(10)),'150','',replace('Musimathics, volumes 1 & 2, Gareth Loy, The MIT press, 2011\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'DORMANT',0,4,'CS');
INSERT INTO modules VALUES('CS2865','I130','','Mathematical Structures','',5,'Computer Science','2017/18','Autumn',15,'','','CS1860',replace('reason about sets, relations, functions and cardinality\nreason about recursive definitions and prove results by induction\nrepresent problems and reason about them using graphs\ndemonstrate an understanding of basic probability and statistics suitable for use in studying artificial intelligence and information security','\n',char(10)),replace('The aim of this module is to provide (1) insights and skills in rigor and formal reasoning in a way that allows reasoning about behaviour, correctness and performance in a programming environment; and (2) basic knowledge of the formal structures for program data representation. The course content includes: structures such as sets, relations, functions and cardinality; recursion and proof by induction; graphs; basic probability and statistics.\n','\n',char(10)),'150','',replace('Rosen: Discrete Mathematics And Its Applications, McGraw Hill, 2006\nRoss and Wright: Discrete Mathematics, Prentice Hall, 2003\nD. Velleman, “How To Prove It”, Cambridge University Press, 2006\n','\n',char(10)),'','ACTIVE',0,0,'DC');
INSERT INTO modules VALUES('IY3609','I112','','Digital forensics','',6,'Information Security','2016-17','Term 2',15,'','IY2760','',replace('understand the concepts of audit and indirect activity records retained by operating systems, particularly in file systems, and  how to retrieve such information\nunderstand selected network protocols and the collection and derivation of evidence leading to the reconstruction of system and user activity based on network trace information\nunderstand infiltration and anti-forensics techniques used particularly by malicious software\napply steganographic and particularly steganalytical methods for different types of media\nunderstand the retention characteristics of storage systems and non-standard devices such as mobile/smart phones, cloud computing, and vehicular systems','\n',char(10)),replace('Introduction to forensic science, steps from collecting data to preserving evidence, and a framework for digital forensic evidence collection and processing.\nFundamentals of host forensics for Microsoft Windows, including kernel architecture, device driver architecture, registry, auditing, and security architecture, file system handling, and reconstruction of file and directory structures on the FAT and NTFS file system families.\nFundamentals of host forensics for Unix derivatives using the Linux operating system as an exemplar, including kernel and device driver architecture, security and audit mechanisms, file systems and pseudo file systems, and the reconstruction of file and directory structures using UFS and Ext2/3fs as exemplars.\nFoundations of network forensics from data capturing and collection to network file systems and supplementary protocols as well as selected application-layer protocols and techniques used for identifying and reverse-engineering protocols used on networks.\nIntroduction to malware including anti-forensics and propagation techniques.\nIntroduction to steganographic techniques for images, video, textual data, and audio as well as steganalytical techniques for selected media types and approaches to traitor tracing.\nA survey of non-standard storage mechanisms from retention characteristics to mobile and smart phones and vehicular systems as well as network-based search and storage mechanisms.\n','\n',char(10)),'150','',replace('K.J. Jones, R. Bejtlich, C. W. Rose: Real Digital Forensics. Addison-Wesley, 2006\nB. Carrier: File System Forensic Analysis. Addison-Wesley, 2005\nD. P. Bovet, M. Cesati: Understanding the Linux Kernel, 3rd ed. O’Reilly, 2006\nM. Russinovich, D.A. Soiomon, A. Ionescu: Windows Internals, 5th ed. Microsoft Press, 2008\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('MT2630','','','Graphs and Optimsation','',5,'Maths','','',15,'','','','','','150','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('CS1860','I130','','Mathematical Structures','',4,'Computer Science','2017/18','Autumn',15,'','','',replace('reason about sets, relations, functions and cardinality\nreason about recursive definitions and prove results by induction\nrepresent problems and reason about them using graphs\nunderstand basic probability and statistics suitable for use in studying artificial intelligence and information security','\n',char(10)),replace('The aim of this module is to provide (1) insights and skills in rigor and formal reasoning in a way that allows reasoning about behaviour, correctness and performance in a programming environment; and (2) basic knowledge of the formal structures for program data representation. The course content includes: structures such as sets, relations, functions and cardinality; recursion and proof by induction; graphs; basic probability and statistics.\n','\n',char(10)),'150','',replace('Rosen: Discrete Mathematics And Its Applications, McGraw Hill, 2006\nRoss and Wright: Discrete Mathematics, Prentice Hall, 2003\nD. Velleman, “How To Prove It”, Cambridge University Press, 2006\n','\n',char(10)),replace('Time allowed: 1 1/2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS3750','I115','','Concurrent and parallel programming','',6,'Computer Science','2014/15','Term 2',15,'','CS1801,CS2800','',replace('understand the theoretical underpinnings of concurrent programming\nunderstand deadlock and race conditions in shared states\nunderstand threaded and message passing paradigms and be familiar with writing software using these paradigms\nimplement different algorithms concurrently and understand how their performance varies\ndescribe wide variety of concurrent platforms, ranging from multi-core processors to PC farms to more widely distributed computing','\n',char(10)),replace('Aims :- To introduce the principles and practical implementations of concurrent programming, to implement algorithms in a concurrent fashion, and to give an understanding of the variety of different concurrent architectures available\nContent :-\nCSP: events, processes, choice, synchronisation, traces, transition diagrams, interleaving, specification.\nBehaviour of processes: explosion of possible states in concurrent processes in comparison to sequential programming, unexpected traces, deadlock.\nThreading paradigm: implementation in Java, launching threads, shared states and race conditions, locking, conditional locking and deadlock.\nMessage Passing paradigm: implementation in MPI, synchronization, broadcasting, one-to-one communication, synchronous and asynchronous communication.\nAlgorithms: at least one example of search, sort, graphs and dynamic programming implemented concurrently, limitations of concurrency. Characterisation of parallel algorithms.\nArchitectures: SIMD and MIMD, shared and distributed memory. Multi-core processors and supercomputing. Distributed and cloud computing.\n','\n',char(10)),'0','',replace('Cary S. Horstmann: Big Java, 4th Edition, Wiley, 2007, ISBN 987-0-470-55309-1\nA.Grama,A.Gupta,G.Karypis,V.Kumar: Introduction to Parallel Computing:ISBN-10: 0201648652\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('CS1830','I100','','Computing laboratory (games)','',4,'Computer Science','2016-17','Term 2',15,'','','',replace('Write simple 2D games program\nUnderstand the role of vectors in game development\nProduce state diagrams and use them in the development of simple games\nUse 2D gaming graphics: sprites, spritesheets and animations\nUnderstand and program gaming physics: collision detection and handling, gravity and ballistics','\n',char(10)),replace('During this course, students learn some basic concepts of 2D game design and apply them to the development of simple games. To achieve that goal, they learn about 2D graphics (sprites and spritesheets), animations (loops and sequences) and motion (position, velocity, acceleration). All those concepts require vectors, which are also extensively covered throughout the course. Furthermore, the course introduces basic concepts of game physics, such as collisions gravity and ballistics. The development should follow an object-oriented approach, and that topic is an important component of the course.\n','\n',char(10)),'150','',replace('Ian Millington – Artificial Intelligence for Games\nIan Millington – Games Physics Engine Development\nDavid Eberly – Game Physics\nChrister Ericsson – Real Time Collision Detection\nExtra textbooks are available at the following web sites:\nhttp://programarcadegames.com\nhttp://inventwithpython.com\n','\n',char(10)),'','DORMANT',0,3,'CS');
INSERT INTO modules VALUES('CS4825','I300','','MSci Team Project','',7,'Computer Science','2018/19','Autumn + Spring',60,'','CS2815,CS3821','',replace('Have a mastery of how to work within a small software company and deliver software within required user specifications.\nHave an ability to apply the practical and analytical skills as a software engineer.\nExhibit the ability to work co-operatively to deliver a significant piece of work.\nSynthesise information, ideas and practices to provide a quality solution together with an evaluation of that solution.\nShow awareness of wider customer contexts and the identification of problems that such contexts might deliver.\nExhibit critical self-evaluation of the process of developing a major piece of software.','\n',char(10)),replace('The main aim of this course is to give extensive experience to students in working in projects for real clients, as part of a team and operating as a company.\nTeams of students will: work in the context of a company where they have specific responsibilities; engage with real clients and determine their requirements for a significant piece of software; devise, estimate, design, implement, test, document and critically evaluate software; present their work and communicate their findings to the client.\n','\n',char(10)),'600','N/A',replace('Running an Agile Software Development Project, Mike Holcombe, ISBN-10: 0470136693.\n','\n',char(10)),'','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('CS1801','I100','','Object oriented programming','',4,'Computer Science','2016-17','Terms 1 and 2',30,'','','',replace('solve basic programming tasks\nunderstand and use basic object-oriented concepts\nappreciate the need for program documentation, testing, readability and modifiability','\n',char(10)),replace('This course teaches programming and object-orientation concepts. Students will learn about program basics (variables, types, scope, lifetimes),  control flow (if-constructs, for-loops, while-loops), data structures (strings, sets, lists, trees, algorithms), objects (classes, dynamic dispatch, interface, inheritance, generics), exceptions (throwing and catching) and file I/O (streams, file reading, writing and copying).\n','\n',char(10)),'300','',replace('Herbert Schildt: Java: a Beginner’s Guide, 4th Edition, McGraw-Hill, 2007, ISBN 0072263849\nCay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('IY3821','','','Full Unit Project in Information Security','',6,'Information Security','','',30,'','CS2800, IY2760, IY2840','',replace('understand complex ideas and identify solutions to an information security problem\ndemonstrate the ability to plan, organise and present the project work both in written form and orally\napply scientific and software/hardware techniques to solving an information security problem\nanalyse the solution to a problem and evaluate the associated results\nunderstand legal, social, ethical and professional issues.\nimplement secure solutions to software projects','\n',char(10)),'To provide the opportunity to demonstrate independence and originality, to plan and organise a large project with an Information Security emphasis over a long period, and to put into practice the techniques taught throughout their degree course.','300','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X<br/>\n\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project - with Success!: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2002: ISBN-10: 1852333324','\n',char(10)),'','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('CS3003','I300','','IT Project Management','',6,'Computer Science','2018/19','Autumn Term',15,'','CS2810,CS2815','',replace('Understand the fundamental concepts, terminology and cost elements of IT Projects.\nApply basic Project Planning techniques.\nExplain the procedures needed to monitor, control and report upon an IT Project.\nDemonstrate an understanding of the steps needed to build and maintain effective development teams.\nDiscuss and where appropriate apply the principles of Project Risk Management.\nExplain the ways in which appropriate quality attributes of the products of an IT Project can be assessed and assured.','\n',char(10)),replace('This course aims to assist students in appreciating the complexity of IT projects, and give insight of how these can be managed.\nCourse content:\nProject Management (PM) Fundamentals: fundamental definitions and terminology (e.g. Business Case, Project Constraints/Triangle, Portfolios and Programs Vs Projects, inter-alia,''); Main phases of IT Projects, with emphasis on the basics of requirements elicitation/analysis methods; Unique characteristics of IT projects/products in comparison to other domains; Agile Software Development vis-a-vis “traditional” IT Project Management.\nBudgeting and Estimation aspects: Investment Appraisal methods (TCO, ROI, NPV,''); CAPEX/OPEX costs and depreciation; Estimation approaches/methods; Models of S/W acquisition/licensing and common cost elements in IT projects; Basics of Procurement and Contracts Management.\nProject Organization: Project Governance Structure; Stakeholders Analysis; Role of Project Manager; Best-practices in projects’ organization.\nBasic Processes of a Project, from initiation to closing, with references to relevant industry standards and frameworks, such as PMI, ISO 21500 and Prince2.\nProject Planning: main activities and deliverables, with emphasis on techniques and tools such as Breakdown Structures, Network Analysis and Gantt charts; Project Management toolset demo/short lab.\nProject Monitoring, Control and Implementation Processes: main activities and deliverables, with emphasis on Change Management.\nFundamentals of Team Management: notion of Team and Team Building (e.g. Tuckman Model,''); Leadership Styles; Fundamental concepts and best-practices in Project and Team Communications, Decision-making, Conflict resolution, Negotiation, Goal-setting, Time and Meetings management; Important principles and rules of thumb in managing software development teams.\nProject Risk Management: fundamental concepts and terminology, the risk management process and related artifacts (e.g. risk register,''); Risk management in IT projects.\nProject Quality: main concepts, tasks and deliverables on project and product quality aspects; IT systems quality factors and key-metrics; Fundamental aspects of IT Testing; Introduction to ISO Quality Management Systems and quality improvement.\nThe IT Project Manager Skills, Profession and Code of Ethics: introduction and outline of relevant topics.\n','\n',char(10)),'150','',replace('Schwalbe, Kathy. Information Technology Project Management. Course Technology, (8th Ed), 2015, ISBN: 1285452348.\nField, Mike and Keller, Laurie. Project Management. Open University, International Thomson Press, 1998, ISBN: 1861522746.\nHughes, Bob and Cotterell, Mike. Software Project Management. McGraw-Hill (5th Ed), 2009, ISBN: 0077122798.\nBrooks, Frederick. The Mythical Man-month: Essays on Software Engineering. Addison Wesley (2nd Ed), 1995, ISBN: 0201835959.\nDeMarco, Tom and Lister, Tim. Peopleware: Productive Projects and Teams. Addison Wesley (3rd Ed), 2013, ISBN: 0321934113.\nAdditional readings and handouts will be provided on specific topics, e.g. relevant material from the Prince2 Manual and the PMBOK Guide, as well as papers and web resources.\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS2810','I300','','Team Project','',5,'Computer Science','2017-18','Term 2',15,'CS2800','CS1811,CS1812,CS1813','CS2815',replace('work in a team to produce a substantial product using software engineering techniques\napply managerial discipline and a professional attitude\nunderstand why project cost and effort is hard to estimate and why project quality is hard to prescribe\ndesign software following an agile process','\n',char(10)),replace('This course aims to assist students in appreciating the role of the computer professional through the practical experience of developing medium scale software as part of a team.\nCourse content:\nThe software lifecycle, including: software development, planning and documentation.\nTeam development, communication, managing risks and conflicts.\nPractical experience of standard industrial software engineering. Agile project management, use of version control in a team, IDEs, etc.\nA medium scale agile software development project, conducted by teams of students.\n','\n',char(10)),'150','',replace('Richard Whitehead: Leading a Software Development Team, Addison Wesley, 2001 ISBN 10: 0201675269\nCay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 978 0470553091\nKen Schwaber: Agile Software Development with Scrum.  Pearson Prentice Hall 2002.    ISBN 978 0132074896\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS2900','I100','','Multi-dimensional Data Processing','',5,'Computer Science','2017/18','Term 1',15,'','CS1860,CS1830','MT1820',replace('Demonstrate an understanding of how to carry out vector operations such as dot product, length etc. on vectors in arbitrary dimensions. Demonstrate an understanding of the geometrical interpretation of vectors in 2 and 3 dimensions, and its applications in computer graphics.\nDemonstrate an understanding of linear transformations and their representation as matrices, of the application of matrices to vectors, and of matrix operations and their interpretation in 2, 3 and higher dimensions.\nApply concepts  such as  matrix rank, transpose, upper and lower diagonal matrices, orthogonality, trace and symmetry.\nDemonstrate an understanding of Principal Components Analysis with SVD and Eigenvalues.\nDemonstrate an understanding of the properties of eigenvalues and eigenvectors, and their construction for a given matrix.\nThroughout all the topics, demostrate an understanding of the application of theoretical concepts and results in various areas of Computer Science.','\n',char(10)),replace('During this course the student will be introduced to a progression of topics in Linear Algebra, starting from an introduction to vectors and matrices, moving  to Singular Value Decomposition, the solution of linear equations and least squares, and then to eigenvalues and eigenvectors. The emphasis of this course will be computational, and a strong focus will be the Computer Science applications of the theoretical concepts covered.\n','\n',char(10)),'150','',replace('Linear Algebra, A Modern Introduction, 4th Edition, David Poole, ISBN-13 978-1-285-46324-7\nSchaum''s outlines Linear Algebra, Lipschutz and Lipson, McGraw Hill, ISBN-978-0-07-154353-8\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,1,'CS');
INSERT INTO modules VALUES('CS3930','','','Computational Finance','',6,'Computer Science','','',15,'','A-level Mathematics','',replace('demonstrate an understanding of mathematical and computational models of underlying and derivative securities;\nmaster techniques for pricing derivatives and for dynamic hedging;\napply these models and techniques for creating computer programs.','\n',char(10)),'To understand the key role played by the advent of derivatives, financial instruments which facilitate managing financial risks.  To understand pricing derivatives (and associated strategies of dynamic hedging) using advanced computational models are required.','150','',replace('<ul><li>John Hull, Options, Futures and Other Derivatives, 6th edition, Prentice-Hall, 2007.                    </li>\n<li> ISBN-10: 0131977059 (earlier editions starting from the 2nd are acceptable)</li>\n<li>Paul Wilmott Introduces Quantitative Finance, John Wiley, 2001. ISBN-10: 0471498629</li>\n<li>Paul Wilmott, Sam Howison, and Jeff Dewynne, The Mathematics of Financial Derivatives: A Student Introduction, Cambridge University Press, 1995. ISBN-10: 0521497892</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS3000','','','Randomness in Computing','',6,'Computer Science','2020/21','not fixed',15,'','CS1860,CS2860','',replace('explain fundamental concepts, advantages and limits of the use of randomness in efficiency of computation\ndemonstrate an understanding of basic concepts in discrete probability such as random variables and expectation, tail distribution, and the probabilistic method.\ndemonstrate some understanding of basic concepts in theoretical (computational) learning, such as PAC learning.','\n',char(10)),replace('This course will provide students with a basic understanding of probabilistic techniques in algorithms and data analysis. The aim will be to allow students to strengthen substantively their basic command of probability as an essential part of modern computing, enabling them to build confidence in probabilistic analysis as used in algorithms, data analysis and machine learning, as well as to expose them to advanced concepts in randomised algorithms and computational complexity.\nThe approach of the course will be to couple each part of basic discrete probability with its applications in computing and algorithms, so to cover both the theoretical basics in a sufficiently slow pace, while exemplifying its usage in the practice of algorithmic analysis.\nTopics to be dicussed include:\nEvents and Probability with Applications\nDiscrete Random Variables and Expectation\nApplications of Discrete Random Variables and Expectation\nBounding Tail Distribution\nStronger Bounds on Tail Distribution\nBalls and Bins\nHashing and Random Graphs\nThe Probabilistic Method\nElements of Statistical Learning\n','\n',char(10)),'150','',replace('Probability and Computing: Randomization and Probabilistic Techniques in Algorithms and Data Analysis (2nd Edition), by Michael Mitzenmacher, Eli Upfal. Cambridge Press, 2017.\n','\n',char(10)),NULL,NULL,0,0,'CS');
INSERT INTO modules VALUES('CS4100','I460','','Data Analysis','',7,'Computer Science','2018/19','Autumn Term',15,'','','',replace('Develop, validate, evaluate, and use effectively machine learning models and statistical models\nWork with methods and techniques such as clustering, regression, decision trees, and neural networks\nMore generally, extract value and insight from data','\n',char(10)),replace('The aim of the course is to acquaint the students with the main methods and techniques of data analysis.  In particular, it will cover the following topics. Supervised learning: classification, regression, and ensemble methods. Algorithm-independent machine learning. Unsupervised learning and clustering. Exploratory data analysis. Bayesian methods, including Bayes networks and causality.  Applications, such as information retrieval and natural language processing.\n','\n',char(10)),'150','',replace('James, Witten, Hastie, and Tibshirani, “An Introduction to Statistical Learning: with Applications in R”, Springer, New York, 2013\nHastie, Tibshirani, and Friedman, “The Elements of Statistical Learning”, second edition, Springer, New York, 2009\nDuda, Hart, and Stork, “Pattern Classification”, second edition, Wiley, New York, 2000\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer THREE questions\nNo credit will be given for attempting any further questions\nCalculators are permitted','\n',char(10)),'ACTIVE',0,1,'CS');
INSERT INTO modules VALUES('CS3480','','','Software Language Engineering','',6,'Computer Science','','',15,'','CS1811; CS1812 or CS1813; CS2810 or CS2815','',replace('Display a mastery of design and implementation techniques for programming languages\nDisplay design capability for the following formalisms: general context free parsing, term rewriting, attribute grammars, structural operational semantics\nExplain aspects of implementation techniques for the chosen formalisms\nUnderstand the industrial context for Domain Specific Languages\nUnderstand the software engineering context for Domain Specific Languages, especially the design lifecycle','\n',char(10)),replace('Summary                                                                               \n                                                                                      \nThis course studies the design and implementation of programming languages using compact specifications written in formal notations. Students complete a substantial in-course project.\n                                                                                      \nThe course complements CS3470. Neither course is a co-requisite for other, but students interested in compilers and code generation would benefit from pursuing both courses.                                                   \n                                                                                      \nTopics covered:                                                                       \n                                                                                      \nGeneralised context-free parsing and lexing                                           \nTerm rewriting                                                                        \nAttribute grammars                                                                    \nStructural Operational Semantics                                                      \nThe ART toolkit                                                                       \nAutomatic generation of interpreters from formal specifications                       \nLanguage design                                                                       \nThe Software engineering context for domain specific languages   ','\n',char(10)),'150','',replace('<ul><li>Software Language Engineering: Creating Domain-Specific Languages Using Metamodels, Anneke Kleppe,Addison-Wesley Professional, 2008, ISBN-10:0-321-55345-4</li>\n<li>Metamodelling for software engineering Cesar Gonzalex-Perez, Brian Henderson-Sellers, wiley Agust 2008, ISBN 978-0-470-03036-3</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS1823','I100','','Programming in Practice','',4,'Computer Science','2018-19','Term 1, Term 2',30,'','','',replace('program independently to solve a given problem.\nknow how to write an individual technical report..\nknow how to present a project, both at a practical demonstration and in a formal short presentation.\nhave been introduced to a programming environment for a particular event driven or embedded domain such as microprocessor coding, robotics coding, game development or interactive web development.\nwork effectively in a group on a significant programming project.\n','\n',char(10)),replace('Students in this course will apply programming concepts from the the very basic (variables, control flow, loops, methods) up to advanced concepts (event driven programming, embedded programming) and best practices. The course will follow a blended learning model incorporating lectures, practical exercises, project work and online assessment.\n','\n',char(10)),'300','',replace('Cay S. Horstmann: Big Java, 4th Edition, Wiley, 2010, ISBN 987-0-470-55309-1\nhttps://inventwithpython.com/\nIan Millington – Artificial Intelligence for Games\nDavid Eberly – Game Physics\nChrister Ericsson – Real Time Collision Detection\nJ. Kelly: LEGO Mindstorms NXT-G Programming Guide, Technology in Action Press, 2007, ISBN 10: 1590598717\nBrian Bagnell: Maximum Lego NXT: Building Robots with Java Brains, Variant Press 2007, ISBN 10: 097386491\n','\n',char(10)),'','DORMANT',0,3,'CS');
INSERT INTO modules VALUES('CS3870','I130','','Advanced Algorithms and Complexity (short title Advanced Algorithms)','',6,'Computer Science','2017/18','Term 1',15,'','CS1801,CS1860,CS2860','',replace('implement and reason about fundamental algorithms for a range of problems\ndescribe and apply various algorithm design strategies for the construction of efficient algorithms\nunderstand the significance of NP-complete problems and know ways to deal with them, such as heuristic approaches','\n',char(10)),replace('This course samples topics from various aspects of algorithms construction and analysis, including the following:\nGraphs, graph algorithms, and applications, e.g., directed and undirected graphs; directed acyclic graphs and acyclic orderings; and connectivity in directed graphs.\nAlgorithm design paradigms: General methods for designing and analysing efficient algorithms, such as dynamic programming, a more careful treatment of the divide and conquer method, and general strategies such as backtracking search or greedy approaches.\nFurther application areas, such as string algorithms, network flows, and logic problems.\nComplexity and lower bounds: NP-hardness and NP-completeness; problem reductions; conjectural lower bounds, and lower bounds against problems in P; and methods for dealing with NP-complete problems, including heuristic approaches, exact algorithms, and tractable special cases.\n','\n',char(10)),'0','',replace('T.H. Cormen, C.E. Leiserson, R.L. Rivest and C. Stein, Introduction to Algorithms, 3rd Ed., MIT Press, Cambridge MA, 2009.\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('IY4501','I100','','Security management','',7,'Information Security','2018/19','Autumn Term',15,'','','IY3501',replace('analyse information security risks, strategies and methods\nevaluate security management requirements\ndefine security treatments to meet identified requirements\nperform ongoing security functions, including internal and external audit','\n',char(10)),replace('This course will explain the need for effective security management, identify the main elements of security management, and consider the ways in which organisations implement security management.\nThe list of topics may vary slightly to reflect developments in the subject but typically will include:\nWhat is information security management and is it necessary?\nThe role of standards in information security management, with emphasis on the ISO/IEC 27000 series.\nSecurity controls and ISO/IEC 27002.\nInformation security risk management.\nLegal and regulatory aspects of information security.\nInternal control, audit and security.\nIncident management and disaster recovery.\nStaff management.\nProcedural issues.\nFailures in information security management.\nCase studies in information security management\n','\n',char(10)),'150','',replace('Andy Taylor (ed.), David Alexander, Amanda Finch and David Sutton, Information Security Management Principles, 2nd edition, BCS, 2013.\nSteve Purser, A Practical Guide to Managing Information Security, Artech House, 2004.\nISO/IEC 27000 series standards.\n','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('MT3000','','','Mathematics Project','',6,'Maths','','',-1,'','','','','','-10','','','','ACTIVE',1,NULL,'MT');
INSERT INTO modules VALUES('IY4610','','','Security Testing Theory and Practice','',7,'Information Security','','',15,'','IY2760','',replace('Understand  the legal aspects of carrying out a penetration test and an approach to preparing and managing such an audit.\nUnderstand, at a deep level,  network protocols; computer system architectures; and application systems.\nUnderstand  the vulnerabilities in existing protocols, systems, and applications.\nUnderstand  the security technologies designed to mitigate these vulnerabilities.  \nUnderstand how these vulnerabilities may be exploited in practice to penetrate a system.','\n',char(10)),'To give students a mastery of Security testing theory and practice','150','',replace('<ul><li>T. Wilhelm, Professional Penetration Testing, Syngress, 2010.</li>\n<li>S. McClure et al., Hacking Exposed 7: Network Security Secrets and Solutions. McGraw-Hill, 2012.</li>\n<li>A Harper et al., Gray Hat Hacking, 3rd ed. McGraw Hill, 2011.</li>\n<li>R. Stevens, TCP/IP Illustrated, Volume 1: The Protocols, Addison-Wesley, 1994.</li>\n<li>D. Stuttard, M.Pinto. The Web Application Hacker’s Handbook: Finding and Exploiting</li>\n<li>Security Flaws. John Wiley &amp; Sons, 2011. 2nd edition.</li>\n<li>M. Dowd et al., The Art of Software Security Assessment: Identifying and Preventing</li>\n<li>Software Vulnerabilities. Addison Wesley, 2006.</li>\n</ul>','\n',char(10)),'','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS2850','I110, I112','','Operating Systems','',5,'Computer Science','2017/18','Autumn',15,'','CS1811,CS1812,CS1813','',replace('demonstrate an understanding of the principles of computer operating systems\nevaluate the theory and practice of existing operating systems\ndemonstrate a working understanding of program execution, memory hierarchy, and the implementation of data structures\nunderstand system-level programming aspects such as memory management, interrupts, sockets and basic threading in C\nwrite simple shell scripts','\n',char(10)),replace('This course aims to introduce students to the principles of the function and architecture of operating systems, and also to give an understanding of how programs operate at system level. Course content includes:\nIntroductory topics: role of an operating system, computer architecture\nProcesses and threads: process management and scheduling, inter-process comunication, concurrency\nMemory: partitioning, swapping and paging, caching, virtual memory, page replacement algorithms\nFile systems: implementation and maintenance\nUNIX shell: starting programs, input and output streams, pipes, filters, utilities\nSystem-level programming: memory handling, processes, threads, synchronisation, I/O\n','\n',char(10)),'150','',replace('Andrew Tanenbaum, Herbert Bos: Modern Operating Systems, Pearson Education Limited, 4th edition, 2015.\nRandal Bryant, David O''Hallaron: Computer Systems: A Programmer''s Perspective, Pearson Education Limited, 3rd edition, 2016.\nW. R. Stevens, S. A. Rago:  Advanced Programming in the UNIX Environment, Addison-Wesley Professional 2005 (2nd Edition)\nBrian W. Kernighan Dennis M Ritchie: The C programming language, Englewood Cliffs, N. J., Prentice Hall 2nd ed. c1988\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS2847','I400','','Human-Computer Interaction','',5,'Computer Science','2017-18','Term 2',15,'CS2841','CS1840','',replace('understand what HCI is, its principles and challenges\nbuild simple prototypes using different media and technologies\nevaluate the usability and suitability of user interfaces\nundertake HCI tests, namely Web experiments\nunderstand how perception and cognition influence HCI','\n',char(10)),replace('This course introduces human-computer interaction aspects and challenges, and addresses the approaches that can be used to create interfaces matching users'' needs and expectations.\nCourse content includes: introduction to Human-Computer Interaction (definition and history,''); user experience (UX) vs. user interface (UI,''); heuristic evaluation; rapid prototyping; HCI studies/experiments.\n','\n',char(10)),'150','',replace('Alan Dix et al, Human Computer Interaction. 2003\nYvonne Rogers et al, Interaction Design: Beyond Human Computer Interaction. 2011.\nJakob Nielsen, Prioritizing Web usability. 2006.\nDon Norman, The Design of Everyday Things: Revised and Expanded Edition. 2013.\nEric Freeman. Head First HTML5 Programming. 2011.\nJon Duckett, JavaScript and jQuery: Interactive Front-End Web Development. 2014.\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,4,'DC');
INSERT INTO modules VALUES('CS3490','I100','','Computational Optimization','',6,'Computer Science','2018/19','Spring Term',15,'','CS2860','',replace('understand fundamental models of computational optimization (CO)\nexamine the fundamental algorithms for solving CO problems\napply theoretical and computational methods to analyse CO algorithms\nfurther develop algorithmic and mathematical skills','\n',char(10)),replace('This course will provide students with an understanding of fundamental models of computational optimisation (CO) and important algorithms for solving CO problems; enable students to analyse CO algorithms using theoretical and computational methods; and discuss and compare available software packages for solving CO problems.\nCourse content:\nLinear programming (LP) model. Formulating problems as LP problems.\nGraphical solution. Simplex method.\nDuality in LP. Decomposition of LP problems. LP software.\nInteger Programming (IP). IP models. Branch-and-Bound algorithm.\nCO problems. Polynomial-time algorithms. Greedy-type algorithms. Construction heuristics and local search for the TSP.\nTheoretical and computational analysis of heuristics and meta-heuristics.\n','\n',char(10)),'150','',replace('M.W. Carter, C.C. Price, Operations Research: A Practical Introduction, CRC, 2001 (001.424 CAR)\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('CS1831','I100','','Computing laboratory (games)','',4,'Computer Science','2016-17','Term 2',15,'','','',replace('Write simple 2D games program\nUnderstand the role of vectors in game development\nProduce state diagrams and use them in the development of simple games\nUse 2D gaming graphics: sprites, spritesheets and animations\nUnderstand and program gaming physics: collision detection and handling, gravity and ballistics','\n',char(10)),replace('During this course, students learn some basic concepts of 2D game design and apply them to the development of simple games. To achieve that goal, they learn about 2D graphics (sprites and spritesheets), animations (loops and sequences) and motion (position, velocity, acceleration). All those concepts require vectors, which are also extensively covered throughout the course. Furthermore, the course introduces basic concepts of game physics, such as collisions gravity and ballistics. The development should follow an object-oriented approach, and that topic is an important component of the course.\n','\n',char(10)),'150','',replace('Ian Millington – Artificial Intelligence for Games\nIan Millington – Games Physics Engine Development\nDavid Eberly – Game Physics\nChrister Ericsson – Real Time Collision Detection\nExtra textbooks are available at the following web sites:\nhttp://programarcadegames.com\nhttp://inventwithpython.com\n','\n',char(10)),'','DORMANT',0,3,'CS');
INSERT INTO modules VALUES('CS3001','','','Year in Industry','',6,'Computer Science','','',30,'','60% first year average, with 40% or more in all modules. 60% second year average, with 40% or more in all modules.','',replace('appreciate the importance of the impact of IT on commerce and industry focused on improving the efficiency and quality of information on the workforce\nunderstand imminent industry changes and what effect they will have\napply their knowledge and understanding to practical situations','\n',char(10)),'To give knowledge of the software tools important for industry and the day-to-day running of a company. To give insight into the managerial skills needed in industry.','300','','N/A','','ACTIVE',0,0,'CS');
INSERT INTO modules VALUES('IY4500','','','MSci Project in Information Security','',7,'Information Security','','',60,'','','',replace('Develop an advanced understanding of complex ideas and the identification of solutions to a problem\nDemonstrate a mastery of planning, organising and presenting project work both in written form and orally\nApply scientific and software / hardware techniques to solving a problem\nanalyse the solution to a problem and evaluate the associated results\ndevelop an advanced understating of legal, social ethical and professional issues\nimplement secure solutions to software projects.','\n',char(10)),replace(' To demonstrate and advanced ability to show independence and originality to plan and organise a large project over a long period and to put into practice the techniques taught throughout their degree course. \nThe content of each project is individual. The rules of choosing a project and designing a student own project is detailed in the project hand book. The topic of the project will be related to Information Security.','\n',char(10)),'600','','','','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('CS3250','','','Visualisation and Exploratory Analysis','',6,'Computer Science','','',15,'',' ','',replace('Have some of the skills and wisdom that are needed for open-ended exploratory analysis of data, and for the analytical presentation of the results of statistical analyses\nUnderstand and be able to construct linear projections of multivariate data; they should also have experience in using some non-linear dimension reduction methods\nhave some practical experience of using standard graph visualisation methods and evaluation of results\nBe aware of the dangers of data snooping, through practical experience of this\nBe able to make reasoned choices in representational mode, glyph design, and colour design for presentation graphics','\n',char(10)),'The course aims to teach the principles and arts of statistical visualisation and exploratory analysis of data.','150','',replace('<ul><li>Visualising data, by William S. Cleveland</li>\n<li>The elements of graphing data by William s. Cleveland</li>\n<li>The visual display of quantitative data, by Edward Tufle</li>\n<li>Envisioning information by Edward Tufle</li>\n</ul>','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'DORMANT',0,1,'CS');
INSERT INTO modules VALUES('CS4980','I400, I420, I461, I450, I270','','Autonomous Intelligent Systems','',7,'Computer Science','2019/20','Spring Term',15,'','CS2910','',replace('Have an advanced understanding of the principles and techniques to design and build autonomous intelligent systems\nUse of knowledge representation languages to build models of core components of an autonomous intelligent system\nUse a high-level programming language (e.g. Python) to efficiently implement algorithms for building autonomous intelligent systems\nDesign and build prototypes of autonomous intelligent systems to tackle real-world problems\nUse tools to tackle the new problems in the area of autonomous intelligent systems','\n',char(10)),replace('This specialist course focuses on acquiring a deep understanding of the principles and techniques that are needed to design and build autonomous intelligent systems (AISs). The course will start with an introduction to AISs and real-world examples of them. It will then cover knowledge representation and engineering techniques based on formal logic. The course will then tackle autonomous decision making techniques, from AI planning to probabilistic reasoning and Markov Decision Processes. The course will then cover reinforcement learning and techniques for cooperation and coordination both between artificial agents and between them and human beings. All these topics will be discussed both from a theoretical point of view, during the lectures, and from a practical point of view, during the labs.\n','\n',char(10)),'150','',replace('Artificial Intelligence: A Modern Approach (Third edition) by Stuart Russell and Peter Norvig\nScientific papers on the different topics covered by the course\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'ACTIVE',0,2,'CS');
INSERT INTO modules VALUES('CS3824','I110, I120, I200, I240, I250','','Project in Computing Technologies','',6,'Computer Science','2018/19','Terms 1 & 2',60,'','','',replace('understand ideas from a broad set of technologies and identify solutions to a problem\napply software/hardware techniques to solving a problem\nanalyse the solution to a problem and evaluate the associated results\ndemonstrate the ability to plan, organise and present the project work both in written form and orally\nunderstand legal, social, ethical and professional issues','\n',char(10)),replace('The aim of this project is to provide the opportunity for students to demonstrate responsibility, to plan and organise a broad range of technology-specific work over a long period, and to put into practice some of the techniques they have been taught throughout the programme.\nThe content of each project depends on the assigned topic. The rules for choosing a project are detailed in the Project Handbook.\n','\n',char(10)),'600','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project - with Success!: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2002: ISBN-10: 1852333324\nRichard Epstein: The case of the Killer Robot, John Wiley & Sons, 1997: ISBN 978-0471138235.\n','\n',char(10)),'','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('DC3811','I300','','Team Project in HCI','',6,'Computer Science','2017-18','Term 2',15,'','CS2846','',replace('work in a team to produce a substantial product using software engineering techniques, with a focus on HCI.\napply managerial discipline and a professional attitude.\ndesign software to provide good user experience and with usability as one of its main concerns.','\n',char(10)),replace('The course is practice-led, and exposes students to a medium scale agile software development project in the context of a team. HCI is embedded in this process, being a crucial requirement from day one. Students taking this course will design software with the aim of providing good user experience. Other course content/exercised skills include: communication, managing risks and conflicts, practical experience of standard industrial software engineering agile project management, use of version control in a team, IDEs, etc.\n','\n',char(10)),'150','',replace('Richard Whitehead: Leading a Software Development Team, Addison Wesley, 2001 ISBN 10: 0201675269\nCay S. Horstmann: Big Java,4th Edition, Wiley, 2010, ISBN 978 0470553091\nKen Schwaber: Agile Software Development with Scrum.  Pearson Prentice Hall 2002.    ISBN 978 0132074896\nAlan Dix et al, Human Computer Interaction. 2003\nYvonne Rogers et al, Interaction Design: Beyond Human Computer Interaction. 2011.\nJakob Nielsen, Prioritizing Web usability. 2006.\nDon Norman, The Design of Everyday Things: Revised and Expanded Edition. 2013.\n','\n',char(10)),NULL,'ACTIVE',0,2,'DC');
INSERT INTO modules VALUES('CS4910','I300','','Running a Small Business','',7,'Computer Science','2018/19','',15,'','','CS3910',replace('Understand and explain fundamental concepts, terminology and processes of a business and its operating environment.\nApply basic strategy and financial management techniques.\nUnderstand, analyze and compare types of Information Systems, architectural paradigms, acquisition models and key software applications of a modern business.\nComprehend the theoretical foundations of leadership and people management and be able to appraise their applicability in practice.\nExplain and where appropriate apply the principles of Risk Management.','\n',char(10)),replace('The main aim of this course is to give a good background to students on how to run a small company.\nCourse content:\nIntroduction – types of Businesses, Organizational Functions/Structures, Business Processes fundamentals.\nStarting a Business – Business Plan, Budgeting and Investment Valuation Methods (e.g. ROI, TCO, NPV), Fund-raising aspects.\nBasics of Strategy and Planning – e.g. Definitions, SWOT Analysis, Porter’s 5 forces, types/elements of plans.\nBusiness Financial Management – Basics of Accounting, Assets/Liabilities, CAPEX/OPEX, Balance Sheet, P&L, Cash Management, Financial Ratios.\nCapital Raising and the role/services of Banks – e.g. Financial Intermediation, Trade Finance, Payments, Loans, Financial Markets and Instruments.\nBasics of Information Systems – Overview & Landscape, underlying Technology elements, Architectural paradigms, Acquisition methods.\nERP and Human Resources Management Processes and Systems\nCustomer Relationship Management and Marketing concepts, CRM Systems\nFundamentals of Managing Oneself and Others – e.g. Leadership, Planning, Time and Stress Management, Negotiation, Goal-setting.\nRisk Management and Business Continuity elements\n','\n',char(10)),'150','N/A',replace('Good small business guide, 7th Edition: How to start and grow your own business, ISBN-10: 1408159597\nMichael Blackstaff, Finance for IT Decision Makers: A Practical Handbook, BCS, ISBN: 1780171226, 2012.\nK.C Laudon, J.P Laudon, Management Information Systems: Managing the Digital Firm, Pearson, ISBN-10: 0133898164.\nHBR''s 10 Must Reads for New Managers, Harvard Business Review, ISBN-10: 1633693023, 2017.\nHBR''s 10 Must Reads on Managing Yourself, Harvard Business Review, ISBN-10: 1422157997, 2011.\nHBR’s 10 Must Reads on Managing People, Harvard Business Review, ISBN-10: 1422158012, 2011.\nAdditional readings and handouts will be provided on specific topics, e.g. on Banks and Financial Services, Risk Management, Leadership, Negotiations, Time Management.\n','\n',char(10)),NULL,'WONTRUN',0,0,'CS');
INSERT INTO modules VALUES('MT2320','','','Probability','',5,'Maths','','',-1,'','','','','','-10','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('CS4821','I100','','MSci Individual Project','',7,'Computer Science','2017/18','Terms 1 & 2',60,'','CS2800','',replace('develop an advanced understanding of complex ideas and identify solutions to a problem\napply advanced scientific and software/hardware techniques to solving a problem\nanalyse the solution to a problem and evaluate the associated results\ndemonstrate a mastery of planning, organising and presenting the project work both in written form and orally\ndevelop an advanced understanding of legal, social, ethical and professional issues','\n',char(10)),replace('The aim of this project is to further the students'' knowledge of a particular computer science topic and to give them the opportunity of demonstrating their ability of working individually, whilst appling advanced scientific and software/hardware techniques to solving a problem.\nThe content of each project is individual. The rules for choosing a project and designing an own project are detailed in the Project Handbook.\n','\n',char(10)),'600','',replace('C. W. Dawson: The Essence of Computing Projects, A Student''s Guide, Prentice Hall, 2000: ISBN-10: 013021972X\nM. Berndtsson, J. Hansson, B. Olsson, B. Lundell: Planning and Implementing your Final Year Project - with Success!: A Guide for Students in Computer Science and Information Systems, Springer-Verlag, 2002: ISBN-10: 1852333324\nRichard Epstein: The case of the Killer Robot, John Wiley & Sons, 1997: ISBN 978-0471138235.\n','\n',char(10)),'','ACTIVE',1,0,'CS');
INSERT INTO modules VALUES('MT1810','','','Number Systems','',4,'Maths','','',15,'','','','','','150','','','','ACTIVE',0,NULL,'MT');
INSERT INTO modules VALUES('CS3580','','','Advanced Data Communications','',6,'Computer Science','','',15,'','CS1840','',replace('explain how multimedia communications work\ndescribe coding and compressing algorithms for text, image and video\ndescribe Internet technologies in terms of supporting QoS\ndemonstrate an understanding of most common security terms and concepts\ndescribe modern network security mechanisms and their applications\nexplain Internet network management issues and possible solutions','\n',char(10)),replace('To cover a range of important topics in modern data communications including text, image, audio and video transfer over networking infrastructures and recent trends in network management and network security<br/>\nIntroduction:  layering, abstraction, and standards. The ISO/OSI reference model. The Internet reference model.<br/>\nMultimedia communications: multimedia information representation, coding and compression, applications and standards, quality of service (QoS) requirements.<br/>\nInternet: IP addressing, routeing algorithms and routeing protocols, RIP, OSPF, the Internet multicast model, scheduling and queue management.<br/>\nSecurity in communication networks: security issues, security mechanisms, secure protocols.<br/>\nNetwork management: network management issues, infrastructure and framework for Internet management.\n','\n',char(10)),'150','','<ul><li>James F. Kurose and Keith W. Ross: Computer Networking: a top-down approach featuring the Internet, Addison-Wesley: ISBN-10: 0321227352</li><li>Fred Halsall: Multimedia Communications: applications, networks, protocols and standards, Addison-Wesley</li><li>William Stallings: Cryptography and Network Security: principles and practice, Prentice Hall: ISBN-10: 0131873164</li></ul>',replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are NOT permitted','\n',char(10)),'DORMANT',0,0,'CS');
INSERT INTO modules VALUES('CS3920','I460','','Machine Learning','',6,'Computer Science','2018/19','Autumn Term',15,'','','',replace('Demonstrate knowledge of the theoretical background in machine learning methods.\nHave an understanding of the main advantages and limitations of various approaches to machine learning and specific machine-learning algorithms.\nBe able to implement versions of several machine-learning algorithms.\nHave an understanding of some ways to apply the ideas and algorithms of machine learning in industry, medicine and other fields.','\n',char(10)),replace('The aim of the course is to acquaint the students with several key methods and techniques of machine learning.  In particular, it will cover the following topics. Nearest neighbours for classification and regression; interesting distances. Conformal prediction and conformalizing nearest neighbours. Ridge regression and Lasso. Inductive conformal predictors and cross-conformal predictors. Support vector machines for classification and regression. Kernel trick and its applications to the algorithms covered so far. Practically useful kernels. Conformalized versions.\n','\n',char(10)),'150','N/A',replace('Andreas C. Mueller and Sarah Guido (2016) Introduction to Machine Learning with Python. O''Reilly Media\nVineeth N. Balasubramanian et al. (2014) Conformal Prediction for Reliable Machine Learning. Elsevier\nGareth James et al. (2013) An Introduction to Statistical Learning. Springer\nTrevor Hastie et al. (2009) The Elements of Statistical Learning.  Second edition. Springer\nJohn Shawe-Taylor and Nello Cristianini (2004) Kernel Methods for Pattern Analysis. Cambridge University Press\nTom M. Mitchell (1997) Machine Learning. McGraw-Hill\n','\n',char(10)),replace('Time allowed: 2 hours\nAnswer ALL questions\nCalculators are permitted','\n',char(10)),'ACTIVE',0,1,'CS');
CREATE VIEW "reflexive_module_variants" AS select mod_code as major_code, mod_code as minor_code
from modules
union
select major_code, minor_code
from module_variants;
CREATE VIEW "term2_components" AS select reflexive_module_variants.minor_code as mod_code,set_order,name,description,pcnt,len,must_pass
from assessment_components
inner join leaders
on assessment_components.mod_code = leaders.mod_code
inner join reflexive_module_variants
on assessment_components.mod_code = reflexive_module_variants.major_code
where leaders.leader = 1 and (leaders.term = 2 or leaders.term = "Both");
CREATE VIEW "term2_coursework" AS select reflexive_module_variants.minor_code as mod_code,title,coursework.term,percent,deadline,feedback_deadline,comment,anonymous,mark_type,exempt_extension,substantial,set_order,component,submission_time
from coursework
inner join leaders
on coursework.mod_code = leaders.mod_code
inner join reflexive_module_variants
on coursework.mod_code = reflexive_module_variants.major_code
where leaders.leader = 1 and (leaders.term = 2 or leaders.term = "Both") and coursework.term = 2;
COMMIT;
